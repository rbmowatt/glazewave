{"version":3,"sources":["config/api.js","reducers/session.js","actions/types.js","reducers/index.js","store/index.js","config/cognito.js","lib/utils/session.js","lib/utils/cognito.js","components/layout/MainContainer.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/recipe/RecipeForm.js","components/recipe/Create.js","components/recipe/Edit.js","components/user/Edit.js","components/home/Home.js","components/home/Login.js","components/layout/Navbar.js","components/home/Page404.js","components/auth/PrivateRoute.js","components/recipe/RecipeRow.js","components/recipe/RecipeIndex.js","components/layout/StarBar.js","components/recipe/View.js","components/user/UserRow.js","components/user/UserIndex.js","App.js","serviceWorker.ts","index.tsx"],"names":["require","config","module","exports","host","process","port","initialState","isLoggedIn","isAdmin","session","state","action","type","Object","assign","combineReducers","storeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","cognitoConfig","apiUrl","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","setSessionCookie","Cookie","set","initSession","dispatch","get","JSON","parse","current_time","Date","now","expiration","hasSession","getCognitoSession","then","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","onSuccess","result","onFailure","err","Error","getSession","credentials","accessToken","jwtToken","idToken","refreshToken","token","user","userName","payload","email","groups","Array","indexOf","exp","remove","signOut","MainContainer","props","className","children","FormCard","icon","faTimesCircle","size","onClick","returnToIndex","UserForm","id","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","Username","onChange","e","handleInputChanges","name","placeholder","phone_number","loading","CreateUser","preventDefault","setState","formData","submitSuccess","values","axios","post","apiConfig","headers","data","setTimeout","history","push","catch","error","submitFail","errorMessage","response","message","currentTarget","value","this","Authorization","role","React","connect","faBowlingBall","color","images","map","image","i","key","removeImage","public_id","src","window","URL","createObjectURL","alt","faImage","RecipeForm","isPublic","recipe","rating","Create","FormData","append","is_public","forEach","file","files","from","target","uploading","filter","submitted_by","Spinner","length","Images","Buttons","content","EditRecipe","a","put","setValues","match","params","EditUser","Home","onSignOut","cognitoUtils","apiStatus","Component","Login","location","hash","search","to","Navbar","height","width","data-toggle","data-target","Page404","PrivateRoute","component","roles","rest","render","pathname","RecipeRow","style","marginBottom","deleteRecipe","RecipeIndex","recipes","bind","sort","b","delete","index","findIndex","splice","scope","StarBar","stars","faStar","RecipeView","pic","picture","UserRow","deleteUser","UserIndex","users","App","path","exact","CreateRecipe","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a7065edc.chunk.js","sourcesContent":["require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\n\nconst initialState = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'","import { combineReducers } from 'redux'\nimport session from './session'\n\nexport default combineReducers({\n  session\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"openid\",\n    \"email\",\n    \"profile\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import Cookie from \"js-cookie\"\n\nexport function setSessionCookie(session)\n{\n  Cookie.set(\"x-token\", session);\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(Cookie.get(\"x-token\"))\n    {\n      const session = JSON.parse(Cookie.get(\"x-token\"));\n      var current_time = Date.now() / 1000;\n      if ( session.expiration > current_time) {\n        return session;\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(Cookie.get(\"x-token\"))\n  {\n    Cookie.remove(\"x-token\")\n  }\nreturn false;\n}","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { hasSession, clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\n\n\nexport function initSession()\n{\n  return function (dispatch) {\n    let session = hasSession();\n    if(session)\n    {\n      getCognitoSession() // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n    }\n  return false;\n  }\n}\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession()) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = () => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      // Resolve the promise with the session credentials\n      const session = {\n        credentials: {\n          accessToken: result.accessToken.jwtToken,\n          idToken: result.idToken.jwtToken,\n          refreshToken: result.refreshToken.token\n        },\n        user: {\n          userName: result.idToken.payload['cognito:username'],\n          email: result.idToken.payload.email\n        },\n        groups : result.idToken.payload['cognito:groups'],\n        isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n        expiration : result.accessToken.payload.exp\n      }\n      resolve(session)\n    })\n  })\n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI,\n  initSession\n}","import React from 'react';\n\nexport const MainContainer = props =>{\n    return (\n        <header className=\"background rgba-black-strong\">\n            <div className=\"main-container\">\n                <div className=\"container\">\n                    { props.children }\n                </div>\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"Enter user's phone number\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.state.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div \n        onClick={() => props.removeImage(image.public_id)} \n        className='delete'\n      >\n        <FontAwesomeIcon icon={faTimesCircle} size='2x' />\n      </div>\n      <img src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  <div className='buttons fadein'>\n    <div className='button'>\n      <div><input type='file' id='single' onChange={props.onChange} /> </div>\n        <FontAwesomeIcon icon={faImage} color='#3B5998' size='10x' />\n    </div>\n  </div>","import React from 'react';\n\nexport const RecipeForm = props =>{\n    const isPublic = (props.recipe.isPublic === true ) ? 1 : 0;\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Recipe on a scale of 1-10?\n            <select value={props.recipe.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"is_public\"> Should this Recipe be Public to ALL logged-in Users?\n            <select value={isPublic} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"first_name\"> Name/Title </label>\n            <input type=\"text\" id=\"name\" defaultValue={props.recipe.name} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Recipe Title\" />\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"recipe\"> Recipe </label>\n            <textarea id=\"recipe\" defaultValue={props.recipe.recipe} onChange={(e) => props.handleInputChanges(e)} name=\"recipe\" className=\"form-control\" placeholder=\"Enter the Recipe Here!!\" />\n        </div>\n        { props.children }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n                Update Recipe\n            </button>\n           \n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { RecipeForm } from './RecipeForm';\n\n\nconst TITLE=\"Create Recipe\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            recipe: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            this.setState({headers});\n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('is_public', this.state.is_public);\n        formData.append('rating' , this.state.rating);\n        formData.append('name' , this.state.name);\n        formData.append( 'recipe', this.state.recipe);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/recipe`, formData, this.state.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/recipe');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n      removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/recipe');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <RecipeForm recipe={this.state.recipe} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading}>\n                            <div>\n                                <div className='buttons form-group col-md-12'>\n                                    {content()}\n                                </div>\n                            </div>\n                        </RecipeForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { RecipeForm } from './RecipeForm';\n\nconst TITLE = \"Edit Recipe\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditRecipe extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            recipe: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, headers).then(data => {\n                const recipe = data.data[0];\n                this.setState({ recipe});\n            })\n            .catch(error=>this.props.history.push('/recipe'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, this.state.values, this.state.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/recipe');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/recipe');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Recipe details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <RecipeForm recipe={this.state.recipe} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditRecipe)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.state.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/recipe');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { apiStatus: 'Not called' }\n  }\n\n  componentDidMount () {\n    //this.props.initSession();\n    if (this.props.session.isLoggedIn) {\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background\">\n        <div className=\"intro container-fluid\">\n        Welcome to Bake n' Flake!\n          </div>\n          <img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_75_75.png\" alt=\"bake n flake bakery\" height=\"75\" width=\"75\"/></a>\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n                {props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/recipe'}>\n                          Recipes</Link>\n                      }\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.session.user.userName}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (!session.isAdmin){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass RecipeRow extends React.Component {\n    render(){\n        return (\n            <tr key={this.props.recipe.id}>\n                <td>{this.props.recipe.name}</td>\n                <td>{this.props.recipe.submitted_by}</td>\n                <td>{this.props.recipe.rating}</td>\n                <td>{!this.props.recipe.isPublic ? 'Yes' : 'No'}</td>\n                <td>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div className=\"btn-group\" style={{ marginBottom: \"20px\" }}>\n                            <Link to={`recipe/${this.props.recipe.id}`} className=\"btn btn-sm btn-success btn-outline-secondary\">View Recipe </Link> \n                            { this.props.isAdmin &&  <Link to={`recipe/edit/${this.props.recipe.id}`} className=\"btn btn-warning btn-sm btn-outline-secondary\">Edit Recipe </Link> }\n                            { this.props.isAdmin && <button type=\"button\" className=\"btn btn-danger btn-sm btn-outline-secondary\" onClick={() => this.props.deleteRecipe(this.props.recipe.id)}>Delete Recipe</button> }\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        )\n    }\n}\nexport default RecipeRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport RecipeRow from './RecipeRow';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipes: [], headers : {}, isAdmin : false }\n        this.deleteRecipe = this.deleteRecipe.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe`, headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ recipes: data.data })\n            });\n        }\n    }\n\n    deleteRecipe(id ) {\n        axios.delete(apiConfig.host + apiConfig.port + `/api/recipe/${id}`, this.state.headers).then(data => {\n            const index = this.state.recipes.findIndex(recipe => recipe.id === id);\n            this.state.recipes.splice(index, 1);\n            this.props.history.push('/recipe');\n        })\n    }\n\n\n    render() {\n        const recipes = this.state.recipes;\n        return (\n            <MainContainer>\n                    <div className=\"row\">\n                    <div className=\"card um-main-body mx-auto\">\n                        <div className=\"card-block\">\n                        <div className=\"card-title\"><strong>Recipes</strong>\n                        { this.state.isAdmin &&  <Link to={'recipe/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Recipe</Link>}\n                        </div> \n                        <div className=\"card-text\">\n                        {recipes.length === 0 ?(\n                            <div className=\"text-center\">\n                                <h2>No recipe found at the moment</h2>\n                            </div>\n                        ) :(\n                        <div className=\"table-responsive-md\">\n                        <table className=\"table table-bordered table-striped\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Submitted_by</th>\n                                    <th scope=\"col\">Rating</th>\n                                    <th scope=\"col\">Private?</th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {recipes && recipes.map(recipe =>\n                                    (this.state.isAdmin || recipe.isPublic) &&\n                                    <RecipeRow recipe={recipe} deleteRecipe={this.deleteRecipe} isAdmin={this.state.isAdmin} key={ recipe.id }/>\n                                )}\n                            </tbody>\n                        </table>\n                        </div> )}\n                        </div>\n                        </div>\n                    </div>\n                 </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    let content = [];\n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size='1x' key={i+1} />);\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Recipe.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipe: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe/` + this.props.match.params.id, this.state.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/recipe') : this.setState({ recipe: data.data[0] });\n            })\n            .catch(error=>this.props.history.push('/recipe'));\n        }\n        if(this.state.recipe === [])\n        {\n            this.props.history.push('/recipe');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/recipe');\n    }\n\n    render() {\n        const recipe = this.state.recipe;\n        const pic = (recipe.picture  == null) ? 'no_photo.jpg' : recipe.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"recipe\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"recipe-title\">{recipe.name}</h3>\n                                <h5 className=\"submitted-by\">By <span>{recipe.submitted_by}</span></h5>\n                                <h5 className=\"review-no\">Rated: {recipe.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={recipe.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Recipe:</h5>\n                                <p className=\"recipe-description\">{ recipe.recipe }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeView)","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <tr key={this.props.user.Username}>\n                <td>{this.props.user.Username}</td>\n                <td>{this.props.user.name}</td>\n                <td>{this.props.user.email}</td>\n                <td>{this.props.user.phone_number}</td>\n                <td>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div className=\"btn-group\" style={{ marginBottom: \"20px\" }}>\n                            <Link to={`user/edit/${this.props.user.Username}`} className=\"btn btn-sm btn-outline-secondary\">Edit User</Link>\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => this.props.deleteUser(this.props.user.Username)}>Delete User</button>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport UserRow from './UserRow';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({ headers});\n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.state.headers).then(data => {\n            const index = this.state.users.findIndex(user => user.id === id);\n            this.state.users.splice(index, 1);\n            this.props.history.push('/user');\n        })\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n                <div className=\"row mx-auto\">\n                    <div className=\"card um-main-body mx-auto\">\n                        <div className=\"card-block\">\n                            <div className=\"card-title\">\n                                <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link>\n                            </div>\n                            <div className=\"card-text\">\n                                {users.length === 0 ?(\n                                <div className=\"text-center\">\n                                    <h2>No users found at the moment</h2>\n                                </div>\n                                ) :(\n                                <div className=\"container\">\n                                    <div className=\"table-responsive-md\">\n                                        <table className=\"table table-bordered table-striped table-responsive\">\n                                            <thead className=\"thead-light\">\n                                                <tr>\n                                                    <th scope=\"col\">Username</th>\n                                                    <th scope=\"col\">Full Name</th>\n                                                    <th scope=\"col\">Email</th>\n                                                    <th scope=\"col\">Phone</th>\n                                                    <th scope=\"col\">Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {users && users.map(user =>\n                                                <UserRow user={user} deleteUser={this.deleteUser} key={user.Username}></UserRow>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { initSession } from './lib/utils/cognito';\nimport './App.css';\nimport * as React from 'react';\nimport CreateUser from './components/user/Create';\nimport CreateRecipe  from './components/recipe/Create';\nimport EditRecipe  from './components/recipe/Edit';\nimport EditUser from './components/user/Edit';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport Navbar from './components/layout/Navbar';\nimport Page404 from './components/home/Page404';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport RecipeIndex from './components/recipe/RecipeIndex';\nimport RecipeView from './components/recipe/View';\nimport UserIndex from './components/user/UserIndex';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }  \nfunction mapDispatchToProps (dispatch) {\n    return {\n      initSession: () => dispatch(initSession())\n    }\n  }\nclass App extends React.Component{\n\n  componentDidMount () {\n    this.props.initSession();\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session}  />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          <Route path={'/recipe'} exact component={RecipeIndex} />\n          <PrivateRoute  path={'/recipe/edit/:id'} exact component={EditRecipe} session={this.props.session} />\n          <PrivateRoute  path={'/recipe/create'} exact component={ CreateRecipe } session={this.props.session} />\n          <Route  path={'/recipe/:id'} exact component={RecipeView } />\n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();"],"sourceRoot":""}