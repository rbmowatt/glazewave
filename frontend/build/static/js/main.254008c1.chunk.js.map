{"version":3,"sources":["lib/utils/session.js","reducers/session.js","actions/types.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","requests/BaseRequest.js","requests/UserBoardRequests.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","config/cognito.js","lib/utils/cognito.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","components/layout/StarBar.js","components/session/SessionCard.js","components/user/BoardCard.js","requests/UserRequests.js","requests/SessionRequests.js","actions/user_board.js","components/user/ProfileCard.js","components/user/Dashboard.js","actions/user.js","actions/user_session.js","components/session/SessionIndex.js","components/layout/Modal.js","requests/BoardRequests.js","requests/ManufacturerRequests.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","components/board/data/board_sizes.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/session/Edit.js","lib/utils/worldweather.js","components/session/View.js","components/board/BoardIndex.js","components/board/forms/BoardForm.js","components/board/Create.js","components/board/Edit.js","components/board/View.js","components/location/LocationRow.js","components/location/LocationIndex.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/location/LocationForm.js","components/location/Create.js","components/location/Edit.js","components/location/View.js","components/manufacturer/ManufacturerRow.js","components/manufacturer/ManufacturerIndex.js","components/manufacturer/ManufacturerForm.js","components/manufacturer/Create.js","components/manufacturer/Edit.js","components/manufacturer/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/worldweather.js"],"names":["clearSession","Cookie","get","remove","existingSession","session","JSON","parse","current_time","Date","now","expiration","hasSession","initialState","isLoggedIn","isAdmin","state","action","type","Object","assign","user_board","selected","data","user_boards","payload","concat","user_session","user_sessions","filter","item","id","querystring","require","BaseRequest","REQUEST_TYPE","wheres","withs","limit","page","label","orderBy","onSuccess","onFailure","e","apiAction","url","getEndpoint","getWhereString","getWithString","getlabel","getOne","create_bk","hdrs","headers","axios","post","create","method","delete","update","getHost","apiConfig","host","port","endpoint","withString","forEach","element","slice","length","stringify","error","console","log","accessToken","headersOverride","this","createFormRequest","formData","FormData","entries","key","value","append","UserBoardRequests","getImages","args","createImages","deleteImage","user","api","newState","boards","config","s3Conf","process","original","thumbnail","session_images","prepImages","setImages","img","parseInt","images","formattedImages","push","name","shapers","combineReducers","user_board_images","apiMiddleware","dispatch","next","dataOrParams","includes","defaults","baseURL","common","apiStart","request","then","catch","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","cognitoConfig","apiUrl","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","getCognitoSession","set","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","credentials","refreshToken","token","userName","email","jwtToken","groups","Array","indexOf","exp","signOut","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","apiStatus","Login","hash","search","MainContainer","loaded","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","history","uname","map","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","submitFail","errorMessage","role","EditUser","put","setValues","match","params","StarBar","content","rating","stars","i","faStar","withRouter","SessionImages","editSession","deleteSession","moment","createdAt","calendar","UserBoard","Location","board","UserBoardImages","editBoard","deleteBoard","Board","model","UserRequests","updateProfileImage","SessionRequests","UserBoardsLoaded","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","pictureFiles","pictureDataURLs","user_id","file","addImages","image","profile_img","class","rel","username","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","format","aria-valuenow","aria-valuemin","aria-valuemax","sessions","UserDashboard","loadUser","loadBoards","loadSessions","UserSessionRequests","locations","reduce","mappedArray","UserLocations","UserLoaded","UserSessionsLoaded","SessionIndex","viewSession","sessionRequest","sessionId","Modal","handleClose","show","showHideClassName","BoardRequests","ManufacturerRequests","TypeAheadInput","event","newValue","onBlur","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","shouldRenderSuggestions","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","onFocus","autoComplete","wrapperClass","display","createField","fieldPresets","input","matches","generic","missing","rule","sizes","UserBoardForm","propertyName","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","loadShapers","serialized","fields","form","rules","messages","prop","keys","CreateUserBoard","createUserBoard","prevProps","prevState","snapshot","noUpdate","uploading","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","handleNoResult","handleStatusUpdate","locRender","prediction","types","description","libraries","googleMaps","autocompletionRequest","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","SessionForm","showModal","hideModal","defaultName","pictures","initialValue","obj","Create","createSession","EditSession","wwConfig","WWO","createClient","responseType","subscription","locale","SessionView","setSelectedBoard","boardOptions","select","current_session","selectOptions","goBack","submitUpdate","UserSessionRequest","onLocationChange","onLocationBlur","d","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","setToken","getForecast","results","colors","depth","Infinity","loadWorldWeather","WWClient","marineWeatherApi","q","tide","defaultImage","session_id","loadSession","loadSessionImages","boardImage","change","propName","items","showBullets","showIndex","startIndex","onSlide","showTimeSelect","dateFormat","placeholderText","InputType","Select","options","valueKey","labelKey","notes","validate","_","isString","UserSessionSet","UserSessionUpdated","BoardIndex","viewBoard","boardId","BoardForm","manufacturers","models","is_public","files","submitted_by","EditBoard","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","loadBoard","loadBoardImages","user_board_id","s","showNav","Manufacturer","Sessions","UserBoardUpdated","LocationRow","viewLocation","City","editLocation","deleteLocation","LocationIndex","locationId","isPublic","faBowlingBall","removeImage","public_id","URL","createObjectURL","multiple","accept","faImage","LocationForm","Spinner","Images","Buttons","EditLocation","LocationView","pic","picture","ManufacturerRow","manufacturer","viewManufacturer","editManufacturer","deleteManufacturer","ManufacturerIndex","manufacturerId","ManufacturerForm","EditManufacturer","ManufacturerView","App","path","exact","CreateSession","CreateLocation","CreateManufacturer","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","REACT_WORLD_WEATHER_KEY"],"mappings":"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","file":"static/js/main.254008c1.chunk.js","sourcesContent":["import Cookie from \"js-cookie\"\n\nexport function setSessionCookie(session)\n{\n  Cookie.set(\"x-token\", session);\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(Cookie.get(\"x-token\"))\n    {\n      const session = JSON.parse(Cookie.get(\"x-token\"));\n      var current_time = Date.now() / 1000;\n      if ( session.expiration > current_time) {\n        return session;\n      }\n      clearSession();\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(Cookie.get(\"x-token\"))\n  {\n    Cookie.remove(\"x-token\")\n  }\nreturn false;\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\nexport const SET_USER = \"SET_USER\";\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : []\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState  = state.concat(action.payload);\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {SET_USER_SESSION, USER_SESSION_CLEARED, SET_USER_SESSIONS, SESSION_CREATED, DELETE_USER_SESSION, USER_SESSION_UPDATED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : []\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_SESSION:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case SESSION_CREATED:\n      newState  = state.concat(action.payload);\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import axios from 'axios';\nimport apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n\n    create_bk = (data, hdrs = {}) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return axios.post(this.getEndpoint() , data , headers)\n    }\n\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         //const headers = {...this.session.headers, ...hdrs};\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n\n       // return axios.put(this.getEndpoint() + `/` + entityId , data,  this.session.headers);\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n       \n    }\n\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = null,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import UserBoardRequests from './../requests/UserBoardRequests';\n\nconst initialState = [];\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    default:\n      return state\n  }\n}\nexport default user","const initialState = 0;\nconst api = (state = initialState, action) => {\nlet newState = state;\n  switch (action.type) {\n    case 'API_START':\n        return newState +1;\n    case 'API_END':\n        newState = state-1;\n        return newState;  \n    default :\n        return newState;\n}}\nexport default api;","const initialState = [];\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BOARDS':\n      return action.payload;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SESSION_IMAGES':\n      return (action.payload.length > 0) ?  prepImages(action.payload) : state;\n    case 'SESSION_IMAGES_ADDED' :\n      return setImages(state).concat(prepImages(action.payload))\n    case 'SESSION_IMAGE_DELETED' :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload.id)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_USER_BOARD_IMAGES':\n      return (action.payload.length > 0) ?  prepImages(action.payload) : state;\n    case 'USER_BOARD_IMAGES_ADDED' :\n      return setImages(state).concat(prepImages(action.payload))\n    case 'USER_BOARD_IMAGE_DELETED' :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload.id)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","const initialState = [];\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SHAPERS':\n      return action.payload;\n    default:\n      return state\n  }\n}\nexport default shapers;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd } from \"./../actions/api\";\nimport apiConfig from './../config/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n   const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n        console.log('error', error)\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"openid\",\n    \"email\",\n    \"profile\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nconst axios = require('axios');\n\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession()) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = () => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n\n     \n\n      // Resolve the promise with the session credentials\n    \n\n      axios.get( apiConfig.host + apiConfig.port + `/api/user?username=` + result.idToken.payload['cognito:username']).then(data => {\n        console.log('getting new session', data.data[0]);\n        const session = {\n          credentials: {\n            //accessToken: result.accessToken.jwtToken,\n            //idToken: result.idToken.jwtToken,\n            refreshToken: result.refreshToken.token\n          },\n          user: {\n            //id : data.data[0].id,\n            userName: result.idToken.payload['cognito:username'],\n            email: result.idToken.payload.email\n          },\n          headers: `Authorization: Bearer ${result.accessToken.jwtToken}`,\n          groups : result.idToken.payload['cognito:groups'],\n          isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n          expiration : result.accessToken.payload.exp,\n          isLoggedIn : true\n        }\n        session.user = {...session.user, ...data.data[0]};\n        resolve(session);\n      });     \n\n     \n    })\n  })\n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          My Memo</Link>\n                      }\n \n                {props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.session.user.userName}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (!session.isAdmin){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { apiStatus: 'Not called' }\n  }\n\n  componentDidMount () {\n    //this.props.initSession();\n    if (this.props.session.isLoggedIn) {\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n        <div className=\"intro container-fluid\">\n        Welcome to MySurfSesh\n          </div>\n          <img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={this.props.api === 0}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.Username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const onClick = (rating) =>\n    {\n        console.log(rating)\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className={props.className}>\n            <div className=\"col-md-12 session-card-title\"><h5><a onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</a></h5></div>\n            <div className=\"col-md-3\">\n                <img src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n            </div>\n            <div className=\"col-md-9\">\n                <div className=\"col-md-12\">\n                    { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                    { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteSession(props.session.id)} /> }\n                </div>\n                <div className=\"col-md-12\" >{moment(props.session.createdAt).calendar()}</div>\n                <div className=\"col-md-12\" ><StarBar stars={props.session.rating} /></div>\n                <div className=\"col-md-12\" >{props.session.UserBoard && props.session.UserBoard.name}</div>\n                <div className=\"col-md-12\" >{props.session.Location && props.session.Location.name}</div>\n        </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = props =>{\n    return (\n        <div className={props.className}>\n            <div className=\"col-md-12 board-card-title\"><h5><a onClick={()=>props.history.push(\"/board/\" + props.board.id)}>{props.board.name}</a></h5></div>\n            <div className=\"col-md-3\">\n            <img src={props.board.UserBoardImages && props.board.UserBoardImages.length ? s3Conf.root + props.board.UserBoardImages[0].name : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n          \n            </div>\n            <div className=\"col-md-9\">\n            <div className=\"col-md-12\">\n                { props.editBoard && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editBoard(props.board.id)} /> }\n                { props.deleteBoard && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteBoard(props.board.id)} /> }\n            </div>\n            <div><StarBar stars={props.board.rating} /></div>\n            <div>{props.board.size} {props.board.Board && props.board.Board.model}</div>\n               \n                \n            </div>\n        </div>\n    )\n}\nexport default withRouter(BoardCard);","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n}\nexport default UserRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { SET_USER_BOARDS, USER_BOARD_UPDATED } from \"./types\";\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\n\nconst mapStateToProps = state => {\n    return { user : state.session.user, session : state.session }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      addImages : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}}))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        console.log('pic files', pictureFiles.length)\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(new UserRequests(this.props.session), formData);\n        //this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n        <div class=\"container\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n            <div class=\"team-single\">\n                <div class=\"row\">\n                    <div class=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div class=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div class=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <h4 class=\"margin-10px-bottom font-size24 md-font-size22 sm-font-size20 font-weight-600\">{user.username}</h4>\n                            <p class=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </p>\n                            <div class=\"margin-20px-top team-single-icons\">\n                                <ul class=\"no-margin\">\n                                    <li><a href=\"javascript:void(0)\"><i class=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"javascript:void(0)\"><i class=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"javascript:void(0)\"><i class=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-8 col-md-7\">\n                        <div class=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 class=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p class=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div class=\"contact-info-section margin-40px-tb\">\n                                <ul class=\"list-style9 no-margin\">\n                                    <li>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-5 col-5\">\n                                                <i class=\"far fa-gem text-yellow\"></i>\n                                                <strong class=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div class=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-5 col-5\">\n                                                <i class=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong class=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div class=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-5 col-5\">\n                                                <i class=\"fas fa-envelope text-pink\"></i>\n                                                <strong class=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div class=\"col-md-7 col-7\">\n                                                <p><a href=\"javascript:void(0)\">{user.email}</a></p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <h5 class=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div class=\"sm-no-margin\">\n                                <div class=\"progress-text\">\n                                    <div class=\"row\">\n                                        <div class=\"col-7\">Positive Behaviors</div>\n                                        <div class=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div class=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} class=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard)","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport  MainContainer  from './../layout/MainContainer';\nimport { Link } from 'react-router-dom';\nimport SessionCard from './../session/SessionCard';\nimport BoardCard from './BoardCard';\nimport UserRequests from './../../requests/UserRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport UserSessionRequests from './../../requests/SessionRequests';\nimport {UserSessionsLoaded} from './../../actions/user_session';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {UserLoaded} from './../../actions/user';\nimport './css/Dashboard.css'\nimport ProfileCard from './ProfileCard';\nimport ImageUploader from 'react-images-upload';\n\nconst DASHBOARD_LIST_LIMIT = 3; \nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data, locations : state.user.UserLocations }\n  }\n\n  const withs = \n  {\n    user : ['UserLocation'],\n    boards : ['Board', 'UserBoardImage'],\n    sessions : ['UserBoard', 'SessionImage', 'Location']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n        loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, withs : withs.boards, onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n        loadSessions: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, withs : withs.sessions, onSuccess : (data)=>{return UserSessionsLoaded(data)}})),\n    };\n  };\n\nclass UserDashboard extends React.Component{\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSessions(new UserSessionRequests(this.props.session), this.props.session );\n        }\n    }\n    \n    render() {\n        const { user_sessions, boards, locations } = this.props;\n        return (\n           <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text dashboard-boxes\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-2\">\n                                        <div><Link to={'/session/create'} className=\"btn btn-sm btn-outline-secondary\"> New Session</Link></div> \n                                        <div><Link to={'/board/create'} className=\"btn btn-sm btn-outline-secondary\">New Board</Link></div> \n                                        <div><a className=\"btn btn-sm btn-outline-secondary\" href=\"#\">dddddd</a></div> \n                                    </div>\n                                    <div className=\"col-md-10 row\">\n                                         <div className=\"col-md-12\"><ProfileCard /></div>\n                                        <div className=\"col-md-6\">\n                                            Sessions\n                                            {\n                                                user_sessions && user_sessions.reduce((mappedArray, session, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <div key={session.id} className=\"card row\">\n                                                                <SessionCard session={session} key={session.id} className=\"row col-md-12\" />\n                                                                </div>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            Boards\n                                            {\n                                                boards && boards.reduce((mappedArray, board, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <div key={board.id} className=\"card row\">\n                                                                    <BoardCard board={board} key={board.id} className=\"row col-md-12\" />\n                                                                </div>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }                              \n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps )(UserDashboard)\n","import { SET_USER } from \"./types\";\n\n\nexport const UserLoaded = data => ({\n    type: SET_USER,\n    payload: data\n  });\n\n  \n\n","import { SET_USER_SESSION, SET_USER_SESSIONS, USER_SESSION_UPDATED, USER_SESSION_CLEARED  } from \"./types\";\n\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n","import 'react-confirm-alert/src/react-confirm-alert.css'; \nimport React, { Component } from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport  MainContainer  from './../layout/MainContainer';\nimport SessionRequests from './../../requests/SessionRequests';\nimport SessionCard from './SessionCard';\nimport Loader from 'react-loader';\n\nconst mapStateToProps = state => {\n    return { session: state.session, sessions : state.user_sessions.data, api : state.api }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadSessions: (request, session) => dispatch( request.get({ orderBy : 'created_at_DESC',  wheres : {user_id : session.user.id }, withs : ['UserBoard', 'Location', 'SessionImage'], onSuccess : (data)=>{ return { type: \"SET_USER_SESSIONS\", payload: data}}})),\n        deleteSession: (request, id) => dispatch( request.delete({id:id , onSuccess : (data)=>{ return { type: \"DELETE_USER_SESSION\", payload: id }}}))\n    };\n  };\n\nclass SessionIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { sessions: [], headers : {}, isAdmin : false }\n        this.deleteSession = this.deleteSession.bind(this);\n        this.editSession = this.editSession.bind(this);\n        this.viewSession = this.viewSession.bind(this);\n        this.sessionRequest = new SessionRequests(this.props.session);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            this.props.loadSessions(this.sessionRequest , this.props.session );\n        }\n    }\n\n    deleteSession(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    this.props.deleteSession(this.sessionRequest, id);\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editSession(sessionId) {\n        this.props.history.push('/session/edit/' + sessionId);\n    }\n\n    viewSession(sessionId) {\n        this.props.history.push('/session/' + sessionId);\n    }\n\n    render() {\n        const {sessions} = this.props;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Sessions\n                        { <Link to={'session/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Session</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row col-md-12\">\n                                {sessions && sessions.map(session =>                        \n                                    <SessionCard session={session} key={session.id}  className=\"col-md-3\" deleteSession={this.deleteSession} viewSession={this.viewSession} editSession={this.editSession}  />                              \n                                )}\n                                {\n                                    (!sessions  || sessions.length === 0) &&  <div className=\"col-12\"><h3>No sessionS found at the moment</h3></div>\n                                } \n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex)","import * as React from 'react';\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n          <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n        </section>\n      </div>\n    );\n  };\n\n  export default Modal;","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import React from 'react'\nimport { createField, fieldPresets } from 'react-advanced-form'\nimport Autosuggest from 'react-autosuggest';\n\n\n\nclass TypeAheadInput extends React.Component {\n  \n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            value: props.value || '',\n            suggestions : props.entity\n          };\n    }\n  \n    onChange = (event, { newValue } ) => {\n      console.log('key', newValue)\n        if(this.state.value !== newValue)\n        {\n          this.setState({\n            value: newValue\n          });\n        }\n      };\n\n      onBlur = (event) => {\n        if(this.state.value)\n        console.log('blur', event.target.value)\n          let vid = this.props.entity.find(x => x[this.props.keyName] === event.target.value);\n          this.props.setValue(this.props.name, vid ? vid.id : event.target.value)\n        };\n  \n\n    getSuggestionValue = suggestion => suggestion[this.props.keyName];\n  \n    renderSuggestion = suggestion => (\n        <div>\n          {suggestion[this.props.keyName]}\n        </div>\n      );\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value, reason }) => {\n      this.setState({\n        suggestions: this.props.getSuggestions(value, reason)\n      });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) =>\n    {\n      console.log(event.target);\n      //let vid = this.props.entity.find(x => x[this.props.keyName] === newValue);\n      this.props.setValue(this.props.name, suggestion.id)\n    }\n\n    shouldRenderSuggestions = (value) => {\n      return true\n    }\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState\n\n    const inputClassNames = [\n      'form-control',\n      touched && 'is-touched',\n      pristine && 'is-pristine',\n      validating && 'is-validating',\n      validatedSync && 'validated-sync',\n      validatedAsync && 'validated-async',\n      valid && 'is-valid',\n      validSync && 'valid-sync',\n      validAsync && 'valid-async',\n      invalid && 'is-invalid',\n      'sc-EHOje fVJbnH'\n    ]\n      .filter(Boolean)\n      .join(' ')\n\n      const inputProps = {\n        ...fieldProps,\n        value,\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        onFocus : ()=>this.onSuggestionsFetchRequested({value : name , reason : 'type_ahead_focused'}),\n        id: name,\n        name,\n        className: inputClassNames,\n        autoComplete: \"off\"\n      };\n\n    const wrapperClass = this.props.display ? \"sc-bxivhb eTopIC\" : \"sc-bxivhb eTopIC d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && ' *'}\n          </label>\n        )}\n\n\n        <div className=\"sc-ifAKCX fatWUN\">\n        <Autosuggest \n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected={this.onSuggestionSelected}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                shouldRenderSuggestions={this.shouldRenderSuggestions}\n                //focusInputOnSuggestionClick={false}\n                //alwaysRenderSuggestions={true}\n            />\n       </div>\n\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import React from 'react';\nimport { connect } from 'react-redux';\nimport BoardRequests from './../../../requests/BoardRequests';\nimport ManufacturerRequests from './../../../requests/ManufacturerRequests';\nimport { Form } from 'react-advanced-form';\nimport { Input, Select, Textarea, Button } from 'react-advanced-form-addons';\nimport TypeAheadInput  from './../../form/TypeAheadInput';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport ImageUploader from 'react-images-upload';\nimport { sizes } from './../data/board_sizes';\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards: state.boards, shapers : state.shapers }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadShapers: (request, session) => dispatch( request.get({label : 'LOAD_SHAPERS', limit : 1000,   withs : ['Board'], onSuccess : (data)=>{ return {type: \"SET_SHAPERS\", payload: data}}})),\n        loadBoards: (request, session) => dispatch( request.get({label : 'LOAD_BOARDS',  limit : 1000,  withs : ['Manufacturer'], onSuccess : (data)=>{ return {type: \"SET_BOARDS\", payload: data}}})),\n    };\n  };\n\nclass UserBoardForm extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null\n        };\n    }\n\n    onChange = (propertyName , newValue ) => {\n        console.log('new val', newValue);\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n        console.log('state', this.state)\n      };\n\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.length) this.props.loadBoards(new BoardRequests(this.props.session), this.props.session );\n            this.props.loadShapers(new ManufacturerRequests(this.props.session), this.props.session );\n        } else {\n                this.props.history.push('/');\n        }\n    }\n\n    getBoardSuggestions = value => {\n        if(!value){\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === this.state.manufacturer_id\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n      getShaperSuggestions = value => {\n        if(!value) return this.props.shapers;\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n\n    render(){\n        return (\n            <div className=\"col-md-12\">\n                <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n                <div className=\"col-md-8 \">\n                    <Input name=\"name\" label=\"What do you like to call this board?\" className=\"form-control\" required />\n                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                        keyName=\"name\"\n                        label=\"choose a shaper\" \n                        className=\"form-control\" \n                        placeholder=\"Unknown\" \n                        value={this.state.manufacturer_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getShaperSuggestions} \n                        display={true} required \n                    />\n                    <TypeAheadInput  entity={this.props.boards} \n                        name=\"board_id\" \n                        keyName=\"model\"\n                        label=\"choose a model\" \n                        className=\"form-control\" \n                        placeholder=\"choose a board\" \n                        value={this.state.board_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getBoardSuggestions}\n                        display={this.state.manufacturer_id !== null }\n                         required \n                    />\n                    <Select name=\"size\" label=\"Choose A Size\" >\n                        <option value=''>No size Selected</option>\n                        {sizes.map((size) => {\n                                return <option key={size} prop={size} value={size}>{size}</option>\n                            })} \n                    </Select>\n                    <Select name=\"rating\" label=\"What would you rate this Board on a scale of 1-10?\" >\n                        {[...Array(11).keys()].map((value, index) => {\n                            if(value === 0) return;\n                                return  <option key={index} value={value}>{value}</option>\n                        })}\n                    </Select>\n                    <Select name=\"is_public\" label=\"Should this Board be Public to ALL logged-in Users?\" >\n                        <option value=\"0\">Private</option>\n                        <option value=\"1\">Public</option>\n                    </Select>\n                    <Textarea name=\"notes\" label=\"Notes\"  />\n                    {\n                        this.props.children \n                    }\n                </div>\n                <div className=\"col-md-4\">\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Choose images'\n                        onChange={this.props.onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n                    <Button type='submit'>  {(this.props.edit) ? (\"Edit Board\") : ( \"Add Board\") }</Button>\n                </div>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps  )(UserBoardForm);","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport {FormCard} from './../layout/FormCard';\nimport  UserBoardForm  from './forms/UserBoardForm';\nimport { withRouter} from 'react-router-dom';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\n\n\n\nconst TITLE=\"Create Board\";\n\nconst mapStateToProps = state => {\n    return { session: state.session, user_boards : state.user_boards }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createUserBoard : (request, data) => dispatch( request.create({label : 'CREATE_USER_BOARD', data: data , onSuccess : (data)=>{ return {type: \"USER_BOARD_CREATED\", payload: data}}})),\n        loadBoards: (request, session) => dispatch( request.get({label : 'LOAD_USER_BOARDS', wheres : {user_id : session.user.id }, withs : ['Board.Manufacturer', 'UserBoardImage'], onSuccess : (data)=>{ return { type: \"SET_USER_BOARDS\", payload: data}}})),\n       \n    };\n  };\n\nclass CreateUserBoard extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : []\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.noUpdate) return;\n        if (prevProps.user_boards.length !== this.props.user_boards.length) {\n            this.setState({ submitSuccess : true })\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            setTimeout(() => {\n                this.props.history.push('/board');\n            }, 1500)\n        }\n    }\n\n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.history.push('/');\n        } \n    }\n    \n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createUserBoard} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = UserBoardRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createUserBoard(new UserBoardRequests(session), formData);\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.push('/board');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        return (\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <UserBoardForm board={this.state.board} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading}  onDrop={this.onDrop} />\n                    </div>\n                </FormCard>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(withRouter(CreateUserBoard));\n","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\nimport { Input } from 'react-advanced-form-addons';\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n        const {search, value, location_id} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb eTopIC\" : \"sc-bxivhb eTopIC d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from 'react';\nimport Modal from './../../layout/Modal';\nimport { connect } from 'react-redux';\nimport CreateUserBoard from  './../../board/CreateUserBoard';\nimport UserBoardRequests from './../../../requests/UserBoardRequests';\nimport { Form } from 'react-advanced-form';\nimport { Input, Select, Textarea, Button } from 'react-advanced-form-addons';\nimport Location from './../../form/Location';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment'\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (request, session) => dispatch( request.get({label : 'LOAD_USER_BAORDS',  wheres : {user_id : session.user.id }, withs : ['Board'], onSuccess : (data)=>{ return {type: \"SET_USER_BOARDS\", payload: data}}})),\n        };\n  };\n\nclass SessionForm extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.defaultName = moment().format('MMMM D YYYY, h:mm a');\n        this.state = {show:false, pictures : props.pictures, location_id : ''}\n    }\n\n    onChange = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n      };\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.length)\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n        }\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n    };\n\n    hideModal = (e = false) => {\n        if(e) e.preventDefault();\n        this.setState({ show: false });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevProps.boards.length !== this.props.boards.length)) {\n            setTimeout(() => {\n                this.hideModal();\n            }, 1500)\n        }\n    }\n\n    render(){ \n        return (\n            <div className=\"col-md-12\">\n            <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n            <div className=\"col-md-8 \">\n           \n            <Input name=\"title\" \n                label=\"Session Name\" \n                className=\"form-control\" \n                initialValue={this.defaultName}\n                required \n            />\n            <Location \n                id=\"location_id\" \n                name=\"location_id\" \n                label=\"Where You paddling Out?\" \n                className=\"form-control\" \n                onChange={this.onChange} \n                value={this.state.location_id} />\n     \n            <Select name=\"board_id\" label=\"Which Board Did You Use?\" >\n                  {this.props.boards.map((obj) => {\n                        return <option key={obj.id} prop={obj.name} value={obj.id}>{obj.name}</option>\n                    })}\n            </Select>\n            \n            <Button type='button' onClick={this.showModal}>Add A Board</Button>\n            <Select name=\"rating\" label=\"What would you rate this Session on a scale of 1-10?\" >\n                {[...Array(11).keys()].map((value, index) => {\n                    if(value === 0) return;\n                        return  <option key={index} value={value}>{value}</option>\n                })}\n            </Select>\n            <Select name=\"is_public\" label=\"Should this Session be Public to ALL logged-in Users?\" >\n                <option value=\"0\">Private</option>\n                <option value=\"1\">Public</option>\n            </Select>\n            <Textarea name=\"notes\" label=\"Notes\"  />\n            {\n                this.props.children \n            }\n            </div>\n            <div className=\"col-md-4\">\n            <ImageUploader\n                withIcon={false}\n                buttonText='Choose images'\n                onChange={this.props.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n                withPreview={true}\n            />\n            </div>\n            <div className=\"col-md-12\">\n            <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n            <Button type='submit'>  {(this.props.edit) ? (\"Edit Session\") : ( \"Add Session\") }</Button>\n            </div>\n            </Form>\n            <Modal show={this.state.show} handleClose={(e) =>this.hideModal(e)}>\n                <CreateUserBoard onSuccess={(e) =>this.hideModal(e)} noUpdate={true} />\n            </Modal>\n            </div>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport  MainContainer  from './../layout/MainContainer';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession : (request, data) => dispatch( request.create({label : 'LOAD_USER', data: data , onSuccess : (data)=>{ return {type: \"SESSION_CREATED\", payload: data}}}))};\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.user_sessions.length !== this.props.user_sessions.length) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                this.props.history.push('/user/dashboard');\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ serialized, fields, form})=> {\n        console.log(serialized, fields, form)\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createSession(new SessionRequests(session), formData);\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        console.log('initial images = ', images)\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                <div className=\"col-md-12 row \">\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new session\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}    \n                        </div>\n                         <div className=\"col-md-12\">           \n                        <SessionForm session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop}>\n                   \n                        </SessionForm>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\n\nconst TITLE = \"Edit Session\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditSession extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n        this.sessionRequest = new SessionRequests(this.props.session);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            axios.get(apiConfig.host + apiConfig.port + `/api/session/${this.state.id}`, this.props.session.headers).then(data => {\n                const session = data.data;\n                this.setState({ session});\n            })\n            .catch(error=>this.props.history.push('/session'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.sessionRequest.update(this.state.id, this.state.values).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/session');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.push('/user/dashboard');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Session details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <SessionForm session={this.state.session} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditSession)\n","import WWO from 'worldweatheronline-api';\nimport  wwConfig  from './../../config/worldweather';\n\nconsole.log('ww comf', wwConfig);\nexport default WWO.createClient({\n    //key: wwConfig.key,\n    key : 'd83ea85d7b8b4e4aa71161416200506',\n    responseType: 'json',\n    subscription: 'premium',\n    locale: 'EN'\n});","import './Session.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport _ from 'lodash'\nimport moment from 'moment'\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport {FormCard} from './../layout/FormCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {UserSessionsLoaded, UserSessionUpdated, UserSessionCleared, UserSessionSet} from './../../actions/user_session';\n\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport InlineEdit, { InputType } from 'riec';\nimport Location from './../form/Location';\nimport MainContainer from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport SessionRequests from './../../requests/SessionRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests'\n\nimport WWClient from './../../lib/utils/worldweather'\nimport noaaForecaster from 'noaa-forecasts';\nimport { s3Conf } from './../../config/s3';\n\n\nconst mapStateToProps = state => {\n    return { \n        session: state.session, \n        current_session : state.user_sessions.selected, \n        boards : state.user_boards.data, \n        session_images : state.session_images, \n        api:state.api \n    }\n  }\n\n  const withs = {\n    session : ['Location', 'UserBoard.UserBoardImage']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadSession: (request, props) => dispatch( request.getOne({id : props.match.params.id,  withs : withs.session , onSuccess : (data)=>{ return UserSessionSet(data)}})),\n      \n      clearSession : ()=>dispatch(UserSessionCleared()),\n      editSession : (request, props, data)=>dispatch( request.update({ id : props.match.params.id, data: data, onSuccess : (data)=>{ return UserSessionUpdated(data)}})),\n      loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id },  onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n      addImages : (request, data) => dispatch( request.createImages({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGES_ADDED\", payload: data}}})),\n      loadSessionImages: (request, props) => dispatch( request.getImages({wheres : {session_id : props.match.params.id }, onSuccess : (data)=>{ return { type: \"SET_SESSION_IMAGES\", payload: data}}})),\n      deleteSessionImage : (request, data) => dispatch( request.deleteImage({id : data.id, onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_DELETED\", payload: data}}}))\n    };\n  };\n\nclass SessionView extends Component {\n\n    \n    constructor(props)\n    {\n        super(props)\n        this.UserSessionRequest = new SessionRequests(props.session);\n        \n        this.state = { \n            boards : [], \n            select: {id : 0, name : 'No Board Selected'},\n            selectedImage : null,\n            selectOptions: [],\n            uploaderInstance : 1,\n            imageIndex : 0,\n            date: '',\n            defaultImage : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\"\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = SessionRequests.createFormRequest({session_id : this.props.current_session.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(new SessionRequests(this.props.session), formData);\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n      \n    }\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSession(this.UserSessionRequest , this.props);\n            this.props.loadSessionImages(new SessionRequests(this.props.session), this.props );\n        }\n       else{\n            this.props.history.push('/session');\n       }\n    }\n\n    componentWillUpdate()\n    {\n        (this.props.boards.length && !this.state.selectOptions.length && this.props.current_session.id) && this.setSelectedBoard();\n    }\n\n    setSelectedBoard = () =>\n    {\n        const boardOptions = [];\n        let select = this.state.select\n        this.props.boards.map((obj) => {\n            let board = { id : obj.id , name : obj.name};\n            if(obj.id === this.props.current_session.board_id) select = board;\n            boardOptions.push(board) \n        })\n        this.setState({selectOptions: boardOptions, select : select})\n    }\n\n    componentWillUnmount(){\n        this.props.clearSession();\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/user/dashboard');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editSession(this.UserSessionRequest, this.props , data);\n        this.setState( data );\n    }\n\n    onLocationChange = (propertyName , newValue ) => {\n        if(!newValue) return;\n        const data = [];\n        data[propertyName] = newValue;\n        this.submitUpdate({ ...data});\n      };\n\n    onLocationBlur = (e, a, d) =>\n    {\n        console.log('blur', e, a, d)\n    }\n\n    onBoardChange = (id) =>\n    {\n        this.submitUpdate({ board_id : id});\n        const idInt = parseInt(id);\n        this.state.selectOptions.map((obj) => {\n            if(obj.id === idInt ) this.setState({select : obj});\n            return true;\n        })\n        \n    }\n\n    onImageLoad = (e) =>\n    {\n        console.log('imger loaded', this.props.session_images.length, e.target)\n        this.setState({selectedImage : this.props.session_images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteSessionImage(new SessionRequests(this.props.session), {id : this.state.selectedImage.id}))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.session_images[newIndex]})\n        });\n    }\n\n    onDateChange = date => {\n        let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        console.log(formattedDate )\n        this.submitUpdate({session_date : formattedDate})\n        this.setState({date : date})\n       \n      };\n\n    render() {\n        const session = this.props.current_session;\n        const boardImage = this.props.current_session.UserBoard && this.props.current_session.UserBoard.UserBoardImages && this.props.current_session.UserBoard.UserBoardImages.length ? \n        s3Conf.root + this.props.current_session.UserBoard.UserBoardImages[0].name : this.state.defaultImage;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <Form>\n                        <div className=\"container\">\n                            <div className=\"wrapper row\">\n                                <div className=\"details col-md-12\">\n                                    <h3 className=\"session-title\"> \n                                    <RIEInput\n                                        required={false}\n                                        value={session.title || ''}\n                                        defaultValue={session.title}\n                                        change={this.submitUpdate}\n                                        propName='title'\n                                        /></h3>\n                                </div>\n                                <div className=\"preview col-md-7\">\n                                    <div className=\"card\" >\n                                    <ImageGallery \n                                            items={this.props.session_images} \n                                            showBullets={true} \n                                            showIndex={true}\n                                            startIndex={this.state.imageIndex}\n                                            onSlide={this.onImageSelected} \n                                            onImageLoad={this.onImageLoad}/>\n                                    <div className=\"card-body\">\n                                        <div className=\"card-text\">\n                                            <ImageUploader\n                                                key={this.state.uploaderInstance}\n                                                withIcon={true}\n                                                buttonText='Add Images!'\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                withPreview={false}\n                                            />\n                                            <FontAwesomeIcon  \n                                                size=\"lg\"  \n                                                alt=\"delete user\" \n                                                style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  \n                                                icon={faTrash} \n                                                onClick={this.deleteImage} value={this.state.imageIndex}/> \n                                            </div>\n                                    </div>\n                                </div>\n                                </div>\n                                <div className=\"details col-md-5\">\n                                    <div className=\"container\">\n                                    <div className=\"detail-line\">\n                                        <StarBar stars={session.rating} onClick={this.submitUpdate } size=\"md\" />\n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <Location \n                                            id=\"location_id\" \n                                            name=\"location_id\" \n                                            className=\"form-control\" \n                                            onChange={this.onLocationChange} \n                                            onBlur={this.onLocationBlur}\n                                            value={session.location_id} \n                                            placeholder={(session.Location) ? session.Location.formatted_address : 'No Location Specified'} \n                                        />\n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <div><strong>Date:</strong></div>\n                                        <DatePicker\n                                            selected={this.state.date}\n                                            className=\"date-picker-input form-control\"\n                                            onChange={this.onDateChange} //only when value has changed\n                                            showTimeSelect\n                                            dateFormat={'MMMM d yyyy h:mm a'}\n                                            placeholderText={moment(session.session_date).format('MMMM D YYYY h:mm a')}\n                                            />\n        \n                                    </div>                                    \n                                    <div className=\"row detail-line\"> \n                                    <div className=\"col-md-12\"><strong>Board:</strong></div>\n                                        <div className=\"col-md-4\">\n                                            <img style={{cursor : 'pointer'}} onClick={()=>this.props.history.push('/board/' + session.board_id)}\n                                            src={boardImage}/>      \n                                        </div>  \n                                        <div className=\"col-md-8 board-select\">\n                                            <div className=\"row col-md-12\">\n                                                <strong>\n                                            <InlineEdit\n                                                type={InputType.Select}\n                                                value={this.state.select.name}\n                                                onChange={this.onBoardChange}\n                                                options={this.state.selectOptions}\n                                                valueKey=\"id\"\n                                                labelKey=\"name\"\n                                                /> \n                                                { session.UserBoard && <div><strong>Size:</strong> {session.UserBoard.size }</div> }\n                                                </strong>\n                                            </div> \n                                        </div>\n                                                          \n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <div><strong>Notes:</strong></div>\n                                        <RIETextArea\n                                            value={session.notes || 'You have no notes for this session'}\n                                            className=\"form-control text-area\"\n                                            defaultValue={session.notes}\n                                            change={this.submitUpdate }\n                                            propName='notes'\n                                            validate={_.isString} \n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n                    </Form> \n                </FormCard>\n            </MainContainer>\n        )\n    }\n\n    loadNoaa = () =>\n    {\n        var inspect = require('util').inspect;\n        var obj = {\n            listLatLon: '38.99,-77.01 37.7833,-122.4167',\n            //product: 'time-series', // this is a default, it's not actually required\n            begin: moment().format('YYYY-MM-DDTHH:mm:ss'),\n            end: moment().add(3, 'days').format('YYYY-MM-DDTHH:mm:ss'),\n            qpf: 'qpf', // first elementInputName - Liquid Precipitation Amount\n            pop12: 'pop12' // another elementInputName - 12 hour probability of precipitation    \n            };\n            var token = 'yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV';\n            noaaForecaster.setToken(token);\n            noaaForecaster.getForecast(obj)\n            .then(function(results) {\n                console.log(inspect(results, { colors: true, depth: Infinity }));\n            });\n    }\n\n    loadWorldWeather = () =>\n    {\n        WWClient.marineWeatherApi({\n            q: \"39.6439329,-74.18136799999999\",\n            tide : \"yes\"\n        }, function(err, result) {\n            if (!err) {\n                console.log(result);\n            } else {\n                console.log(err);\n            }\n        });\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps )(SessionView)","import 'react-confirm-alert/src/react-confirm-alert.css'; \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport  MainContainer  from './../layout/MainContainer';\nimport { confirmAlert } from 'react-confirm-alert';\nimport BoardCard from './../user/BoardCard';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (request, session) => dispatch( request.get({label : 'LOAD_USER_BOARDS', wheres : {user_id : session.user.id }, withs : ['Board.Manufacturer', 'UserBoardImage'], onSuccess : (data)=>{ return { type: \"SET_USER_BOARDS\", payload: data}}})),\n        deleteBoard: (request, id) => dispatch( request.delete({label : 'DELETE_USER_BOARD', id:id , onSuccess : (data)=>{ return { type: \"DELETE_USER_BOARD\", payload: id }}}))\n    };\n  };\n\nclass BoardIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isAdmin : false }\n        this.deleteBoard = this.deleteBoard.bind(this);\n        this.editBoard = this.editBoard.bind(this);\n        this.viewBoard = this.viewBoard.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n        }\n    }\n\n    deleteBoard(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    this.props.deleteSession(new UserBoardRequests(this.props.session), id);\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editBoard(boardId) {\n        this.props.history.push('/board/edit/' + boardId);\n    }\n\n    viewBoard(boardId) {\n        this.props.history.push('/board/' + boardId);\n    }\n\n    render() {\n        const { boards } = this.props;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Boards\n                        { this.state.isAdmin &&  <Link to={'board/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Board</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row col-md-12\">\n                                    {boards && boards.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).map(board =>  \n                                        <BoardCard board={board} key={board.id}  className=\"col-md-3\" deleteBoard={this.deleteBoard} viewBoard={this.viewBoard} editBoard={this.editBoard}  />                              \n                                        )\n                                    }\n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex)","import React from 'react';\n\nexport const BoardForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\">Name</label>\n            <input type=\"text\" id=\"model\" defaultValue={props.board.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Give your Board a Nickname\" />\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Manufacturer/Shaper\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.manufacturers.map((obj) => {\n                     return <option prop={obj.name} value={obj.id}>{obj.name}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Model\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.models.map((obj) => {\n                     return <option prop={obj.model} value={obj.id}>{obj.model}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Board on a scale of 1-10?\n            <select value={props.board.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Board be Public to ALL logged-in Users?\n            <select value={props.board.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Board\") : ( \"Add Board\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { BoardForm } from './forms/BoardForm';\n\n\nconst TITLE=\"Create Board\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            manufacturers : [],\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            board : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/manufacturer`, this.props.session.headers)\n                .then(data => this.setState({manufacturers : data.data}))\n                .catch(error=>this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message }));\n            axios.get(apiConfig.host + apiConfig.port + `/api/board`, this.props.session.headers)\n                .then(data => this.setState({models : data.data}))\n                .catch(error=>this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message }));\n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/board`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/board');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n\nß\n\n\n\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    returnToIndex = e =>\n      {\n        this.props.history.push('/board');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage} = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <BoardForm \n                        board={this.state.board} \n                        handleInputChanges={this.handleInputChanges} \n                        processFormSubmission={this.processFormSubmission} \n                        loading={loading} \n \n >\n                        </BoardForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { BoardForm } from './forms/BoardForm';\n\nconst TITLE = \"Edit Board\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditBoard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            board : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.props.session.headers).then(data => {\n                const board = data.data;\n                this.setState({ board });\n            })\n            .catch(error=>this.props.history.push('/board'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/board');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/board');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Board details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <BoardForm board={this.state.board} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditBoard)\n","\nimport './Board.css'\n\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {FormCard} from './../layout/FormCard';\nimport { Form } from 'react-advanced-form';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport _ from 'lodash';\nimport {UserBoardUpdated} from './../../actions/user_board';\nimport SessionCard from './../session/SessionCard';\n\nimport  MainContainer  from './../layout/MainContainer';\nimport SessionRequests from './../../requests/SessionRequests';\nimport StarBar from './../layout/StarBar';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport BoardRequests from     './../../requests/BoardRequests';\nimport ManufacturerRequests from './../../requests/ManufacturerRequests';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faBookReader } from '@fortawesome/free-solid-svg-icons';\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport TypeAheadInput  from './../form/TypeAheadInput';\nimport { sizes } from './data/board_sizes';\nimport InlineEdit, { InputType } from 'riec';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, board : state.user_boards.selected , boards: state.boards, shapers : state.shapers , images : state.user_board_images}\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadBoard: (request, props) => dispatch( request.getOne({ id : props.match.params.id,  withs : ['Board.Manufacturer', 'Session.SessionImage'], onSuccess : (data)=>{ return { type: \"SET_USER_BOARD\", payload: data}}})),\n      loadSessions: (request, props) => dispatch( request.get({ wheres : {board_id : props.match.params.id,}, withs : [ 'Location', 'SessionImage'], onSuccess : (data)=>{ return { type: \"SET_USER_SESSIONS\", payload: data}}})),\n      editUserBoard: (request, props, data)=>dispatch( request.update({ id : props.match.params.id, data: data, onSuccess : (data)=>{ return UserBoardUpdated(data)}})),\n      loadShapers: (request, session) => dispatch( request.get({limit : 1000,   withs : ['Board'], onSuccess : (data)=>{ return {type: \"SET_SHAPERS\", payload: data}}})),\n      loadBoards: (request, session) => dispatch( request.get({ limit : 1000,  withs : ['Manufacturer'], onSuccess : (data)=>{ return {type: \"SET_BOARDS\", payload: data}}})),\n      loadBoardImages: (request, props) => dispatch( request.getImages({wheres : {user_board_id : props.match.params.id }, onSuccess : (data)=>{ return { type: \"SET_USER_BOARD_IMAGES\", payload: data}}})),\n      addImages : (request, data) => dispatch( request.createImages({data: data , onSuccess : (data)=>{  return { type: \"USER_BOARD_IMAGES_ADDED\", payload: data}}})),\n      deleteBoardImage : (request, data) => dispatch( request.deleteImage({id : data.id, onSuccess : (data)=>{ return {type: \"USER_BOARD_IMAGE_DELETED\", payload: data}}}))\n    };\n  };\n\nclass BoardView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [],\n            board_id: '',\n            manufacturer_id : '',\n            uploaderInstance : 1,\n            imageIndex : 0,\n            modelPlaceholder : null,\n            boardSizeOptions : this.prepBoardSizeOptions(sizes)\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    prepBoardSizeOptions = (sizes)=>\n    {\n        const filteredSizes = [];\n        sizes.forEach(size=> filteredSizes.push({id : size }))\n        return filteredSizes;\n    }\n\n    onTypeAheadSelected = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        //here we have to make sure to clear out the model if not belong to shaper\n        if(propertyName === 'manufacturer_id'){\n            const boardId = (!Number.isInteger(this.state.board_id)) ? this.props.board.id :this.state.board_id;\n            const board = this.props.boards.find(board=> board.id === boardId); \n            console.log('boards', boardId, board)\n            if( board && (board.manufacturer_id !== newValue))\n            {\n                data['board_id'] = ''\n                data['modelPlaceholder'] = 'Choose A Board'\n                console.log('board does not match manufactiure', newValue);\n            }\n        }\n      \n        this.setState({\n            ...data\n        });\n        console.log('state', this.state)\n      };\n\n      getShaperSuggestions = (value, reason)  => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused') return this.props.shapers;\n \n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n      getBoardSuggestions = (value, reason) => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused'){\n            const shaperId = (this.state.manufacturer_id === '') ? this.props.board.Board.manufacturer_id : this.state.manufacturer_id;\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === shaperId\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoard(new UserBoardRequests(this.props.session), this.props );\n            this.props.loadSessions(new SessionRequests , this.props );\n            this.props.loadBoards(new BoardRequests(this.props.session), this.props.session );\n            this.props.loadShapers(new ManufacturerRequests(this.props.session), this.props.session );\n            this.props.loadBoardImages(new UserBoardRequests(this.props.session), this.props );\n        }\n        else this.props.history.push('/board');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserBoard(new UserBoardRequests(this.props.session), this.props , data);\n        this.setState( data );\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/board');\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = UserBoardRequests.createFormRequest({user_board_id : this.props.board.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(new UserBoardRequests(this.props.session), formData);\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\n    onImageLoad = (e) =>\n    {\n        console.log('imger loaded', this.props.images.length, e.target)\n        this.setState({selectedImage : this.props.images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteBoardImage(new UserBoardRequests(this.props.session), {id : this.state.selectedImage.id}))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.images[newIndex]})\n        });\n    }\n\n    renderLeftNav() {\n        return (\n          <button\n            className='image-gallery-custom-left-nav btn btn-primary'>hello\n            </button>\n        )\n      }\n\n    render() {\n        const { board } = this.props;\n        const modelPlaceholder = (this.state.modelPlaceholder) ? this.state.modelPlaceholder : board.Board && board.Board.model || 'Choose A Model';\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <Form>\n\t\t\t\t        <div className=\"wrapper row col-md-12 container\">\n                            <h2 className=\"details col-md-12\">\n                                <RIEInput\n                                    required={false}\n                                    value={board.name || ''}s\n                                    defaultValue={board.name}\n                                    change={this.submitUpdate}\n                                    propName='name'\n                                />\n                            </h2>\n                            <div className=\"preview col-md-6\">\n                                <div className=\"card\" >\n                                    <ImageGallery \n                                            items={this.props.images} \n                                            showBullets={true} \n                                            showIndex={true}\n                                            startIndex={this.state.imageIndex}\n                                            onSlide={this.onImageSelected} \n                                            showNav={false}\n                                            //renderCustomControls={this.renderLeftNav}\n                                            onImageLoad={this.onImageLoad}\n                                            className=\"card-img-top\" />\n                                    <div className=\"card-body\">\n                                        <div className=\"card-text\"><ImageUploader\n                                                key={this.state.uploaderInstance}\n                                                withIcon={false}\n                                                buttonText='Add Images!'\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                label=''\n                                                withPreview={false}/>\n                                                <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} \n                                                onClick={this.deleteImage} value={this.state.imageIndex}/> \n                                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <div className=\"detail-line\">\n                                    <StarBar stars={board.rating} onClick={this.submitUpdate } size=\"1x\"/>\n                                </div>\n                                <div className=\"detail-line\">\n                                    <strong>Size:</strong>\n                                   &nbsp; \n                                   <InlineEdit\n                                        type={InputType.Select}\n                                        value={board.size}\n                                        onChange={(data)=>{this.submitUpdate({size : data})}}\n                                        options={this.state.boardSizeOptions}\n                                        valueKey=\"id\"\n                                        labelKey=\"id\"\n                                    /> \n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Shaper/Company:</strong></div>\n                                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                                        keyName=\"name\"\n                                        className=\"form-control\" \n                                        placeholder={board.Board && board.Board.Manufacturer && board.Board.Manufacturer.name || 'Choose A Shaper'}\n                                        value={this.state.manufacturer_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getShaperSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Model:</strong></div>\n                                    <TypeAheadInput  entity={this.props.boards} name=\"board_id\" \n                                        keyName=\"model\"\n                                        className=\"form-control\" \n                                        placeholder={modelPlaceholder}\n                                        value={this.state.board_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getBoardSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                <div><strong>Notes:</strong></div>\n                               \n                                        <RIETextArea\n                                            value={board.notes || 'You have no notes for this session'}\n                                            defaultValue={board.notes}\n                                            className=\"form-control text-area\"\n                                            change={this.submitUpdate }\n                                            propName='notes'\n                                            validate={_.isString} \n                                        />\n                                       \n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"card\">\n                            <div className=\"row col-md-12 card-title\"><h5>Used In Sessions...</h5></div>\n                                <div className=\"card-text\">\n                                    <div className=\"table-container\" >\n                                        <div className=\"row\">\n                                            {board.Sessions && \n                                            board.Sessions.reduce((mappedArray, session, index) => {                           \n                                                                    if (index < 3) { \n                                                                        mappedArray.push(\n                                                                            <div className=\"col-md-4\">\n                                                                            <div key={session.id} className=\"card row\">\n                                                                            <SessionCard session={session} key={session.id} className=\"row col-md-12\" />\n                                                                            </div>\n                                                                            </div>\n                                                                        );\n                                                                    }                                                  \n                                                                    return mappedArray;\n                                                                }, \n                                                            [])\n                                            }\n                                            {\n                                                (!board.Sessions || board.Sessions.length === 0) &&  <div className=\"col-12\"><h3>No Sessions found at the moment</h3></div>\n                                            } \n                                        </div>\n                                     </div>\n                                </div>\n                        </div>\n                  \n                    </Form>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass LocationRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.location.id}>\n                <div className=\"col-6\">\n                <div><a href=\"#\" onClick={() => this.props.viewLocation(this.props.location.id)}>{this.props.location.name}</a></div>\n                <div>{this.props.location.City.name}</div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.location.createdAt}\n                </div>\n                <div className=\"col-3 location-details\">\n                    <div>{!this.props.location.is_public || this.props.location.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.location.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editLocation(this.props.location.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteLocation(this.props.location.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default LocationRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport LocationRow from './LocationRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { locations: [], headers : {}, isAdmin : false }\n        this.deleteLocation = this.deleteLocation.bind(this);\n        this.editLocation = this.editLocation.bind(this);\n        this.viewLocation = this.viewLocation.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location?with=City`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ locations: data.data })\n            });\n        }\n    }\n\n    deleteLocation(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/location/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.locations.findIndex(location => location.id === id);\n                        this.state.locations.splice(index, 1);\n                        this.props.history.push('/location');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editLocation(locationId) {\n        this.props.history.push('/location/edit/' + locationId);\n    }\n\n    viewLocation(locationId) {\n        this.props.history.push('/location/' + locationId);\n    }\n\n    render() {\n        const locations = this.state.locations;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg  mx-auto\">\n                        <div className=\"card-title\"><h2>Locations\n                        { this.state.isAdmin &&  <Link to={'location/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Location</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Location\n                                    </div>\n                                </div>\n                                {locations && locations.map(location =>\n                                (this.state.isAdmin || location.isPublic) &&\n                                    <LocationRow location={location} deleteLocation={this.deleteLocation} viewLocation={this.viewLocation} editLocation={this.editLocation} isAdmin={this.state.isAdmin} key={ location.id }/>\n                                )\n                                }\n                                {\n                                    (!locations  || locations.length === 0) &&  <div className=\"col-12\"><h3>No locations found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationIndex)","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div onClick={() => props.removeImage(image.public_id)}  className='delete'>\n        <FontAwesomeIcon icon={faTimesCircle}  />\n      </div>\n      <img className=\"preview\" src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n    <div className=''>\n      <label className=\"fileContainer\">\n        Upload An Image!\n          <input type='file' multiple id='multi' onChange={props.onChange} accept=\".jpg,.jpeg,.gif,.png\" /> \n      </label>\n      <FontAwesomeIcon icon={faImage} color='#3B5998' size='3x' />\n    </div>\n","import React from 'react';\n\nexport const LocationForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Location on a scale of 1-10?\n            <select value={props.location.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Location be Public to ALL logged-in Users?\n            <select value={props.location.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Model </label>\n            <input type=\"text\" id=\"model\" defaultValue={props.location.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Location Model\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Location\") : ( \"Add Location\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\n\nconst TITLE=\"Create Location\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            location : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/location`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/location');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/location');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <LocationForm location={this.state.location} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </LocationForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\nconst TITLE = \"Edit Location\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditLocation extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            location : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.props.session.headers).then(data => {\n                const location = data.data;\n                this.setState({ location });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/location');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Location details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <LocationForm location={this.state.location} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditLocation)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Location.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/location') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/location');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Location:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass ManufacturerRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.manufacturer.id}>\n                <div className=\"col-6\">\n                <div><a href=\"#\" onClick={() => this.props.viewManufacturer(this.props.manufacturer.id)}>{this.props.manufacturer.name}</a></div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.manufacturer.createdAt}\n                </div>\n                <div className=\"col-3 manufacturer-details\">\n                    <div>{!this.props.manufacturer.is_public || this.props.manufacturer.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.manufacturer.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editManufacturer(this.props.manufacturer.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteManufacturer(this.props.manufacturer.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default ManufacturerRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport ManufacturerRow from './ManufacturerRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { manufacturers: [], headers : {}, isAdmin : false }\n        this.deleteManufacturer = this.deleteManufacturer.bind(this);\n        this.editManufacturer = this.editManufacturer.bind(this);\n        this.viewManufacturer = this.viewManufacturer.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ manufacturers: data.data })\n            });\n        }\n    }\n\n    deleteManufacturer(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/manufacturer/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.manufacturers.findIndex(manufacturer => manufacturer.id === id);\n                        this.state.manufacturers.splice(index, 1);\n                        this.props.history.push('/manufacturer');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/edit/' + manufacturerId);\n    }\n\n    viewManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/' + manufacturerId);\n    }\n\n    render() {\n        const manufacturers = this.state.manufacturers;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Manufacturers\n                        { this.state.isAdmin &&  <Link to={'manufacturer/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Manufacturer</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Manufacturer\n                                    </div>\n                                </div>\n                                {manufacturers && manufacturers.map(manufacturer =>\n                                (this.state.isAdmin || manufacturer.isPublic) &&\n                                    <ManufacturerRow manufacturer={manufacturer} deleteManufacturer={this.deleteManufacturer} viewManufacturer={this.viewManufacturer} editManufacturer={this.editManufacturer} isAdmin={this.state.isAdmin} key={ manufacturer.id }/>\n                                )\n                                }\n                                {\n                                    (!manufacturers  || manufacturers.length === 0) &&  <div className=\"col-12\"><h3>No manufacturers found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerIndex)","import React from 'react';\n\nexport const ManufacturerForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Name </label>\n            <input type=\"text\" id=\"name\" defaultValue={props.manufacturer.name} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Manufacturer Name\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Manufacturer\") : ( \"Add Manufacturer\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\n\nconst TITLE=\"Create Manufacturer\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            manufacturer : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/manufacturer`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/manufacturer');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/manufacturer');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <ManufacturerForm manufacturer={this.state.manufacturer} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </ManufacturerForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\nconst TITLE = \"Edit Manufacturer\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditManufacturer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            manufacturer : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.props.session.headers).then(data => {\n                const manufacturer = data.data;\n                this.setState({ manufacturer });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/manufacturer');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Manufacturer details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <ManufacturerForm manufacturer={this.state.manufacturer} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditManufacturer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Manufacturer.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/manufacturer') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/manufacturer');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Manufacturer:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerView)","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\nimport EditSession from './components/session/Edit';\nimport SessionView from './components/session/View';\n\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateBoard from './components/board/Create';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport EditBoard from './components/board/Edit';\nimport BoardView from './components/board/View';\n\nimport LocationIndex from './components/location/LocationIndex';\nimport CreateLocation from './components/location/Create';\nimport EditLocation from './components/location/Edit';\nimport LocationView from './components/location/View';\n\nimport ManufacturerIndex from './components/manufacturer/ManufacturerIndex';\nimport CreateManufacturer from './components/manufacturer/Create';\nimport EditManufacturer from './components/manufacturer/Edit';\nimport ManufacturerView from './components/manufacturer/View';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session}  />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <PrivateRoute path={'/session/edit/:id'} exact component={EditSession} session={this.props.session}  />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <PrivateRoute path={'/board/edit/:id'} exact component={EditBoard} session={this.props.session}  />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n          <Route  path={'/location'} exact component={LocationIndex } />\n          <PrivateRoute path={'/location/create'} exact component={CreateLocation} session={this.props.session} />\n          <PrivateRoute path={'/location/edit/:id'} exact component={EditLocation} session={this.props.session}  />\n          <Route  path={'/location/:id'} exact component={LocationView }/>\n\n          <Route  path={'/manufacturer'} exact component={ManufacturerIndex } />\n          <PrivateRoute path={'/manufacturer/create'} exact component={CreateManufacturer} session={this.props.session} />\n          <PrivateRoute path={'/manufacturer/edit/:id'} exact component={EditManufacturer} session={this.props.session}  />\n          <Route  path={'/manufacturer/:id'} exact component={ManufacturerView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    key : process.env.REACT_WORLD_WEATHER_KEY\n}"],"sourceRoot":""}