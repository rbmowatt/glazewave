{"version":3,"sources":["config/cognito.js","requests/BaseRequest.js","requests/UserRequests.js","actions/user.js","actions/types.js","lib/utils/cognito.js","lib/utils/session.js","reducers/session.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/stormglass.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","components/layout/StarBar.js","components/session/SessionCard.js","components/board/BoardCard.js","requests/UserBoardRequests.js","requests/SessionRequests.js","actions/user_session.js","actions/user_board.js","components/user/ProfileCard.js","lib/utils/geolocator.js","lib/utils/surfline_alg_geo.js","lib/utils/cache.js","components/reports/surfline/NearestSpots.js","components/reports/stormglass/Report.js","actions/stormglass.js","components/user/Dashboard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/layout/Modal.js","components/algolia/SearchResults.js","components/session/Facets.js","lib/utils/algolia.js","components/layout/SortBy.js","components/session/SessionIndex.js","lib/utils/worldweather.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","requests/ManufacturerRequests.js","actions/shaper.js","requests/BoardRequests.js","actions/board.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/board/forms/BoardPicker.js","components/session/View.js","components/board/Facets.js","components/board/BoardIndex.js","components/board/data/board_sizes.js","components/board/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/worldweather.js","config/fb.js"],"names":["require","config","cognitoConfig","apiUrl","process","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","querystring","BaseRequest","session","REQUEST_TYPE","get","wheres","withs","limit","page","label","orderBy","onSuccess","onFailure","e","apiAction","url","getEndpoint","getWhereString","getWithString","getlabel","getOne","id","create_bk","data","hdrs","headers","axios","post","create","method","delete","update","getHost","apiConfig","host","port","endpoint","withString","forEach","element","slice","length","stringify","error","console","log","type","accessToken","jwt","headersOverride","payload","this","createFormRequest","formData","FormData","Object","entries","key","value","append","UserRequests","updateProfileImage","args","UserLoaded","loadUser","dispatch","getState","params","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","then","getCognitoSession","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","email","given_name","family_name","formatSessionObject","user","userName","jwtToken","groups","isAdmin","Array","indexOf","expiration","exp","isLoggedIn","refresh","store","clearSession","signOut","localStorage","setItem","JSON","hasSession","getItem","parse","expTime","moment","unix","valueOf","current_time","updateTime","subtract","format","catch","removeItem","existingSession","initialState","state","action","assign","user_board","selected","loaded","created","user_boards","concat","filteredBoards","filter","board","parseInt","user_session","user_sessions","filteredSessions","item","newState","profile_img","api","boards","s3Conf","original","thumbnail","session_images","prepImages","setImages","img","images","formattedImages","push","name","shapers","stormglass","combineReducers","user_board_images","apiMiddleware","next","dataOrParams","includes","defaults","baseURL","common","apiStart","request","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","compose","createStore","rootReducer","applyMiddleware","thunk","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","username","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","history","Login","hash","search","MainContainer","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","uname","map","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","submitFail","errorMessage","role","EditUser","put","setValues","match","StarBar","content","rating","stars","i","faStar","withRouter","SessionImages","textAlign","marginTop","editSession","deleteSession","createdAt","calendar","UserBoard","Location","UserBoardImages","editBoard","deleteBoard","Board","model","UserBoardRequests","getImages","createImages","deleteImage","SessionRequests","UserSessionsLoaded","loadUserSessions","UserBoardsLoaded","UserBoardsCleared","loadUserBoard","UserBoardLoaded","loadUserBoards","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","pictureFiles","pictureDataURLs","user_id","file","updateImage","image","rel","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","aria-valuenow","aria-valuemin","aria-valuemax","UserImageUpdated","updateUserImage","geolocator","language","google","version","locator","defaultOptions","enableHighAccuracy","timeout","maximumWait","maximumAge","desiredAccuracy","fallbackToIP","addressLookup","algoliasearch","responsesCache","createInMemoryCache","requestsCache","serializable","initIndex","getSpots","lat","lon","aroundLatLng","aroundRadius","ttl","expiry","Date","getTime","itemStr","NearestSpots","spots","cachedHits","cache","locate","coords","latitude","longitude","hits","el","data-tip","data-event","data-for","getContent","display","position","allowFullScreen","isCapture","clickable","Report","wavePeriod","currentTime","getHours","sgLoaded","stormglassLoaded","fetch","_geoloc","json","jsonData","hours","waterTemperature","sg","toFixed","swellHeight","swellPeriod","waveHeight","pressure","currentSpeed","StormGlassLoaded","sessions","UserDashboard","loadBoards","loadSessions","UserSessionRequests","reduce","mappedArray","locations","UserLocations","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","handleNoResult","handleStatusUpdate","onBlur","locRender","prediction","types","description","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","autoComplete","wrapperClass","libraries","googleMaps","autocompletionRequest","input","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","createField","fieldPresets","matches","generic","missing","rule","SessionForm","propertyName","newValue","defaultName","show","pictures","clearBoards","serialized","fields","form","rules","messages","initialValue","float","Create","createSession","onSubmissionComplete","prevProps","prevState","snapshot","noUpdate","clearCreatedSession","close","UserSessionCreated","createUserSession","Modal","handleClose","showHideClassName","StateResults","searchState","searchResults","allSearchResults","searching","searchingForFacetValues","isSearchStalled","ids","hit","SearchResults","connectStateResults","Facets","filters","showAll","RefinementList","container","attribute","showMore","showMoreLimit","Configure","hitsPerPage","onSelect","algoliaClient","searchClient","requests","some","query","results","searchForFacetValues","SB","items","refine","createURL","currentRefinement","onSortUpdated","event","nextValue","SortBy","connectSortBy","relations","SessionIndex","showModal","hideModal","sortOrder","selectedSortOrder","setScope","searchResultHandler","isNew","currentHits","in","currentPage","onSearch","viewSession","clearSessions","sessionId","InstantSearch","indexName","Index","defaultRefinement","Pagination","ClearRefinements","CurrentRefinements","checked","UserSessionDeleted","deleteUserSession","WWO","createClient","wwConfig","responseType","subscription","locale","TypeAheadInput","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","shouldRenderSuggestions","onFocus","maxHeight","overflow","ManufacturerRequests","loadShapers","ShapersLoaded","BoardRequests","BoardsLoaded","UserBoardForm","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","CreateUserBoard","createUserBoard","UserBoardCreated","clearCreatedBoard","BoardPicker","select","selectOptions","defaultImage","selectedBoard","current_session","loadBoard","board_created","boardImage","InputType","Select","options","valueKey","labelKey","submitUpdate","SessionView","setSelectedBoard","boardOptions","obj","goBack","editUserSession","onLocationChange","onPrivacyChange","is_public","onLocationBlur","d","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","setToken","getForecast","colors","depth","Infinity","UserSessionRequest","loadSession","loadSessionImages","session_id","addImages","appId","fbConfig","api_key","change","propName","withLabel","buttonClassName","showBullets","showIndex","startIndex","onSlide","thumbnailPosition","handleClick","tabs","showTimeSelect","dateFormat","placeholderText","notes","validate","_","isString","UserSessionLoaded","loadUserSession","UserSessionUpdated","updateUserSession","UserSessionImagesLoaded","loadUserSessionImages","UserSessionImagesCreated","addUserSessionImages","UserSessionImageDeleted","deleteUserSessionImage","BoardIndex","boardCreated","viewBoard","sortBoards","userSession","boardId","UserBoardDeleted","deleteUserBoard","sizes","selected_board","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","loadBoardImages","user_board_id","s","showNav","Manufacturer","Sessions","UserBoardUpdated","updateUserBoard","UserBoardImagesLoaded","loadUserBoardImages","UserBoardImagesCreated","addUserBoardImages","UserBoardImageDeleted","deleteUserBoardImage","App","path","exact","CreateSession","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"mSACAA,EAAQ,IAAUC,SACX,IAAMC,EAAgB,CACzBC,OAASC,yBACTC,OAASD,YACTE,SAAUF,sBACVG,SAAWH,4BACXI,gBAAkBJ,oDAClBK,YAAaL,+BACbM,WAAaN,gCACbO,YAAa,CAEb,SAGAC,OAAQR,0B,2ECbNS,EAAcb,EAAQ,KAEtBc,E,WAIF,WAAaC,GAAU,IAAD,gCAFtBC,aAAe,OAEO,KAStBC,IAAM,YAAwI,IAAD,IAApIC,cAAoI,MAA3H,GAA2H,MAAvHC,aAAuH,MAA/G,GAA+G,MAA3GC,aAA2G,MAAnG,GAAmG,MAA/FC,YAA+F,MAAxF,EAAwF,MAArFC,aAAqF,MAA7E,GAA6E,MAAzEC,eAAyE,MAAjE,GAAiE,MAA7DC,iBAA6D,MAAjD,aAAiD,MAAzCC,iBAAyC,MAA7B,SAACC,GAAD,OAAK,EAAKD,UAAUC,IAAS,EACzI,OAAO,EAAKC,UAAU,CAClBC,IAAK,EAAKC,cAAL,IAA2B,EAAKC,eAAeZ,GAA/C,IAA+D,EAAKa,cAAcZ,GAAlF,UAAuGC,EAAvG,aAA8HG,EAA9H,SAAmJF,EACxJG,UAAYA,EACZC,UAAYA,EACZH,MAAQ,EAAKU,SAASV,EAAO,UAdf,KAkBtBW,OAAS,YAAoG,IAAD,IAAhGC,UAAgG,MAA3F,KAA2F,MAArFf,aAAqF,MAA7E,GAA6E,MAAzEG,aAAyE,MAAjE,GAAiE,MAA7DE,iBAA6D,MAAjD,aAAiD,MAAzCC,iBAAyC,MAA7B,SAACC,GAAD,OAAK,EAAKD,UAAUC,IAAS,EACxG,OAAO,EAAKC,UAAU,CAClBC,IAAK,EAAKC,cAAL,IAA2BK,EAA3B,IAAqC,EAAKH,cAAcZ,GAC7DK,UAAYA,EACZC,UAAYA,EACZH,MAAQA,KAvBM,KA2BtBa,UAAY,SAACC,GAAqB,IAAfC,EAAc,uDAAP,GAChBC,EAAO,2BAAO,EAAKvB,QAAQuB,SAAYD,GAC7C,OAAOE,IAAMC,KAAK,EAAKX,cAAgBO,EAAOE,IA7B5B,KAgCtBG,OAAS,YAAqG,IAAD,IAAjGL,YAAiG,MAA1F,GAA0F,MAAtFC,YAAsF,MAA/E,GAA+E,MAA3Ef,aAA2E,MAAnE,GAAmE,MAA9DE,iBAA8D,MAAlD,aAAkD,MAA1CC,iBAA0C,MAA9B,SAACC,GAAD,OAAK,EAAKD,UAAUC,IAAU,EAC5F,2BAAO,EAAKX,QAAQuB,SAAYD,GAC7C,OAAO,EAAKV,UAAU,CAClBS,KAAOA,EACPR,IAAK,EAAKC,cACVa,OAAS,OACTlB,UAAYA,EACZC,UAAYA,EACZH,MAAQA,KAxCM,KA6CtBqB,OAAU,YACT,IAAD,IADaT,UACb,MADkB,KAClB,MADwBZ,aACxB,MADgC,GAChC,MADoCE,iBACpC,MADgD,aAChD,MADwDC,iBACxD,MADoE,SAACC,GAAD,OAAK,EAAKD,UAAUC,IACxF,EAEI,OAAO,EAAKC,UAAU,CAClBC,IAAM,EAAKC,cAAL,IAA2BK,EACjCQ,OAAS,SACTlB,UAAYA,EACZC,UAAYA,EACZH,MAAQA,KArDM,KAyDtBsB,OAAS,YAAoG,IAAD,IAA/FV,UAA+F,MAA1F,KAA0F,MAApFZ,aAAoF,MAA5E,GAA4E,MAAxEc,YAAwE,MAAjE,GAAiE,MAA7DZ,iBAA6D,MAAjD,aAAiD,MAAzCC,iBAAyC,MAA7B,SAACC,GAAD,OAAK,EAAKD,UAAUC,IAAS,EAEvG,OAAO,EAAKC,UAAU,CACnBC,IAAM,EAAKC,cAAL,IAA2BK,EACjCQ,OAAS,MACTlB,UAAYA,EACZC,UAAYA,EACZH,MAAQA,EACRc,KAAOA,KAjEO,KAuEtBS,QAAU,WACN,OAAOC,IAAUC,KAAOD,IAAUE,MAxEhB,KA2EtBnB,YAAc,WACV,OAAO,EAAKoB,UA5EM,KA+EtBlB,cAAgB,SAAEZ,GACd,IAAI+B,EAAa,GAIjB,OAHA/B,EAAMgC,SAAQ,SAAAC,GACVF,GAAU,iBAAcE,EAAd,QAEPF,EAAWG,MAAM,EAAGH,EAAWI,OAAS,IApF7B,KAuFtBxB,eAAiB,SAAEZ,GAEf,OAAOL,EAAY0C,UAAUrC,IAzFX,KA4FtBO,UAAY,SAAC+B,GAET,OADAC,QAAQC,IAAI,QAASF,GACd,CAAEG,KAAO,eA9FE,KA2GtBhC,UAAY,YASH,IAAD,IARJC,WAQI,MARE,GAQF,MAPJc,cAOI,MAPK,MAOL,MANJN,YAMI,MANG,KAMH,MALJwB,mBAKI,MALU,EAAK7C,QAAQ8C,IAKvB,MAJJrC,iBAII,MAJQ,aAIR,MAHJC,iBAGI,MAHQ,aAGR,MAFJH,aAEI,MAFI,GAEJ,MADJwC,gBAEA,MAAO,CACLH,KAAM,MACNI,QAAS,CACPnC,MACAc,SACAN,OACAwB,cACApC,YACAC,YACAH,QACAwC,qBAXA,MADc,KACd,KAnHJE,KAAKjD,QAAUA,E,qDAGVO,EAAOoB,GAEZ,GAAa,KAAVpB,EAAc,OAAOoB,EAAS,IAAMsB,KAAKhD,iB,KAV9CF,EAsGKmD,kBAAoB,WAGvB,IAFH,IAD2B7B,EAC5B,uDADmC,GAEzB8B,EAAW,IAAIC,SACrB,MAAyBC,OAAOC,QAAQjC,GAAxC,eAA+C,CAAC,IAAD,sBAArCkC,EAAqC,KAAhCC,EAAgC,KAC3CL,EAASM,OAAOF,EAAKC,GAEzB,OAAOL,GA6BApD,QC9HA2D,E,kDAVX,WAAa1D,GAAU,IAAD,8BAClB,cAAMA,IAHVC,aAAe,OAEO,EAKtB0D,mBAAqB,SAACC,GAElB,OADA,EAAK1B,SAAW,mBACT,EAAKR,OAAOkC,IALnB,EAAK1B,SAAW,YAFE,E,UAHCnC,GCEd8D,EAAa,SAAAxC,GAAI,MAAK,CAC/BuB,KC0CqB,cDzCrBI,QAAS3B,IA4BEyC,EAAW,SAAE9D,EAAS4D,GAEjC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAAOwC,EAAWxC,MACrE0C,EACE,IAAIL,EAAa1D,GAASkB,OAAO+C,ME/BnCzC,EAAQvC,EAAQ,IAIf,SAASiF,EAA4BC,GAC1C,OAAO,SAAUJ,GACf,OAAOK,EAAwBD,GAC5BE,MAAK,kBAAMC,EAAkBP,MAC7BM,MAAK,SAACrE,GACLuE,EAAiBvE,GACjB+D,EAAS,CAAEnB,KDlBQ,cCkBW5C,gBAKtCwE,SAAUlF,OAASH,EAAcG,OAGjC,IAAMmF,EAAoB,WACxB,IAAMC,EAAevF,EAAcM,gBAAgBkF,QAAQ,WAAY,IAAIA,QAAQ,UAAW,IAS9F,OARa,IAAIC,cAAY,CAC3BC,WAAY1F,EAAcI,SAC1BuF,SAAU3F,EAAcK,SACxBuF,aAAcL,EACdM,iBAAkB7F,EAAcS,YAChCqF,kBAAmB9F,EAAcO,YACjCwF,mBAAoB/F,EAAcQ,cAMhCwF,EAAoB,WAExB,OADaC,IACDC,kBAIRD,EAAwB,kBAAM,IAAIE,IAAgB,CACtDT,WAAY1F,EAAcI,SAC1BuF,SAAU3F,EAAcK,YAUpB4E,EAA0B,SAACmB,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAOlB,IAGbkB,EAAKC,YAAc,CACjBnF,UAAW,SAAUoF,GACnBJ,EAAQI,IAEVnF,UAAW,SAAUoF,GACnBJ,EAAO,IAAIK,MAAM,yCAA2CD,MAGhEH,EAAKvB,wBAAwBmB,OAK3BjB,EAAoB,SAACP,GACzB,OAAO,IAAIyB,SAAQ,SAACC,EAASC,GACPP,IACRa,YAAW,SAACF,EAAKD,IACvBC,GAAQD,EAIZrE,EAAMtB,IAAK6B,IAAUC,KAAOD,IAAUE,KAA3B,iCAAqE4D,EAAOI,QAAQjD,QAAQ,oBACrG,UAAY6C,EAAOI,QAAQjD,QAAQkD,MAAQ,eAAiBL,EAAOI,QAAQjD,QAAQmD,WAAa,cAAgBN,EAAOI,QAAQjD,QAAQoD,aACrI/B,MAAK,SAAAhD,GACP,IAAMrB,EAAUqG,EAAoBhF,EAAKA,KAAKF,GAAI0E,GAClD7F,EAAQsG,KAAR,2BAAmBtG,EAAQsG,MAASjF,EAAKA,KAAK,IAC9C0C,EAASD,EAAS9D,EAAS,CAACG,OAAS,CAAC+F,MAAQL,EAAOI,QAAQjD,QAAQkD,UACrET,EAAQzF,MATR0F,EAAO,IAAIK,MAAM,oCAAsCD,WAgBzDO,EAAsB,SAAClF,EAAI0E,GAE/B,IAAM7F,EAAU,CACdsG,KAAM,CACJnF,GAAKA,EACLoF,SAAUV,EAAOI,QAAQjD,QAAQ,oBACjCkD,MAAOL,EAAOI,QAAQjD,QAAQkD,OAGhCpD,IAAM+C,EAAOhD,YAAY2D,SACzBC,OAASZ,EAAOI,QAAQjD,QAAQ,kBAChC0D,QAAUb,EAAOI,QAAQjD,QAAQ,4BAA6B2D,QAAwE,IAA/Dd,EAAOI,QAAQjD,QAAQ,kBAAkB4D,QAAQ,SACxHC,WAAahB,EAAOhD,YAAYG,QAAQ8D,IACxCC,YAAa,GAGf,OADA/G,EAAQsG,KAAR,eAAmBtG,EAAQsG,MACpBtG,GAGIgH,EAAU,WACvB,wDACE,OAAO,IAAIxB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAOlB,IACbkB,EAAKC,YAAc,CACjBnF,UAAW,SAAUoF,GACnB,IAAI7F,EAAUqG,EAAoBY,GAAMjD,WAAWhE,QAAQsG,KAAKnF,GAAI0E,GACpEtB,EAAiBvE,GACjBiH,GAAMlD,SAAS,CAAEnB,KD5HE,cC4HiB5C,YACpCyF,EAAQzF,IAEVU,UAAW,SAAUoF,GACnBpD,QAAQC,IAAI,wBAAyBmD,GACrCJ,EAAOI,KAIXH,EAAKK,iBAgCM,EAjHa,WAE1B,MADe,UAAM7G,EAAcM,gBAApB,+CAA0EN,EAAcK,SAAxF,yBAAiHL,EAAcO,cAgHjI,EANe,WAC5BwH,IACazC,IACR0C,WC/JA,SAAS5C,EAAiBvE,GAG/BoH,aAAaC,QAAQ,UAAWC,KAAK9E,UAAUxC,IAG1C,SAASuH,IACZ,GAAGH,aAAaI,QAAQ,WACxB,CACE,IAAMxH,EAAUsH,KAAKG,MAAML,aAAaI,QAAQ,YAC1CE,EAAUC,IAAOC,KAAK5H,EAAQ6G,YAAYgB,UAC1CC,EAAeH,MAASE,UACxBE,EAAcJ,IAAOC,KAAK5H,EAAQ6G,YAAYmB,SAAS,EAAG,WAAWH,UAK3E,GAJAnF,QAAQC,IAAI,kBAAmBgF,IAAOC,KAAK5H,EAAQ6G,YAAYoB,OAAO,4BACtEvF,QAAQC,IAAI,kBAAmBgF,MAASM,OAAO,4BAC/CvF,QAAQC,IAAI,iBAAkBgF,IAAOC,KAAK5H,EAAQ6G,YAAYmB,SAAS,EAAG,WAAWC,OAAO,4BAC5FvF,QAAQC,IAAI,gBAAkBmF,EAAcJ,EAASK,GAClDD,EAAeC,EAGhB,OAFAf,IAAU3C,MAAK,SAAAhD,GAAQ,OAAO,KAC7B6G,OAAM,SAAAvH,GAAC,OAAEuG,OACHlH,EAET,GAAK0H,EAAUI,EACb,OAAO9H,EAGPgH,IAAU3C,MAAK,SAAAhD,GAAI,OAAEqB,QAAQC,IAAI,eAAgBtB,MAChD6G,OAAM,SAAAvH,GAAC,OAAEuG,OAGhB,OAAO,EAGF,SAASA,IAKhB,OAJKE,aAAaI,QAAQ,YAEtBJ,aAAae,WAAW,YAErB,ECvCP,IAKMC,EAAkBb,IAClBc,EAAgBD,GANE,CACtBrB,YAAY,EACZL,SAAS,GAqBI1G,EAfC,WAAmC,IAAlCsI,EAAiC,uDAAzBD,EAAcE,EAAW,uCAChD,OAAQA,EAAO3F,MACb,IHZuB,cGarB,OAAOS,OAAOmF,OAAO,GACnBD,EAAOvI,QACP,CAAE+G,YAAY,IAElB,IHlByB,gBGmBvB,OAAOsB,EAET,QACE,OAAOC,ICtBPD,EAAe,GASNI,EARI,WAAmC,IAAlCH,EAAiC,uDAAzBD,EAAcE,EAAW,uCAK/C,OAJIA,EAAO3F,KAIJ0F,GCLPD,EAAe,CACnBK,SAAW,GACXrH,KAAO,GACPsH,QAAS,EACTC,SAAU,GAgCGC,EA7BK,WAAmC,IAAlCP,EAAiC,uDAAzBD,EAAcE,EAAW,uCACpD,OAAQA,EAAO3F,MACb,ILE0B,iBKAxB,OADQ,2BAAO0F,GAAU,CAACI,SAAWH,EAAOvF,UAE9C,ILA2B,kBKEzB,OADQ,2BAAOsF,GAAU,CAACjH,KAAOkH,EAAOvF,QAAS2F,QAAS,IAE5D,ILF4B,qBKI1B,OADQ,2BAAOL,GAAU,CAACjH,KAAOiH,EAAMjH,KAAKyH,OAAOP,EAAOvF,SAAU4F,QAAUL,EAAOvF,UAEvF,ILH4B,qBKI1B,IAAM+F,EAAmBT,EAAMjH,KAAK2H,QAAO,SAAAC,GAAW,OAAOA,EAAM9H,KAAO+H,SAASX,EAAOvF,YAE1F,OADQ,2BAAOsF,GAAU,CAACjH,KAAO0H,IAEnC,ILR4B,qBKY1B,OAHQ,2BAAOT,GAAU,CAACI,SAAQ,2BAC5BJ,EAAMI,UAAaH,EAAOvF,WAGlC,ILR+B,sBKS7B,OAAOqF,EACT,ILaoC,6BKXhC,OADQ,2BAAOC,GAAU,CAACM,SAAU,IAExC,QACE,OAAON,IClCPD,EAAe,GAQNc,EAPM,WAAmC,IAAlCb,EAAiC,uDAAzBD,EAAcE,EAAW,uCAIjD,OAHIA,EAAO3F,KAGJ0F,GCKPD,GAAe,CACnBK,SAAW,GACXrH,KAAO,GACPuH,SAAU,GAsCGQ,GAnCO,WAAmC,IAAlCd,EAAiC,uDAAzBD,GAAcE,EAAW,uCACtD,OAAQA,EAAO3F,MACb,IPc6B,sBOZ3B,OADQ,2BAAO0F,GAAU,CAACI,SAAWH,EAAOvF,UAE9C,IPKgC,uBOH9B,OADQ,2BAAOsF,GAAU,CAACI,SAAW,KAEvC,IPG6B,oBOD3B,OADQ,2BAAOJ,GAAU,CAACjH,KAAOkH,EAAOvF,UAE1C,IPI8B,uBOH1B,IAAMqG,EAAqBf,EAAMjH,KAAK2H,QAAO,SAAAhJ,GAAa,OAAOA,EAAQmB,KAAO+H,SAASX,EAAOvF,YAEhG,OADQ,2BAAOsF,GAAU,CAACjH,KAAOgI,IAErC,IPN8B,uBOQ5B,OADQ,2BAAOf,GAAU,CAACjH,KAAOiH,EAAMjH,KAAKyH,OAAOP,EAAOvF,SAAU4F,QAAUL,EAAOvF,UAEvF,IPL+B,sBOO3B,OADWsF,EAAMU,QAAO,SAACM,GAAD,OAAUA,EAAKnI,KAAOoH,EAAOvF,WAEzD,IPP8B,uBOW1B,OAHQ,2BAAOsF,GAAU,CAACI,SAAQ,2BAC5BJ,EAAMI,UAAaH,EAAOvF,WAGpC,IPNsC,+BOQpC,OADQ,2BAAOsF,GAAU,CAACM,SAAU,IAEtC,IPR+B,wBOS7B,OAAOP,GACT,QACI,OAAOC,IC7CTD,GAAe,GAaN/B,GAZF,WAAmC,IAAlCgC,EAAiC,uDAAzBD,GAAcE,EAAW,uCACzCgB,EAAWjB,EACf,OAAQC,EAAO3F,MACb,IRwCqB,cQvCnB,OAAO2F,EAAOvF,QACd,IRwC0B,qBQtC1B,OADAuG,EAASC,YAAcjB,EAAOvF,QAAQ3B,KAC/BkI,EACT,QACE,OAAOjB,ICDEmB,GAXH,WAAmC,IAAlCnB,EAAiC,uDADzB,EACcC,EAAW,uCAC1CgB,EAAWjB,EACb,OAAQC,EAAO3F,MACb,IAAK,YACD,OAAO2G,EAAU,EACrB,IAAK,UAED,OADAA,EAAWjB,EAAM,EAErB,QACI,OAAOiB,ICRTlB,GAAe,CAAEK,SAAW,GAAIrH,KAAO,IAW9BqI,GATA,WAAmC,IAAlCpB,EAAiC,uDAAzBD,GAAcE,EAAW,uCAC/C,OAAQA,EAAO3F,MACb,IVkCuB,gBUhCrB,OADQ,2BAAO0F,GAAU,CAACjH,KAAOkH,EAAOvF,UAE1C,QACE,OAAOsF,ICTbrJ,EAAQ,IAAUC,SACX,IAAMyK,GACFtK,qCCELgJ,GAAe,CACjB,CACIlH,GAJiB,EAKjByI,SAAU,qEACVC,UAAW,uEAgBJC,GAbQ,WAAmC,IAAlCxB,EAAiC,uDAAzBD,GAAcE,EAAW,uCACvD,OAAQA,EAAO3F,MACb,IZmBoC,6BYlBlC,OAAQ2F,EAAOvF,QAAQT,OAAS,EAAMwH,GAAWxB,EAAOvF,SAAWqF,GACrE,IZkBqC,8BYjBnC,OAAO2B,GAAU1B,GAAOQ,OAAOiB,GAAWxB,EAAOvF,UACnD,IZiBsC,6BYhBpC,IAAMuG,EAAYjB,EAAMU,QAAO,SAAAiB,GAAS,OAAOA,EAAI9I,KAAO+H,SAASX,EAAOvF,YAC1E,OAAQuG,EAAShH,OAAUgH,EAAWlB,GACxC,QACE,OAAOC,IAKP0B,GAAY,SAAC1B,GAEjB,OAAQA,EAAMU,QAAO,SAAAiB,GAAM,OA1BJ,IA0BWA,EAAI9I,OAGlC4I,GAAa,SAAEG,GACjB,IAAIC,EAAkB,GAQtB,OAPAD,EAAO9H,SAAQ,SAAA6H,GACXE,EAAgBC,KAAK,CACjBjJ,GAAK8I,EAAI9I,GACTyI,SAAUD,GAAaM,EAAII,KAC3BR,UAAWF,GAAcM,EAAII,UAG9BF,GCpCL9B,GAAe,CACjB,CACIlH,GAJiB,EAKjByI,SAAU,qEACVC,UAAW,uEAgBJC,GAbQ,WAAmC,IAAlCxB,EAAiC,uDAAzBD,GAAcE,EAAW,uCACvD,OAAQA,EAAO3F,MACb,IbGkC,2BaFhC,OAAQ2F,EAAOvF,QAAQT,OAAS,EAAMwH,GAAWxB,EAAOvF,SAAWqF,GACrE,IbEmC,4BaDjC,OAAO2B,GAAU1B,GAAOQ,OAAOiB,GAAWxB,EAAOvF,UACnD,IbCoC,2BaAlC,IAAMuG,EAAYjB,EAAMU,QAAO,SAAAiB,GAAS,OAAOA,EAAI9I,KAAO+H,SAASX,EAAOvF,YAC1E,OAAQuG,EAAShH,OAAUgH,EAAWlB,GACxC,QACE,OAAOC,IAKP0B,GAAY,SAAC1B,GAEjB,OAAQA,EAAMU,QAAO,SAAAiB,GAAM,OA1BJ,IA0BWA,EAAI9I,OAGlC4I,GAAa,SAAEG,GACjB,IAAIC,EAAkB,GAQtB,OAPAD,EAAO9H,SAAQ,SAAA6H,GACXE,EAAgBC,KAAK,CACjBjJ,GAAK8I,EAAI9I,GACTyI,SAAUD,GAAaM,EAAII,KAC3BR,UAAWF,GAAcM,EAAII,UAG9BF,GCvCL9B,GAAe,CAAEK,SAAW,GAAIrH,KAAO,IAW9BiJ,GATC,WAAmC,IAAlChC,EAAiC,uDAAzBD,GAAcE,EAAW,uCAChD,OAAQA,EAAO3F,MACb,IdiCwB,iBc/BtB,OADQ,2BAAO0F,GAAU,CAACjH,KAAOkH,EAAOvF,UAE1C,QACE,OAAOsF,ICRPD,GAAe,CAAEK,SAAW,GAAIrH,KAAO,IAW9BkJ,GATI,WAAmC,IAAlCjC,EAAiC,uDAAzBD,GAAcE,EAAW,uCACnD,OAAQA,EAAO3F,MACb,If6C2B,oBe3CzB,OADQ,2BAAO0F,GAAU,CAACjH,KAAOkH,EAAOvF,UAE1C,QACE,OAAOsF,ICIEkC,eAAgB,CAC7Bf,OACAC,UACAI,kBACAQ,WACA7B,aACAI,cACA4B,qBACAtB,eACAC,iBACApJ,UACAuK,cACAjE,U,mBC+BaoE,GAnDO,SAAC,GAAD,IAAG3G,EAAH,EAAGA,SAAH,OAAkB,SAAA4G,GAAI,OAAI,SAAApC,GAG9C,GAFAoC,EAAKpC,GjBHY,QiBKbA,EAAO3F,KAAX,CAHwD,MAapD2F,EAAOvF,QARTnC,EALsD,EAKtDA,IACAc,EANsD,EAMtDA,OACAN,EAPsD,EAOtDA,KACAwB,EARsD,EAQtDA,YACApC,EATsD,EAStDA,UACAC,EAVsD,EAUtDA,UACAH,EAXsD,EAWtDA,MACAgB,EAZsD,EAYtDA,QAEIqJ,EAAe,CAAC,MAAO,UAAUC,SAASlJ,GAAU,SAAW,OAGrEH,IAAMsJ,SAASC,QAAUhJ,IAAUC,KAAOD,IAAUE,MAAQ,GAC5DT,IAAMsJ,SAASvJ,QAAQyJ,OAAO,gBAAkB,mBAChDxJ,IAAMsJ,SAASvJ,QAAQyJ,OAAvB,+BAA2DnI,GAEvDtC,GACFwD,EC1BoB,SAAAxD,GAAK,MAAK,CAChCqC,KlBEuB,YkBDvBI,QAASzC,GDwBE0K,CAAS1K,IAGpBiB,IACG0J,QADH,cAEIrK,MACAc,SACAJ,WACCqJ,EAAevJ,IAEjBgD,MAAK,YAAe,IAAZhD,EAAW,EAAXA,KACP0C,EAAStD,EAAUY,OAEpB6G,OAAM,SAAAzF,GACHC,QAAQC,IAAI,QAASF,GACrBsB,ECxBgB,SAAAtB,GAAK,MAAK,CAChCG,KlBZuB,YkBavBH,SDsBe0I,CAAS1I,IAClBsB,EAASrD,EAAU+B,IAEjBA,EAAM2I,UAAsC,MAA1B3I,EAAM2I,SAASC,QACnCtH,ECnCoB,SAAAlD,GAAG,MAAK,CAClC+B,KlBN2B,gBkBO3BI,QAAS,CACPnC,QDgCayK,CAAaC,OAAOC,SAASC,cAGzCC,SAAQ,WACHnL,GACFwD,EC7Cc,SAAAxD,GAAK,MAAK,CAC9BqC,KlBFqB,UkBGrBI,QAASzC,GD2CMoL,CAAOpL,WEhDxBtB,EAAQ,IAAUC,SAElB,IAAM0M,GAIJC,IAMa5E,GAJD6E,YAAYC,GACxBH,GAAeI,YAAgBC,KAAOxC,M,oCCRlCyC,I,OAAY,SAACvL,GACfA,EAAEwL,iBACFC,MAgDWC,GA7CA,SAAAC,GACX,OACI,yBAAKC,UAAU,uCACb,4BAAQ3J,KAAK,SAAS2J,UAAU,iBAAiBC,cAAY,WAAWC,cAAY,mBAChF,0BAAMF,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BpL,GAAG,kBACzC,yBAAKoL,UAAU,cACf,uBAAGA,UAAU,eAAehH,KAAK,KAAI,yBAAKmH,IAAI,gEAAgEC,IAAI,sBAAsBC,OAAO,KAAKC,MAAM,QACxJP,EAAMtM,QAAQ+G,YACJ,kBAAC,KAAD,CAAMwF,UAAU,WAAWO,GAAI,mBAA/B,YAIT,EAICR,EAAMtM,QAAQ+G,YACN,kBAAC,KAAD,CAAMwF,UAAU,WAAWO,GAAI,YAA/B,YAGRR,EAAMtM,QAAQ+G,YACN,kBAAC,KAAD,CAAMwF,UAAU,WAAWO,GAAI,UAA/B,WAGT,GAIA,GAMH,yBAAKP,UAAU,sBACdD,EAAMtM,QAAQ+G,WAAe,8BAAM,0BAAMwF,UAAU,aAAhB,SAAmCD,EAAMS,SAAzC,YAAqE,8BAAM,uBAAGR,UAAU,YAAYhH,KAAK,IAAIyH,QAASd,IAA3C,YAAN,MACtG,uBAAGK,UAAU,YAAYhH,KAAM6G,KAA/B,e,UC7BFa,GAjBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAA6BnN,GAAhC,EAAyBoN,MAAzB,EAAgCpN,SAAYqN,EAA5C,uDACjB,kBAAC,KAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAhB,GACrB,OAAKtM,EAAQ+G,WAWN,kBAACmG,EAAcZ,GATX,kBAAC,KAAD,CAAUQ,GAAI,CAAErB,SAAU,IAAKnD,MAAO,CAAEiF,KAAMjB,EAAMd,kBCHjEgC,I,2NAKF,OACE,yBAAKjB,UAAU,QACb,4BAAQA,UAAU,eAChB,uD,GARYW,cAePO,iBAAUD,I,ICFnBE,G,4MAQJxB,UAAY,SAACvL,GACXA,EAAEwL,iBACFC,K,kEAPInJ,KAAKqJ,MAAMtM,QAAQ+G,YACrB9D,KAAKqJ,MAAMqB,QAAQvD,KAAK,qB,+BAS1B,OACE,yBAAKmC,UAAU,QACb,4BAAQA,UAAU,8BACd,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iCAAiCG,IAAI,+HAA+HC,IAAI,MAEzL,yBAAKJ,UAAU,YACb,wBAAIA,UAAU,qBAAd,gBACA,6HACA,uBAAGA,UAAU,kBAAkBhH,KAAM6G,KAArC,cAGN,yBAAKG,UAAU,sDACX,yBAAKA,UAAU,aACb,uBAAGA,UAAU,kBAAb,mHAGN,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,kBACA,yBAAKG,IAAK/C,GAAc,6BACxB,uBAAG4C,UAAU,aAAb,wGAEF,yBAAKA,UAAU,eACb,uBAAGhH,KAAK,IAAIgH,UAAU,0BAAtB,eAIR,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,mBACA,yBAAKG,IAAK/C,GAAc,2BACxB,uBAAG4C,UAAU,aAAb,0MAEF,yBAAKA,UAAU,eACb,uBAAGhH,KAAK,IAAIgH,UAAU,0BAAtB,eAIR,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,aAAb,wJACA,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,aAAb,yJAEF,yBAAKA,UAAU,eACb,uBAAGhH,KAAK,IAAIgH,UAAU,0BAAtB,uB,GAlEPW,aA8EJO,gBAxFS,SAAAnF,GACtB,MAAO,CAAEtI,QAASsI,EAAMtI,YAG1B,SAA6B+D,GAC3B,MAAO,KAmFM0J,CAA6CC,I,ICjFtDE,G,mLAGE3K,KAAKqJ,MAAMd,SAASqC,MAAQ5K,KAAKqJ,MAAMd,SAASsC,SAClD7K,KAAKqJ,MAAMpI,2BAA2BqH,OAAOC,SAASjG,Q,+BAMxD,OAAMtC,KAAKqJ,MAAMd,SAASqC,OAAS5K,KAAKqJ,MAAMd,SAASsC,QAAW7K,KAAKqJ,MAAMtM,QAAQ+G,WAC5E,kBAAC,KAAD,CAAU+F,GAAG,oBAGf,kC,GAdSI,aAkBLO,gBA3Bf,SAA0BnF,GACxB,MAAO,CAAEtI,QAASsI,EAAMtI,YAE1B,SAA6B+D,GAC3B,MAAO,CACLG,2BAA4B,SAAAqB,GAAI,OAAIxB,EAASG,EAA2BqB,QAsB7DkI,CAA6CG,I,kCCxBtDG,G,uKAGE,OACI,4BAAQxB,UAAU,gCACd,yBAAKA,UAAU,6BACf,kBAAC,KAAD,CAAQ5D,QAAQ,GACN1F,KAAKqJ,MAAM0B,gB,GAPTC,IAAMf,WAenBO,gBAnBf,SAAyBnF,GACrB,MAAO,CAAEmB,IAAKnB,EAAMmB,OAkBTgE,CAAyBM,I,kBCQzBG,G,uKAzBF,IAAD,OACJ,OACI,yBAAK3B,UAAU,gBAAgBhJ,IAAKN,KAAKqJ,MAAMhG,KAAK6H,UAChD,yBAAK5B,UAAU,SACdtJ,KAAKqJ,MAAMhG,KAAK6H,UAEjB,yBAAK5B,UAAU,SACdtJ,KAAKqJ,MAAMhG,KAAK+D,MAEjB,yBAAKkC,UAAU,SACdtJ,KAAKqJ,MAAMhG,KAAKJ,OAEjB,yBAAKqG,UAAU,SACdtJ,KAAKqJ,MAAMhG,KAAK8H,cAEjB,yBAAK7B,UAAU,wBACX,6BACI,kBAAC,KAAD,CAAiBI,IAAI,YAAY0B,MAAO,CAAEC,WAAW,OAASC,OAAO,WAAaC,KAAMC,KAAQzB,QAAS,kBAAM,EAAKV,MAAMoC,SAAS,EAAKpC,MAAMhG,KAAK6H,aACnJ,kBAAC,KAAD,CAAkBxB,IAAI,cAAc0B,MAAO,CAAEC,WAAW,OAAQC,OAAO,UAAWI,MAAQ,OAASH,KAAMI,KAAS5B,QAAS,kBAAM,EAAKV,MAAMuC,WAAW,EAAKvC,MAAMhG,KAAK6H,oB,GAnBzKF,IAAMf,W,UCWtB4B,I,yDACF,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACDhE,MAAQ,CAAEyG,MAAO,GAAIxN,QAAU,IACpC,EAAKsN,WAAa,EAAKA,WAAWG,KAAhB,iBAClB,EAAKN,SAAW,EAAKA,SAASM,KAAd,iBAJD,E,gEAOC,IAAD,OACX/L,KAAKqJ,MAAMtM,QAAQ+G,YACnBvF,IAAMtB,IAAK6B,IAAUC,KAAOD,IAAUE,KAA3B,YAA+CgB,KAAKqJ,MAAMtM,QAAQuB,SAAS8C,MAAK,SAAAhD,GACvFA,EAAKA,KAAK4N,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEf,SAAWgB,EAAEhB,SAAY,EAAMgB,EAAEhB,SAAWe,EAAEf,UAAa,EAAI,KAC1F,EAAKiB,SAAS,CAAEL,MAAO1N,EAAKA,Y,iCAK7BF,GAAM,IAAD,OACZkO,wBAAa,CACTC,MAAO,oBACPC,QAAS,2BACTC,QAAS,CACP,CACEjP,MAAO,MACPyM,QAAS,WACLxL,IAAMI,OAAOG,IAAUC,KAAOD,IAAUE,KAA3B,oBAA+Cd,GAAM,EAAKmL,MAAMtM,QAAQuB,SAAS8C,MAAK,SAAAhD,GAC/F,IAAMoO,EAAQ,EAAKnH,MAAMyG,MAAMW,WAAU,SAAApJ,GAAI,OAAIA,EAAK6H,WAAahN,KACnE,EAAKmH,MAAMyG,MAAMY,OAAOF,EAAO,GAC/B,EAAKnD,MAAMqB,QAAQvD,KAAK,cAIlC,CACE7J,MAAO,KACPyM,QAAS,mB,+BAMZ4C,GACL3M,KAAKqJ,MAAMqB,QAAQvD,KAAK,cAAgBwF,K,+BAGlC,IAAD,OACCb,EAAQ9L,KAAKqF,MAAMyG,MACzB,OACG,kBAAC,GAAD,KACI,yBAAKxC,UAAU,OACV,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,cACZ,gCAAK,yCAAL,IAA4B,kBAAC,KAAD,CAAMO,GAAI,cAAeP,UAAU,gDAAnC,sBAE/B,yBAAKA,UAAU,aACf,yBAAKA,UAAU,mBACP,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,SAAf,SAGA,yBAAKA,UAAU,SAAf,aAGA,yBAAKA,UAAU,SAAf,SAGA,yBAAKA,UAAU,SAAf,SAGA,yBAAKA,UAAU,SAAf,SAIHwC,GAASA,EAAMc,KAAI,SAAAvJ,GAAI,OAChB,kBAAC,GAAD,CAASA,KAAMA,EAAMuI,WAAY,EAAKA,WAAYH,SAAU,EAAKA,SAAUnL,IAAK+C,EAAKyG,gBAG/EgC,GAA0B,IAAjBA,EAAMxM,SAAiB,yBAAKgK,UAAU,UAAS,sE,GA5E9EW,cAsFTO,gBA1FS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,WAyFbyN,CAAyBqB,I,UClG3BgB,GAAW,SAAAxD,GACpB,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAMhH,KAAK,KAAK,kBAAC,KAAD,CAAkBgH,UAAU,yBAAyBiC,KAAMuB,KAAeC,KAAK,KAAKhD,QAASV,EAAM2D,iBACnH,yBAAK1D,UAAU,aACTD,EAAM0B,aCRfkC,GAAW,SAAA5D,GAmBpB,OACI,0BAAMC,UAAU,MAAMpL,GAAI,mBAAoBgP,SAAU7D,EAAM8D,sBAAuBC,YAAY,GACjG,yBAAK9D,UAAU,wBACP,2BAAO+D,QAAQ,YAAf,eACA,2BAAOC,WAAUjE,EAAMkE,MAAO,WAAoB5N,KAAK,OAAOzB,GAAG,WAAWsP,aAAgBnE,EAAMkE,MAAQlE,EAAMhG,KAAK6H,UAAa,GAAIuC,SAAU,SAAC/P,GAAD,OAAO2L,EAAMqE,mBAAmBhQ,IAAI0J,KAAK,WAAWkC,UAAU,eAAeqE,YAAY,mCAE7O,yBAAKrE,UAAU,wBACX,2BAAO+D,QAAQ,QAAf,UACA,2BAAO1N,KAAK,OAAOzB,GAAG,OAAOsP,aAAenE,EAAMkE,MAAQlE,EAAMhG,KAAK+D,MAAS,GAAIqG,SAAU,SAAC/P,GAAD,OAAO2L,EAAMqE,mBAAmBhQ,IAAI0J,KAAK,OAAOkC,UAAU,eAAeqE,YAAY,6BAErL,yBAAKrE,UAAU,wBACX,2BAAO+D,QAAQ,SAAf,WACA,2BAAO1N,KAAK,QAAQzB,GAAG,QAAQsP,aAAenE,EAAMkE,MAAQlE,EAAMhG,KAAKJ,OAAU,GAAIwK,SAAU,SAAC/P,GAAD,OAAO2L,EAAMqE,mBAAmBhQ,IAAI0J,KAAK,QAAQkC,UAAU,eAAeqE,YAAY,gCAGzL,yBAAKrE,UAAU,wBACX,2BAAO+D,QAAQ,SAAf,WACA,2BAAO1N,KAAK,OAAOzB,GAAG,eAAesP,aAAenE,EAAMkE,MAAQlE,EAAMhG,KAAK8H,cAAiB,GAAIyC,UAAW,SAAClQ,GAAD,OAnClG,SAAAA,GAEnBA,EAAEmQ,UAEF,IAAsC,IADpB,CAAC,EAAG,GAAI,IACZlK,QAAQjG,EAAEoQ,YAAoBpQ,EAAEqQ,cAAcxN,MAAMjB,OAAS,KAAQ0O,OAAOC,UAAUhI,SAASvI,EAAE4C,MAA/G,CAKA,IAAI4N,EAAexQ,EAAEqQ,cAAcxN,MAC/B4N,EAASzQ,EAAEqQ,cACXzN,EAAM5C,EAAE4C,IACZ8N,YAAW,WACa,KAAjBD,EAAO5N,OAA+C,IAA/B2N,EAAavK,QAAQ,QAC3CwK,EAAO5N,MAAQ,KAAOD,KAE3B,QAVC5C,EAAEwL,iBA6BqHmF,CAAe3Q,IAAI+P,SAAU,SAAC/P,GAAD,OAAO2L,EAAMqE,mBAAmBhQ,IAAI0J,KAAK,eAAekC,UAAU,eAAeqE,YAAY,oBAGjP,yBAAKrE,UAAU,kCACX,4BAAQA,UAAU,kBAAkB3J,KAAK,UACnC0J,EAAMkE,KAAS,YAAiB,YACrClE,EAAMiF,SACH,0BAAMhF,UAAU,oCChC9BiF,G,kDACF,WAAYlF,GAAS,IAAD,8BAChB,cAAMA,IAsBV8D,sBAAwB,SAACzP,GACrBA,EAAEwL,iBACF,EAAKiD,SAAS,CAAEmC,SAAS,IAEzB,IAAMpO,EAAW,CACbgL,SAAW,EAAK7F,MAAM6F,SACtB9D,KAAM,EAAK/B,MAAM+B,KACjBnE,MAAO,EAAKoC,MAAMpC,MAClBkI,aAAc,EAAK9F,MAAM8F,cAG7B,EAAKgB,SAAS,CAAEqC,eAAe,EAAMC,OAAO,GAAD,oBAAM,EAAKpJ,MAAMoJ,QAAjB,CAAyBvO,IAAWoO,SAAS,IAEpF,EAAKjF,MAAMtM,QAAQ+G,YACnBvF,IAAMC,KAAKM,IAAUC,KAAOD,IAAUE,KAA3B,YAA+CkB,EAAU,EAAKmJ,MAAMtM,QAAQuB,SAAS8C,MAAK,SAAAhD,GAAI,MAAI,CAC7GgQ,YAAW,WACP,EAAK/E,MAAMqB,QAAQvD,KAAK,WACzB,UAEFlC,OACG,SAAAzF,GACI,EAAK2M,SAAS,CAAEqC,eAAe,EAAOE,YAAY,EAAMC,aAAenP,EAAM2I,SAAS/J,KAAKkO,cA5CvF,EAmDpBoB,mBAAqB,SAAChQ,GAClBA,EAAEwL,iBACF,EAAKiD,SAAL,gBACKzO,EAAEqQ,cAAc3G,KAAO1J,EAAEqQ,cAAcxN,SAtD5B,EA0DpByM,cAAgB,SAAAtP,GAEd,EAAK2L,MAAMqB,QAAQvD,KAAK,UA1DtB,EAAK9B,MAAQ,CACT6F,SAAU,GACV9D,KAAM,GACNnE,MAAO,GACPkI,aAAc,GACdsD,OAAQ,GACRH,SAAS,EACTE,eAAe,EACfE,YAAY,EACZC,aAAe,KACfrQ,QAAU,IAZE,E,gEAiBZ0B,KAAKqJ,MAAMtM,QAAQ+G,a,+BA8CjB,IAAD,EACwD9D,KAAKqF,MAA1DmJ,EADH,EACGA,cAAeE,EADlB,EACkBA,WAAYJ,EAD9B,EAC8BA,QAASK,EADvC,EACuCA,aAC5C,OACI,gBAAC,GAAD,KACI,gBAAC,GAAD,CAAU3B,cAAehN,KAAKgN,eAC1B,uBAAK1D,UAAU,cACX,0BA3EV,gBA4EYkF,GACE,uBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,4CAKHJ,GACG,uBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,wCAKHF,GACG,uBAAKpF,UAAU,mBAAmBsF,KAAK,SACjCD,GAGV,gBAAC,GAAD,CAAUtL,KAAMrD,KAAKqF,MAAMhC,KAAMqK,mBAAoB1N,KAAK0N,mBAAoBY,QAASA,EAASnB,sBAAuBnN,KAAKmN,+B,GAxF3HnC,aAgGVR,gBApGS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,WAmGbyN,CAAyB+D,I,+BChGlCM,G,kDACF,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IAwBV8D,sBAzBmB,yCAyBK,WAAOzP,GAAP,UAAAuO,EAAA,sDACpBvO,EAAEwL,iBACF,EAAKiD,SAAS,CAAEmC,SAAS,IACzB/P,IAAMuQ,IAAIhQ,IAAUC,KAAOD,IAAUE,KAA3B,oBAA+C,EAAKqG,MAAMnH,IAAM,EAAKmH,MAAMoJ,OAAQ,EAAKpF,MAAMtM,QAAQuB,SAAS8C,MAAK,SAAAhD,GAC1H,EAAK+N,SAAS,CAAEqC,eAAe,EAAMF,SAAS,IAC9CF,YAAW,WACP,EAAK/E,MAAMqB,QAAQvD,KAAK,WACzB,SAENlC,OACG,SAAAzF,GACI,EAAK2M,SAAS,CAAEqC,eAAe,EAAOE,YAAY,EAAMC,aAAenP,EAAM2I,SAAS/J,KAAKkO,aAX/E,2CAzBL,wDAyCnByC,UAAY,SAACN,GACT,EAAKtC,SAAS,CAAEsC,OAAO,2BAAM,EAAKpJ,MAAMoJ,QAAWA,MA1CpC,EA6CnBf,mBAAqB,SAAChQ,GAClBA,EAAEwL,iBACF,EAAK6F,UAAL,gBAAkBrR,EAAEqQ,cAAc7P,GAAKR,EAAEqQ,cAAcxN,SA/CxC,EAkDnByM,cAAgB,SAAAtP,GAEd,EAAK2L,MAAMqB,QAAQvD,KAAK,UAlDtB,EAAK9B,MAAQ,CACTnH,GAAI,EAAKmL,MAAM2F,MAAMhO,OAAO9C,GAC5BmF,KAAM,GACNoL,OAAQ,GACRH,SAAS,EACTE,eAAe,EACfE,YAAY,EACZC,aAAe,KACfrQ,QAAU,IAVC,E,gEAcE,IAAD,OACZ0B,KAAKqJ,MAAMtM,QAAQ+G,YAGnBvF,IAAMtB,IAAI6B,IAAUC,KAAOD,IAAUE,KAA3B,oBAA+CgB,KAAKqF,MAAMnH,IAAM8B,KAAKqJ,MAAMtM,QAAQuB,SAAS8C,MAAK,SAAAhD,GACvG,EAAK+N,SAAS,CAAE9I,KAAMjF,EAAKA,UAE9B6G,OAAM,SAAAzF,GAAK,OAAE,EAAK6J,MAAMqB,QAAQvD,KAAK,c,+BAkCpC,IAAD,EACuDnH,KAAKqF,MAAzDmJ,EADH,EACGA,cAAeF,EADlB,EACkBA,QAASI,EAD3B,EAC2BA,WAAYC,EADvC,EACuCA,aAC5C,OACG,gBAAC,GAAD,KACM3O,KAAKqF,MAAMhC,MACZ,gBAAC,GAAD,CAAU2J,cAAehN,KAAKgN,eAC1B,uBAAK1D,UAAU,cACX,0BApEV,aAqEWkF,GACG,uBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,+CAIHF,GACG,uBAAKpF,UAAU,mBAAmBsF,KAAK,SACjCD,GAGd,gBAAC,GAAD,CAAUtL,KAAMrD,KAAKqF,MAAMhC,KAAMqK,mBAAoB1N,KAAK0N,mBAAoBY,QAASA,EAASnB,sBAAuBnN,KAAKmN,sBAAuBI,KAAK,gB,GA1ErJvC,aAmFRR,gBAvFS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,WAsFbyN,CAAyBqE,ICjEzBI,GA3BC,SAAA5F,GACZ,IAAM6F,EAAU,GACVnC,EAAO1D,EAAM0D,KAAO1D,EAAM0D,KAAO,KACjChD,EAAU,SAACoF,GAEV9F,EAAMU,SAELV,EAAMU,QAAQ,CAACoF,YAGvB,GAAI9F,EAAM+F,OAAyB,IAAhB/F,EAAM+F,MAKrB,CACJ,IADK,IAAD,WACKC,GACNH,EAAQ/H,KAAK,kBAAC,KAAD,CAAkBmC,UAAU,OAAOiC,KAAM+D,KAAQvC,KAAMA,EAAMhD,QAAS,WAAKA,EAAQsF,EAAI,IAAK/O,IAAK+O,EAAE,MAD1GA,EAAI,EAAGA,EAAIhG,EAAM+F,MAAOC,IAAM,EAA9BA,GAGT,IAJI,eAIKA,GACLH,EAAQ/H,KAAK,kBAAC,KAAD,CAAkBmC,UAAU,gBAAgBiC,KAAM+D,KAAQvF,QAAS,WAAKA,EAAQsF,EAAI,IAAKtC,KAAMA,EAAMzM,IAAK+O,EAAE,MADpHA,EAAKhG,EAAM+F,MAAOC,EAAI,GAAKA,IAAM,EAAjCA,QART,IADuC,IAAD,WAC7BA,GACLH,EAAQ/H,KAAK,kBAAC,KAAD,CAAkBmC,UAAU,gBAAgBiC,KAAM+D,KAAQvF,QAAS,WAAKA,EAAQsF,EAAI,IAAKtC,KAAMA,EAAMzM,IAAK+O,EAAE,MADpHA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAYT,OACIH,GCQOK,iBA1BK,SAAAlG,GAChB,OACI,yBAAKC,UAAU,+BAA+BS,QAAS,kBAAIV,EAAMqB,QAAQvD,KAAK,YAAckC,EAAMtM,QAAQmB,MACtG,yBAAKoL,UAAU,OACX,yBAAKA,UAAU,6BAA4B,4BAAQA,UAAU,0BAA0BS,QAAS,kBAAIV,EAAMqB,QAAQvD,KAAK,YAAckC,EAAMtM,QAAQmB,MAAOmL,EAAMtM,QAAQsP,QACxK,yBAAK/C,UAAU,SACf,6BACI,yBAAKA,UAAU,wCACXG,IAAKJ,EAAMtM,QAAQyS,eAAiBnG,EAAMtM,QAAQyS,cAAclQ,OAASoH,GAAc2C,EAAMtM,QAAQyS,cAAc,GAAGpI,KACpH,wEAEN,yBAAKgE,MAAO,CAACqE,UAAY,SAAUC,UAAY,UACzCrG,EAAMsG,aAAe,kBAAC,KAAD,CAAiB5C,KAAK,KAAKrD,IAAI,YAAY0B,MAAO,CAAEC,WAAW,OAASC,OAAO,WAAaC,KAAMC,KAAQzB,QAAS,kBAAMV,EAAMsG,YAAYtG,EAAMtM,QAAQmB,OAC9KmL,EAAMuG,eAAiB,kBAAC,KAAD,CAAkB7C,KAAK,KAAMrD,IAAI,cAAc0B,MAAO,CAAEC,WAAW,OAAQC,OAAO,WAAaC,KAAMI,KAAS5B,QAAS,kBAAMV,EAAMuG,cAAcvG,EAAMtM,QAAQmB,SAGhM,yBAAKoL,UAAU,SACX,yBAAKA,UAAU,aAAc5E,IAAO2E,EAAMtM,QAAQ8S,WAAWC,YAC7D,yBAAKxG,UAAU,eAAe,kBAAC,GAAD,CAAS8F,MAAO/F,EAAMtM,QAAQoS,UAC5D,6BAAO9F,EAAMtM,QAAQgT,WAAa1G,EAAMtM,QAAQgT,UAAU3I,KAAOiC,EAAMtM,QAAQgT,UAAU3I,KAAO,qBAChG,6BAAOiC,EAAMtM,QAAQiT,UAAY3G,EAAMtM,QAAQiT,SAAS5I,KAAOiC,EAAMtM,QAAQiT,SAAS5I,KAAO,+BCElGmI,iBAxBG,SAAAlG,GACd,OACI,yBAAKC,UAAU,gCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BAA0B,4BAAQA,UAAU,0BAA0BS,QAAS,kBAAIV,EAAMqB,QAAQvD,KAAK,UAAYkC,EAAMrD,MAAM9H,MAAMmL,EAAMrD,MAAMoB,OAC/J,yBAAKkC,UAAU,SACf,yBAAKA,UAAU,wCAAwCI,IAAI,GACvDD,IAAKJ,EAAMrD,MAAMiK,iBAAmB5G,EAAMrD,MAAMiK,gBAAgB3Q,OAASoH,GAAc2C,EAAMrD,MAAMiK,gBAAgB,GAAG7I,KACpH,mGAEN,yBAAKkC,UAAU,SACf,6BACMD,EAAM6G,WAAa,kBAAC,KAAD,CAAiBnD,KAAK,KAAKrD,IAAI,YAAY0B,MAAO,CAAEC,WAAW,OAASC,OAAO,WAAaC,KAAMC,KAAQzB,QAAS,kBAAMV,EAAM6G,UAAU7G,EAAMrD,MAAM9H,OACxKmL,EAAM8G,aAAe,kBAAC,KAAD,CAAkBpD,KAAK,KAAMrD,IAAI,cAAc0B,MAAO,CAAEC,WAAW,OAAQC,OAAO,UAAWI,MAAQ,OAASH,KAAMI,KAAS5B,QAAS,kBAAMV,EAAM8G,YAAY9G,EAAMrD,MAAM9H,QAErM,yBAAKoL,UAAU,eACX,kBAAC,GAAD,CAAS8F,MAAO/F,EAAMrD,MAAMmJ,UAEhC,yBAAK7F,UAAU,oBAAoBD,EAAMrD,MAAM+G,KAA/C,IAAsD1D,EAAMrD,MAAMoK,OAAS/G,EAAMrD,MAAMoK,MAAMC,aCA9FC,G,kDAtBX,WAAavT,GAAU,IAAD,8BAClB,cAAMA,IAFVC,aAAe,aACO,EAMtBuT,UAAY,SAAC5P,GAET,OADA,EAAK1B,SAAW,yBACT,EAAKhC,IAAI0D,IARE,EAYtB6P,aAAe,SAAC7P,GAEZ,OADA,EAAK1B,SAAW,yBACT,EAAKR,OAAOkC,IAdD,EAiBtB8P,YAAc,SAAC9P,GAEX,OADA,EAAK1B,SAAW,yBACT,EAAKN,OAAOgC,IAjBnB,EAAK1B,SAAW,kBAFE,E,UAFMnC,GCyBjB4T,G,kDArBX,WAAa3T,GAAU,IAAD,8BAClB,cAAMA,IAHVC,aAAe,UAEO,EAKtBuT,UAAY,SAAC5P,GAET,OADA,EAAK1B,SAAW,sBACT,EAAKhC,IAAI0D,IAPE,EAWtB6P,aAAe,SAAC7P,GAEZ,OADA,EAAK1B,SAAW,sBACT,EAAKR,OAAOkC,IAbD,EAgBtB8P,YAAc,SAAC9P,GAEX,OADA,EAAK1B,SAAW,sBACT,EAAKN,OAAOgC,IAhBnB,EAAK1B,SAAW,eAFE,E,UAJInC,GCsCjB6T,GAAqB,SAAAvS,GAAI,MAAK,CACvCuB,KrCd6B,oBqCe7BI,QAAS3B,IAmDAwS,GAAmB,SAAC7T,EAAS4D,GAExC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAAOuS,GAAmBvS,MAC7E0C,EACE,IAAI4P,GAAgB3T,GAASE,IAAI+D,MC/F1B6P,GAAmB,SAAAzS,GAAI,MAAK,CACrCuB,KtCQ2B,kBsCP3BI,QAAS3B,IAQE0S,GAAoB,SAAA1S,GAAI,MAAK,CACxCuB,KtCK+B,sBsCJ/BI,QAAS3B,IAsEE2S,GAAgB,SAAEhU,EAAS4D,GAEtC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA9DxB,SAAAA,GAAI,MAAK,CACtCuB,KtCjB0B,iBsCkB1BI,QAAS3B,GA4DmD4S,CAAgB5S,MAC1E0C,EACE,IAAIwP,GAAkBvT,GAASkB,OAAO+C,MAK/BiQ,GAAiB,SAAElU,EAAS4D,GAEvC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAAOyS,GAAiBzS,MAC3E0C,EACE,IAAIwP,GAAkBvT,GAASE,IAAI+D,M,8BCrFrCkQ,G,kDAEF,aACC,IAAD,8BACI,gBACK7L,MAAQ,CACT8L,SAAU,KACVC,gBAAkB,KAClBC,iBAAmB,GAEvB,EAAKC,OAAS,EAAKA,OAAOvF,KAAZ,iBAPlB,E,gEAWQ/L,KAAKqJ,MAAMtM,QAAQ+G,YACnB9D,KAAKqJ,MAAMxI,SAASb,KAAKqJ,MAAMtM,QAAS,CAACmB,GAAK8B,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,O,6BAIvEqT,EAAcC,GACjB,IAAMtR,EAAWO,EAAaR,kBAAkB,CAACwR,QAAUzR,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,KACnFqT,EAAapS,SAAQ,SAACuS,EAAMrC,GACxBnP,EAASM,OAAO,QAASkR,MAE7B1R,KAAKqJ,MAAMsI,YAAY3R,KAAKqJ,MAAMtM,QAAS,CAAEqB,KAAO8B,IACpDF,KAAKmM,SAAS,CAACkF,iBAAmBrR,KAAKqF,MAAMgM,iBAAmB,M,+BAG/D,IACEhO,EAAQrD,KAAKqJ,MAAbhG,KACDuO,EAAQ5R,KAAKqJ,MAAMhG,KAAKkD,YAAcG,GAAe1G,KAAKqJ,MAAMhG,KAAKkD,YAAc,yDACzF,OACQ,yBAAK+C,UAAU,eACf,0BAAMuI,IAAI,aAAavP,KAAK,+EACxB,yBAAKgH,UAAU,OACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,mBACX,yBAAKG,IAAKmI,EAAOlI,IAAI,MAEzB,yBAAKJ,UAAU,sFACX,yBAAKA,UAAU,8BACX,kBAAC,KAAD,CACIhJ,IAAKN,KAAKqF,MAAMgM,iBAChBS,UAAU,EACVC,WAAW,uBACXtE,SAAUzN,KAAKsR,OACfU,aAAc,CAAC,OAAQ,OAAQ,OAAQ,QACvCC,YAAa,QACb3U,MAAM,GACN4U,aAAa,EACbC,aAAa,OAK7B,yBAAK7I,UAAU,qBACX,yBAAKA,UAAU,yDACX,wBAAIA,UAAU,6CAA6CjG,EAAK+O,WAAhE,IAA6E/O,EAAKgP,WAClF,uBAAG/I,UAAU,qBAGb,yBAAKA,UAAU,uCACX,wBAAIA,UAAU,yBACd,4BACQ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,2BACb,4BAAQA,UAAU,gCAAlB,cAEJ,yBAAKA,UAAU,kBACX,2BAAIjG,EAAKyG,aAIrB,4BACI,yBAAKR,UAAU,OACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,2BACb,4BAAQA,UAAU,gCAAlB,kBAEJ,yBAAKA,UAAU,kBACX,2BAAI5E,IAAOrB,EAAKwM,WAAW7K,OAAO,kBAI9C,4BACI,yBAAKsE,UAAU,OACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,qCACb,4BAAQA,UAAU,+BAAlB,YAEJ,yBAAKA,UAAU,kBACX,wDAIZ,4BACI,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,8BACb,4BAAQA,UAAU,kDAAlB,WAEJ,yBAAKA,UAAU,kBACX,2BAAIjG,EAAKJ,YAM7B,wBAAIqG,UAAU,6CAAd,uBACC,yBAAKA,UAAU,gBACZ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,oBAAf,SAGR,yBAAKA,UAAU,4BACX,yBAAKsF,KAAK,cAAc0D,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,MAAMpH,MAAO,CAACxB,MAAQ,OAAQN,UAAU,kE,GAtH7H0B,IAAMf,WAkIjBO,gBA5IS,SAAAnF,GACpB,MAAO,CAAEhC,KAAOgC,EAAMhC,KAAMtG,QAAUsI,EAAMtI,YAEpB,SAAA+D,GACxB,MAAO,CAEL6Q,YAAc,SAAC5U,EAASiE,GAAV,OAAmBF,ExC+BN,SAAE/D,EAAS4D,GAExC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAnCvB,SAAAA,GAAI,MAAK,CACvCuB,KCkC4B,qBDjC5BI,QAAS3B,GAiCmDqU,CAAiBrU,MAC3E0C,EACE,IAAIL,EAAa1D,GAAS2D,mBAAmBM,KwCrCL0R,CAAgB3V,EAASiE,KACnEH,SAAW,SAAC9D,EAASiE,GAAV,OAAmBF,EAASD,EAAS9D,EAASiE,QAqIhDwJ,CAA4C0G,I,OCpJ3D5I,OAAOqK,WAAW1W,OAAO,CACrB2W,SAAU,KACVC,OAAQ,CACNC,QAAS,IACTxS,IAAK,6CAIF,IAAMyS,GAAUzK,OAAOqK,WACjBK,GAAiB,CAC5BC,oBAAoB,EACpBC,QAAS,IACTC,YAAa,IACbC,WAAY,EACZC,gBAAiB,GACjBC,cAAc,EACdC,eAAe,G,+BCdnBvX,EAAQ,IAAUC,SAElB,IAWMuQ,GAXgBgH,KACpBpX,aACAA,mCACA,CAEEqX,eAAgBC,eAEhBC,cAAeD,aAAoB,CAAEE,cAAc,MAI3BC,UAAU,kBAYvBC,GARE,SAACC,EAAKC,GAEnB,OAAOxH,GAAM3B,OAAO,GAAI,CACpBoJ,aAAa,GAAD,OAAKF,EAAL,aAAaC,GACzBE,aAAc,O,oBCQP,GA/BO,SAAC5T,EAAKC,EAAO4T,GAC/B,IAIQ9N,EAAO,CACT9F,MAAOA,EACP6T,QANM,IAAIC,MAMEC,UAAYH,GAE5BhQ,aAAaC,QAAQ9D,EAAK+D,KAAK9E,UAAU8G,KAsBhC,GAlBS,SAAC/F,GACxB,IAAMiU,EAAUpQ,aAAaI,QAAQjE,GAErC,IAAKiU,EACJ,OAAO,KAER,IAAMlO,EAAOhC,KAAKG,MAAM+P,GAGxB,OAFY,IAAIF,MAERC,UAAYjO,EAAK+N,QAGxBjQ,aAAae,WAAW5E,GACjB,MAED+F,EAAK9F,OCXPiU,G,kDACJ,aACC,IAAD,8BACE,gBACKnP,MAAQ,CACToP,MAAQ,GACRhP,SAAW,IAEf,EAAK0G,SAAW,EAAKA,SAASJ,KAAd,iBANlB,E,gEAUE,IAAMI,EAAWnM,KAAKmM,SACtB,GAAInM,KAAKqJ,MAAMtM,QAAQ+G,WACvB,CACE,IAAM4Q,EAAaC,GAvBP,SAwBRD,GACFjV,QAAQC,IAAI,uBACZM,KAAKmM,SAAS,CAAEsI,MAAOpQ,KAAKG,MAAMkQ,MAIlC3B,GAAQ6B,OAAO5B,IAAiB,SAAUnQ,EAAK0F,GAC/C,GAAI1F,EAAK,OAAOpD,QAAQC,IAAI,eAAgBmD,GAC5CiR,GAASvL,EAASsM,OAAOC,SAASvM,EAASsM,OAAOE,WAAW3T,MAAK,SAAAhD,GAC9D+N,EAAS,CAACsI,MAAQrW,EAAK4W,OACvBL,GAlCM,QAkCyBtQ,KAAK9E,UAAUnB,EAAK4W,MAAO,e,+BAQnE,IAAD,OACUP,EAAWzU,KAAKqF,MAAhBoP,MAER,OADAhV,QAAQC,IAAI,QAAS+U,GACd,yBAAKnL,UAAU,oCAClB,6CACCmL,EAAM7H,KAAI,SAAAqI,GAAE,OACb,yBAAK3L,UAAU,WAAWhJ,IAAK2U,EAAGrX,KAC9B,yBAAK0L,UAAU,OAEf,oCAAG4L,YAAA,EAASC,aAAW,QAAQC,WAAUH,EAAGrX,IAAK0E,KAAK,KAAtD,eAAqE2S,EAAG7N,MACxE,kBAAC,KAAD,CAAclJ,GAAI+W,EAAGrX,IAAMyX,WAAY,WACnC,OAAO,kBAAC,KAAD,CAAQzX,IAAK,EAAKyH,MAAMI,SACvBmE,MAAM,QACND,OAAO,QACPzL,GAAG,OACHoL,UAAU,cACVgM,QAAQ,UACRC,SAAS,WACTjH,QAAQ,kBACRkH,iBAAiB,EACjBC,WAAW,EACXC,WAAW,iB,GAvDR1K,IAAMf,WAmElBO,gBAzES,SAACnF,GACrB,MAAO,CACLtI,QAASsI,EAAMtI,WAuENyN,CAAyBgK,IC/DlCmB,G,kDACJ,aACC,IAAD,8BACE,gBACKtQ,MAAQ,CACTjH,KAAO,GACPmK,SAAW,IAEf,EAAK4D,SAAW,EAAKA,SAASJ,KAAd,iBANlB,E,gEAUE,GAAI/L,KAAKqJ,MAAMtM,QAAQ+G,WACrB,GAAG9D,KAAKqJ,MAAM/B,WAAWlJ,KAAKwX,WAE5B5V,KAAKmM,SAAS,CAAC/N,KAAO4B,KAAKqJ,MAAM/B,WAAWlJ,WAEzC,CACH,IAAOyX,EAAc,IAAIxB,KAEnBlI,GADQ0J,EAAYC,WACT9V,KAAKmM,UAChB4J,EAAW/V,KAAKqJ,MAAM2M,iBAC5BjD,GAAQ6B,OAAO5B,IAAiB,SAAUnQ,EAAK0F,GAC7C,GAAI1F,EAAK,OAAOpD,QAAQC,IAAI,eAAgBmD,GAC5CiR,GAASvL,EAASsM,OAAOC,SAASvM,EAASsM,OAAOE,WAAW3T,MAAK,SAAAhD,GAChE+N,EAAS,CAAC5D,SAAUnK,EAAK4W,KAAK,GAAG5N,OAEjC6O,MAAM,GAAD,OAAInX,IAAUC,KAAOD,IAAUE,KAA/B,uBAAmDZ,EAAK4W,KAAK,GAAGkB,QAAQnC,IAAxE,gBAAmF3V,EAAK4W,KAAK,GAAGkB,QAAQlC,IAAxG,iBAAoH5V,EAAK4W,KAAK,GAAG9W,KAAMkD,MAAK,SAAC+G,GAAD,OAAcA,EAASgO,UAAQ/U,MAAK,SAACgV,GACpLL,EAASK,EAASC,MAAMR,EAAYC,aACpCrW,QAAQC,IAAI0W,EAASC,MAAMR,EAAYC,aACvC3J,EAAS,CAAC/N,KAAOgY,EAASC,MAAMR,EAAYC,0B,+BASvD,IACSrB,EAAWzU,KAAKqF,MAAhBoP,MAER,OADAhV,QAAQC,IAAI,QAAS+U,GACd,yBAAKnL,UAAU,oCAChB,4CACA,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,OAAf,IAAsB,gDAAsBtJ,KAAKqF,MAAMkD,YACjF,yBAAKe,UAAU,YACb,yBAAKA,UAAU,OACf,4CAAkBtJ,KAAKqF,MAAMjH,KAAKkY,mBAA6D,EAAtCtW,KAAKqF,MAAMjH,KAAKkY,iBAAiBC,GAAO,EAAK,IAAIC,UAA1G,UACA,8CAAoBxW,KAAKqF,MAAMjH,KAAKqY,cAAiD,QAAjCzW,KAAKqF,MAAMjH,KAAKqY,YAAYF,IAAcC,QAAQ,GAAtG,OACA,8CAAoBxW,KAAKqF,MAAMjH,KAAKsY,aAAe1W,KAAKqF,MAAMjH,KAAKsY,YAAYH,GAA/E,MACA,6CAAmBvW,KAAKqF,MAAMjH,KAAKuY,aAA+C,QAAhC3W,KAAKqF,MAAMjH,KAAKuY,WAAWJ,IAAcC,QAAQ,GAAnG,OACA,6CAAmBxW,KAAKqF,MAAMjH,KAAKwX,YAAc5V,KAAKqF,MAAMjH,KAAKwX,WAAWW,GAA5E,MACA,0CAAgBvW,KAAKqF,MAAMjH,KAAKwY,UAAY5W,KAAKqF,MAAMjH,KAAKwY,SAASL,GAArE,QACA,4CAAkBvW,KAAKqF,MAAMjH,KAAKyY,cAA0E,KAAvB,QAAlC7W,KAAKqF,MAAMjH,KAAKyY,aAAaN,IAAeC,QAAQ,GAAvG,a,GArDSxL,IAAMf,WA8DZO,gBA3ES,SAACnF,GACrB,MAAO,CACLtI,QAASsI,EAAMtI,QACfuK,WAAajC,EAAMiC,eAIG,SAACxG,GACzB,MAAO,CACLkV,iBAAkB,SAAC5X,GAAD,OAAU0C,ECfF,SAAA1C,GAAI,MAAK,CACrCuB,K7CgD2B,oB6C/C3BI,QAAS3B,GDa8B0Y,CAAiB1Y,QAkE7CoM,CAA6CmL,IE5DpDxY,GACN,CACEkG,KAAO,GACPoD,OAAS,CAAC,QAAS,kBACnBsQ,SAAW,CAAC,YAAa,eAAgB,aAWvCC,G,kLAGMhX,KAAKqJ,MAAMtM,QAAQ+G,aAEnB9D,KAAKqJ,MAAM4N,WAAW,IAAI3G,GAAkBtQ,KAAKqJ,MAAMtM,SAAUiD,KAAKqJ,MAAMtM,SAC5EiD,KAAKqJ,MAAM6N,aAAa,IAAIC,GAAoBnX,KAAKqJ,MAAMtM,SAAUiD,KAAKqJ,MAAMtM,Y,+BAI9E,IAAD,EAC6BiD,KAAKqJ,MAA/BlD,EADH,EACGA,cAAeM,EADlB,EACkBA,OACvB,OACG,gBAAC,GAAD,KACK,uBAAK6C,UAAU,OACX,uBAAKA,UAAU,kCACX,uBAAKA,UAAU,eAEf,uBAAKA,UAAU,6BACP,uBAAKA,UAAU,iBAEX,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,aAAY,gBAAC,GAAD,OAC3B,uBAAKA,UAAU,YACX,6CAEInD,GAAiBA,EAAciR,QAAO,SAACC,EAAata,EAASyP,GAQrD,OAPIA,EA/C/B,GAgD+B6K,EAAYlQ,KAER,gBAAC,GAAD,CAAapK,QAASA,EAASuD,IAAKvD,EAAQmB,MAI7CmZ,IACR,KAGf,uBAAK/N,UAAU,YACf,2CAEQ7C,GAAUA,EAAO2Q,QAAO,SAACC,EAAarR,EAAOwG,GAMrC,OALIA,EA9D/B,GA+D+B6K,EAAYlQ,KACR,gBAAC,GAAD,CAAWnB,MAAOA,EAAO1F,IAAK0F,EAAM9H,MAGrCmZ,IACR,MAIvB,uBAAK/N,UAAU,YACX,uBAAKA,UAAU,kBAAiB,gBAAC,GAAD,OAChC,uBAAKA,UAAU,kBAAiB,gBAAC,GAAD,iB,GAtDxC0B,aAiEbR,gBApFS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,QAAS0J,OAASpB,EAAMO,YAAYxH,KAAM+H,cAAgBd,EAAMc,cAAc/H,KAAMkZ,UAAYjS,EAAMhC,KAAKkU,kBAU3G,SAAAzW,GACxB,MAAO,CAEHmW,WAAY,SAAChP,EAASlL,GAAV,OAAsB+D,EAAUmH,EAAQhL,IAAI,CAACC,OAAS,CAACuU,QAAU1U,EAAQsG,KAAKnF,IAAMX,QAAU,kBAAmBJ,MAAQA,GAAMsJ,OAAQjJ,UAAY,SAACY,GAAS,OAAOyS,GAAiBzS,QACjM8Y,aAAc,SAACjP,EAASlL,GAAV,OAAsB+D,EAAUmH,EAAQhL,IAAI,CAACC,OAAS,CAACuU,QAAU1U,EAAQsG,KAAKnF,IAAMX,QAAU,kBAAmBJ,MAAQA,GAAM4Z,SAAUvZ,UAAY,SAACY,GAAQ,OAAOuS,GAAmBvS,WAqE/LoM,CAA6CwM,I,iDC/FtDhH,G,4MACF3K,MAAQ,CACJwF,OAAQ,GACRtK,MAAO,GACPiX,YAAc,GACdC,YAAa,G,EAGjBC,kBAAoB,SAAAha,GAChB,EAAKyO,SAAS,CAACtB,OAAQnN,EAAEyQ,OAAO5N,MAAOA,MAAO7C,EAAEyQ,OAAO5N,MAAOkX,YAAa,K,EAG/EE,oBAAsB,SAACC,EAAoBC,GACxCpY,QAAQC,IAAIkY,EAAoBC,GAC/B,EAAK1L,SAAS,CACVtB,OAAQ,GACRtK,MAAOqX,EAAmBE,kBAC1BN,YAAcI,EAAmBG,WAErC,EAAK1O,MAAMoE,SAAS,cAAemK,EAAmBG,UACtD,EAAK5L,SAAS,CAACsL,YAAa,K,EAGhCO,eAAiB,WACbvY,QAAQC,IAAI,kBAAmB,EAAK2F,MAAMwF,S,EAG9CoN,mBAAqB,SAAA7P,GAEjB3I,QAAQC,IAAI,gBAAiB0I,I,EAGjC8P,OAAS,SAACxa,GAGL,EAAK2H,MAAMoS,aACZhY,QAAQC,IAAI,OAAQhC,GACpB,EAAKyO,SAAS,CACZ5L,MAAO,GACPkX,YAAa,M,EA6GvBU,UAAY,SAACC,GAEX,OADA3Y,QAAQC,IAAI0Y,EAAWC,QACuB,IAAvCD,EAAWC,MAAM1U,QAAQ,SAC9ByU,EAAWE,YACX,M,uDA5GU,IAAD,SACmBtY,KAAKqF,MAAtBwF,EADF,EACEA,OAAQtK,EADV,EACUA,MADV,EAEqDP,KAAKqJ,MAAvDkP,EAFH,EAEGA,WAAYC,EAFf,EAEeA,WAAYta,EAF3B,EAE2BA,GAAIkJ,EAF/B,EAE+BA,KAAM9J,EAFrC,EAEqCA,MAAOmb,EAF5C,EAE4CA,KAG/CC,EAWEF,EAXFE,QACAC,EAUEH,EAVFG,SACAC,EASEJ,EATFI,SACAC,EAQEL,EARFK,WACAC,EAOEN,EAPFM,cACAC,EAMEP,EANFO,eACAC,EAKER,EALFQ,MACAC,EAIET,EAJFS,UACAC,EAGEV,EAHFU,WACAC,EAEEX,EAFFW,QACAC,EACEZ,EADFY,OAGIC,EAAkB,CACtB,eACAX,GAAW,aACXC,GAAY,cACZE,GAAc,gBACdC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAS,WACTC,GAAa,aACbC,GAAc,cACdC,GAAW,aACX,yBACA,mBAECpT,OAAOuT,SACPC,KAAK,KAEAC,EAAU,2BACXjB,GADW,IAEdjP,UAAW+P,EACXI,aAAc,QAGZC,EAAgB1Z,KAAKqJ,MAAMiM,QAAwB,mBAAd,YAE3C,OACE,yBAAKhM,UAAWoQ,GACbpc,GACC,2BAAOgM,UAAU,mBAAmB+D,QAASnP,GAAMkJ,GAChD9J,EACAsb,GAAY,MAGjB,yBAAKtP,UAAU,aACf,kBAAC,KAAD,CACItI,OAAQ,CACJV,IApGD,0CAqGCqZ,UAAW,kBAEftP,OAAQ,SAAAuP,GAAU,OACdA,GACI,kBAAC,KAAD,CACIA,WAAYA,EACZC,sBAAuB,CACnBC,MAAOjP,GAMXkP,WAAY,EAAK/B,eACjBgC,gBAAiB,EAAKrC,oBACtBsC,eAAgB,EAAKhC,mBACrBiC,cAAc,4BACdC,aAAc,SAAA/B,GAAU,OACpB,yBAAK9O,UAAU,iBACV,EAAK6O,UAAUC,MAIxB,2CACQoB,EADR,CAEI7Z,KAAK,OACL8Z,aAAa,MACblZ,MAAOA,EACP2X,OAAQ,EAAKA,OACbzK,SAAU,EAAKiK,0BAS9Ce,GAAQ,2BAAOnP,UAAU,wBAAwBmP,GAEjDW,GACCA,EAAOxM,KAAI,SAACpN,EAAOgN,GAAR,OACT,yBAAKlM,IAAKkM,EAAOlD,UAAU,oBACxB9J,W,GA9IgByK,aA2JRmQ,0BAAYC,gBAAaP,MAAzBM,CAAgCpK,ICnKhC,IACX5I,KAAM,CACJiF,MAAO,CACLiO,QAAS,YAAoB,EAAjB/Z,MAAiB,EAAVtD,IACjB,OAAO,MCJF,IACXsd,QAAS,CACPC,QAAS,oCACTrB,QAAS,0CAEX/R,KAAM,CACJiF,MAAO,CACLmO,QAAS,wCACTC,KAAM,CACFH,QAAS,iCCiBfI,G,kDACJ,WAAYrR,GAAQ,IAAD,6BACjBtF,EAAQsF,EAAMtM,QAAQsG,KAAKnF,KAC3B,cAAMmL,IAKRoE,SAAW,SAACkN,EAAcC,GACxB,IAAMxc,EAAO,GACbA,EAAKuc,GAAgBC,EACrB,EAAKzO,SAAL,eACK/N,KARL,EAAKyc,YAAcnW,MAASM,OAAO,uBACnC,EAAKK,MAAQ,CAAEyV,MAAM,EAAOC,SAAU1R,EAAM0R,SAAUvD,YAAa,IAJlD,E,gEAgBbxX,KAAKqJ,MAAMtM,QAAQ+G,aAChB9D,KAAKqJ,MAAM5C,OAAOf,QACrB1F,KAAKqJ,MAAM4N,WAAWjX,KAAKqJ,MAAMtM,QAAS,CACxCG,OAAQ,CAAEuU,QAASzR,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,S,6CAMjD8B,KAAKqJ,MAAM2R,gB,+BAGH,IAAD,OACP,OACE,yBAAK1R,UAAU,aACb,kBAAC,QAAD,CACEhE,OAAQ,gBAAG2V,EAAH,EAAGA,WAAYC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,KAAvB,OACN,EAAK9R,MAAM8D,sBAAsB,CAC/BpQ,QAAS,EAAKsM,MAAMtM,QACpBke,aACAC,SACAC,UAGJC,MAAOA,GACPC,SAAUA,IAEV,yBAAK/R,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,SAAD,CACElC,KAAK,QACL9J,MAAM,eACNgM,UAAU,eACVgS,aAActb,KAAK6a,YACnBjC,UAAQ,IAEV,kBAAC,GAAD,CACE1a,GAAG,cACHkJ,KAAK,cACL9J,MAAM,0BACNgM,UAAU,eACVmE,SAAUzN,KAAKyN,SACflN,MAAOP,KAAKqF,MAAMmS,eAGtB,yBAAKlO,UAAU,oBACb,kBAAC,SAAD,CACE3J,KAAK,SACLyH,KAAK,UACL7G,MAAOP,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,KAEjC,0BAAMkN,MAAO,CAACmQ,MAAQ,UACtB,kBAAC,UAAD,CAAQ5b,KAAK,UACVK,KAAKqJ,MAAMkE,KAAO,eAAiB,wB,GAtE1BvC,IAAMf,WAiFjBO,gBAhGS,SAACnF,GACvB,MAAO,CACLtI,QAASsI,EAAMtI,QACf0J,OAAQpB,EAAMO,YACdO,cAAed,EAAMc,kBAIC,SAACrF,GACzB,MAAO,CACLmW,WAAY,SAACla,EAASiE,GAAV,OAAqBF,EAASmQ,GAAelU,EAASiE,KAClEga,YAAa,kBAAMla,GZwDZ,SAASA,EAAUC,GAExBD,EACEgQ,GAAkB,cY0BXtG,CAA4CkQ,ICxFrDc,G,kDAEF,WAAYnS,GAAS,IAAD,8BAChB,cAAMA,IA4CV8D,sBAAwB,YAAiC,IAA9B8N,EAA6B,EAA7BA,WAA6B,KAAjBC,OAAiB,EAATC,KACV,EAAK9R,OAA/BtM,EAD6C,EAC7CA,QAAS0e,EADoC,EACpCA,cACRxU,EAAW,EAAK5B,MAAhB4B,OACR,OAAO,IAAI1E,SAAQ,SAASC,EAASC,GACjC,GAAI1F,EAAQ+G,WAAa,CACrB,IAAM5D,EAAWwQ,GAAgBzQ,kBAAkBgb,GACnDhU,EAAO9H,SAAQ,SAACuS,EAAMrC,GAClBnP,EAASM,OAAO,QAASkR,MAE7B+J,EAAc1e,EAAS,CAACqB,KAAO8B,IAC/BsC,EAAQtC,QAERuC,EAAO,2BAzDC,EA8DpBuK,cAAgB,SAAAtP,GACZ,EAAK2L,MAAMqB,QAAQvD,KAAK,oBA7DxB,EAAK9B,MAAQ,CACToJ,OAAQ,GACRH,SAAS,EACTE,eAAe,EACfE,YAAY,EACZC,aAAe,KACf1H,OAAS,GACT6T,MAAO,GAEX,EAAKxJ,OAAS,EAAKA,OAAOvF,KAAZ,iBAXE,E,mDAcbwF,EAAcC,GACjBxR,KAAKmM,SAAS,CACVlF,OAASjH,KAAKqF,MAAM4B,OAAOpB,OAAO0L,O,0CAKjCvR,KAAKqJ,MAAMtM,QAAQ+G,YACpB9D,KAAKqJ,MAAMqS,yB,yCAIAC,EAAWC,EAAWC,GAAW,IAAD,OAE5C7b,KAAKqJ,MAAMyS,UACTH,EAAUxV,cAAc/H,KAAKkB,SAAWU,KAAKqJ,MAAMlD,cAAc/H,KAAKkB,QACxEU,KAAKqJ,MAAMlD,cAAcR,UACxB3F,KAAKmM,SAAS,CAAEqC,eAAgB,IAChCJ,YAAW,WACP,GAAG,EAAK/E,MAAMqS,qBACd,CACI,IAAMxd,EAAK,EAAKmL,MAAMlD,cAAcR,QAAQzH,GAC5C,EAAKmL,MAAM0S,sBACX,EAAK1S,MAAMqS,qBAAqBxd,QAEhC,EAAKmL,MAAMqB,QAAQvD,KAAK,YAE7B,S,+BAyBD,IAAD,EAC+DnH,KAAKqF,MAAjEmJ,EADH,EACGA,cAAeE,EADlB,EACkBA,WAAYJ,EAD9B,EAC8BA,QAASK,EADvC,EACuCA,aADvC,EACqD1H,OAC1D,OACQ,kBAAC,GAAD,CAAU+F,cAAehN,KAAKqJ,MAAM2S,OAChC,yBAAK1S,UAAU,kBACX,yBAAKA,UAAU,cACX,4BA5EZ,qBA6EckF,GACF,yBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,+CAICJ,GACD,yBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,wCAICF,GACD,yBAAKpF,UAAU,mBAAmBsF,KAAK,SACjCD,IAIV,yBAAKrF,UAAU,aACX,kBAAC,GAAD,CAAahJ,IAAI,eAAevD,QAASiD,KAAKqF,MAAMtI,QAASoQ,sBAAuBnN,KAAKmN,sBAAuBmB,QAASA,EAAU7H,OAAQzG,KAAKqJ,MAAM5C,OAAQ6K,OAAQtR,KAAKsR,gB,GA5FlLtG,IAAMf,WAqGZO,gBAjHS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,QAAS0J,OAAOpB,EAAMO,YAAaO,cAAgBd,EAAMc,kBAGzD,SAAArF,GACxB,MAAO,CACH2a,cAAiB,SAAC1e,EAASiE,GAAV,OAAqBF,EdqEd,SAAE/D,EAAS4D,GAEzC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAxCrB,SAAAA,GAAI,MAAK,CACzCuB,KrCtBgC,uBqCuBhCI,QAAS3B,GAsCmD6d,CAAmB7d,MAC7E0C,EACE,IAAI4P,GAAgB3T,GAAS0B,OAAOuC,Kc3Eakb,CAAkBnf,EAASiE,KAC1E+a,oBAAsB,kBAAKjb,EdWa,CAC9CnB,KrCUwC,qCmDoF3B6K,CAA4CgR,IC1G1CW,I,OAXH,SAAC,GAAoC,EAAlCC,YAAmC,IAAtBtB,EAAqB,EAArBA,KAAM/P,EAAe,EAAfA,SAC1BsR,EAAoBvB,EAAO,sBAAwB,qBACzD,OACE,uBAAKxR,UAAW+S,GACd,2BAAS/S,UAAU,cAChByB,M,0CCLLuR,G,kDACJ,cAUA,EATEC,YASF,EAREC,cAQF,EAPEC,iBAOF,EANEjd,MAMF,EALEkd,UAKF,EAJEC,wBAIF,EAHEC,gBAGF,EAFEnP,SAEF,wC,+DAImBkO,EAAWC,EAAWC,GACvC,IAAI7b,KAAKqJ,MAAMqT,WAAa1c,KAAKqJ,MAAMmT,cACvC,CACE,IAAMK,EAAK,GACX7c,KAAKqJ,MAAMmT,cAAcxH,KAAK7V,SAAQ,SAAA2d,GAAG,OAAGD,EAAI1V,KAAK2V,EAAI5e,OACtD8B,KAAKqJ,MAAMoE,UAEVzN,KAAKqJ,MAAMoE,SAASoP,M,6BAIrBlc,GAGL,MAAO,O,GA7BgBqK,IAAMf,WAkChB8S,GADOC,aAAoBV,I,ICvBtCW,G,uKAEF,IAAMC,EACmB,MAAvBld,KAAKqJ,MAAM8T,QACP,WAAand,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,GAAK,kBAC1C,WAAa8B,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,GAC3C,OACE,6BACE,sCACA,6BACE,kBAACkf,GAAA,EAAD,CAAgB9c,IAAI,MAAM+c,UAAU,YAAYC,UAAU,WAE5D,yCACA,6BACE,kBAACF,GAAA,EAAD,CACE9c,IAAI,MACJ+c,UAAU,YACVC,UAAU,cAGd,sCACA,6BACE,kBAACF,GAAA,EAAD,CACE9c,IAAI,MACJ+c,UAAU,YACVC,UAAU,SACVlgB,MAAO,GACPmgB,UAAU,EACVC,cAAe,KAKnB,kBAACC,GAAA,EAAD,CAAWC,YAAa1d,KAAKqJ,MAAMqU,YAAaR,QAASA,IACzD,kBAAC,GAAD,CAAezP,SAAUzN,KAAKqJ,MAAMsU,SAAUrd,IAAI,a,GAlCrC0K,IAAMf,WAuCZO,gBA3Cf,SAAyBnF,GACvB,MAAO,CAAEmB,IAAKnB,EAAMmB,IAAKzJ,QAASsI,EAAMtI,WA0C3ByN,CAAyByS,I,uDClDxCjhB,EAAQ,IAAUC,SAElB,IAAM2hB,GAAgBpK,KACpBpX,aACAA,mCACA,CAEEqX,eAAgBC,eAEhBC,cAAeD,aAAoB,CAAEE,cAAc,MAiBxCiK,GAbM,CACfhT,OADe,SACRiT,GAEL,OADqBA,EAASC,MAAK,kBAAoC,KAApC,EAAG/c,OAAUgd,SAEvCJ,GAAc/S,OAAOiT,GAEvBvb,QAAQC,QAAQ,CACrByb,QAAS,CAAC,CAAEjJ,KAAM,QAGtBkJ,qBAAsBN,GAAcM,sB,WCpBpCC,G,kDACJ,cACA,EADcC,MACd,EADqBC,OACrB,EAD6BC,UAC7B,wC,+DAImB3C,EAAWC,EAAWC,GAClCF,EAAU4C,oBAAsBve,KAAKqJ,MAAMkV,mBAC1Cve,KAAKqJ,MAAMmV,cAAcxe,KAAKqJ,MAAMkV,qB,+BAM3C,IAAD,OAEE,OAAO,kBAAC,QAAD,KAAM,kBAAC,UAAD,CAAS9Q,SAAU,SAAAgR,GAG5B,EAAKpV,MAAMgV,OAAOI,EAAMC,aAExB1e,KAAKqJ,MAAM+U,MAAMxR,KAAI,SAAAvG,GAAI,OAC3B,4BAAQ/F,IAAK+F,EAAK9F,MAAOA,MAAO8F,EAAK9F,OAEhC8F,EAAK/I,gB,GAxBC0N,IAAMf,WAkDR0U,GADAC,aAAcT,ICHvBU,GAAY,CAChB3Y,aAAc,CAAC,YAAa,WAAY,iBAGpC4Y,G,kDACJ,WAAYzV,GAAQ,IAAD,8BACjB,cAAMA,IAqDR0V,UAAY,WACV,EAAK5S,SAAS,CAAE2O,MAAM,KAvDL,EA0DnBkE,UAAY,WAAe,wDACzB,EAAK7S,SAAS,CAAE2O,MAAM,KA3DL,EA8DnB0D,cAAgB,SAACS,GACf,IAAIjT,EAAOiT,EAAUvd,QAAQ,YAAa,IAC9B,aAATsK,IAAqBA,EAAM,WAC9B,EAAKG,SAAS,CAAE+S,kBAAmBlT,KAjElB,EAoEnBmT,SAAW,SAACzhB,GACNA,EAAEghB,WACJ,EAAKvS,SAAS,CAAEgR,QAASzf,EAAEghB,aAtEZ,EA0EnBU,oBAAsB,SAAC1hB,GACrB,IAAI2hB,EAAQhb,KAAK9E,UAAU7B,KAAO2G,KAAK9E,UAAU,EAAK8F,MAAMia,aACxD5hB,EAAE4B,QAAU+f,IACd,EAAKhW,MAAM6N,aAAa,EAAK7N,MAAMtM,QAAS,CAC1CQ,QAAS,EAAK8H,MAAM6Z,kBACpBhiB,OAAQ,CAAEqiB,GAAI7hB,EAAE6b,KAAK,MACrBpc,MAAO0hB,GAAU3Y,aACjB7I,KAAM,EAAKgI,MAAMma,YACjBpiB,MAzGa,KA2Gf,EAAK+O,SAAS,CAAEmT,YAAa5hB,MApFd,EAwFnB+hB,SAAW,SAAC/hB,GACV+B,QAAQC,IAAI,WAAYhC,IAvFxB,EAAK2H,MAAQ,CACX0R,SAAU,GAEVyI,YAAa,EACb1E,MAAM,EACNoE,kBA/Be,kBAgCfI,YAAa,GACbnC,QAAS,GAEX,EAAKvN,cAAgB,EAAKA,cAAc7D,KAAnB,iBACrB,EAAK4D,YAAc,EAAKA,YAAY5D,KAAjB,iBACnB,EAAK2T,YAAc,EAAKA,YAAY3T,KAAjB,iBAbF,E,gEAkBb/L,KAAKqJ,MAAMtM,QAAQ+G,a,6CAMvB9D,KAAKqJ,MAAMsW,kB,oCAGCzhB,GAAK,IAAD,OAChBkO,wBAAa,CACXC,MAAO,oBACPC,QAAS,gDACTC,QAAS,CACP,CACEjP,MAAO,MACPyM,QAAS,WACP,EAAKV,MAAMuG,cAAc,EAAKvG,MAAMtM,QAASmB,KAGjD,CACEZ,MAAO,KACPyM,QAAS,mB,kCAML6V,GACV5f,KAAKqJ,MAAMqB,QAAQvD,KAAK,iBAAmByY,K,kCAGjCA,GACV5f,KAAKqJ,MAAMqB,QAAQvD,KAAK,YAAcyY,K,+BAyC9B,IAAD,OACC7I,EAAa/W,KAAKqJ,MAAlB0N,SACR,OACE,kBAAC,GAAD,KACE,kBAAC8I,GAAA,EAAD,CACEvf,IAAI,MACJwf,UAAU,WACVjC,aAAcA,IAEd,kBAACkC,GAAA,EAAD,CAAOD,UAAU,YACf,yBAAKxW,UAAU,OACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,cACb,uCAEE,kBAAC,KAAD,CACEO,GAAG,IACHE,QAAS/J,KAAK+e,UACdzV,UAAU,gDAHZ,wBASJ,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CACE0W,kBAAkB,WAClB5B,MAAO,CACL,CAAE7d,MAAO,WAAYjD,MAAO,oBAC5B,CAAEiD,MAAO,kBAAmBjD,MAAO,oBACnC,CAAEiD,MAAO,uBAAwBjD,MAAO,iBACxC,CAAEiD,MAAO,sBAAuBjD,MAAO,kBAEzCkhB,cAAexe,KAAKwe,iBAGxB,yBAAKlV,UAAU,UACb,0BAAMA,UAAU,eACd,kBAAC2W,GAAA,EAAD,SAIN,yBAAK3W,UAAU,cACb,yBAAKA,UAAU,SACb,kBAAC4W,GAAA,EAAD,OAEF,yBAAK5W,UAAU,SACb,kBAAC6W,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,cACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,+BACb,kBAAC,QAAD,KACE,kBAAC,SAAD,CACElC,KAAK,YACL9J,MAAM,OACNiD,MAAM,IACNkN,SAAUzN,KAAKmf,SACfiB,QAA0C,IAAjCna,SAASjG,KAAKqF,MAAM8X,WAE/B,kBAAC,SAAD,CACC7T,UAAU,kBACTlC,KAAK,YACL9J,MAAM,gBACNiD,MAAM,IACNkN,SAAUzN,KAAKmf,SACfiB,QAA0C,IAAjCna,SAASjG,KAAKqF,MAAM8X,aAInC,yBAAK7T,UAAU,iBAAiBpL,GAAG,YACjC,kBAAC,GAAD,CACEyf,SAAU3d,KAAKof,oBACfjC,QAASnd,KAAKqF,MAAM8X,QACpB7c,IAAI,MACJod,YAlMP,OAsMC,yBAAKpU,UAAU,SACb,yBAAKA,UAAU,OACZtJ,KAAKqJ,MAAM0N,UACV/W,KAAKqJ,MAAM0N,SAASnK,KAAI,SAAC7P,GAAD,OACtB,yBAAKuD,IAAKvD,EAAQmB,GAAIoL,UAAU,UAC9B,kBAAC,GAAD,CACEvM,QAASA,EACTuD,IAAKvD,EAAQmB,GACb0R,cAAe,EAAKA,cACpB8P,YAAa,EAAKA,YAClB/P,YAAa,EAAKA,oBAIvBoH,GAAgC,IAApBA,EAASzX,SACtB,yBAAKgK,UAAU,UACb,kEAKR,yBAAKA,UAAU,SACT,yBAAKA,UAAU,kBAAiB,kBAAC,GAAD,OAChC,yBAAKA,UAAU,kBAAiB,kBAAC,GAAD,SAGxC,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACb,0BAAMA,UAAU,eACd,kBAAC2W,GAAA,EAAD,eAUlB,kBAAC,GAAD,CAAOnF,KAAM9a,KAAKqF,MAAMyV,KAAMsB,YAAa,SAAC1e,GAAD,OAAO,EAAKshB,UAAUthB,KAC/D,kBAAC,GAAD,CACEF,UAAW,SAACE,GAAD,OAAO,EAAKshB,UAAUthB,IACjCge,qBAAsB1b,KAAK0f,YAC3B1D,MAAOhc,KAAKgf,kB,GA5NG/U,aAmOZO,gBAvPS,SAACnF,GACvB,MAAO,CACLtI,QAASsI,EAAMtI,QACfga,SAAU1R,EAAMc,cAAc/H,KAC9BoI,IAAKnB,EAAMmB,QAIW,SAAC1F,GACzB,MAAO,CACLoW,aAAc,SAACna,EAASiE,GAAV,OAAqBF,EAAS8P,GAAiB7T,EAASiE,KACtE4O,cAAe,SAAC7S,EAASmB,GAAV,OAAiB4C,EpBsEH,SAAC/D,EAASmB,GAEzC,OAAO,SAAS4C,EAAUC,GAExB,IAAMC,EAAS,CAAE9C,GAAIA,EAAIV,UAAY,SAACY,GAAS,OArDtB,SAAAA,GAAI,MAC7B,CACEuB,KrCtC4B,uBqCuC5BI,QAAS3B,GAkD2CiiB,CAAmBniB,KACzE4C,EACE,IAAI4P,GAAgB3T,GAAS4B,OAAOqC,KoB5EGsf,CAAkBvjB,EAASmB,KACpEyhB,cAAe,kBAAM7e,EpBlBiB,CACxCnB,KrCOiC,8ByDqPpB6K,CAA4CsU,I,uICvR5CyB,KAAIC,aAAa,CAC5BlgB,IAAMmgB,KAASngB,IACfogB,aAAc,OACdC,aAAc,UACdC,OAAQ,O,6DCHNC,G,kDACJ,WAAYxX,GAAQ,IAAD,8BACjB,cAAMA,IAORoE,SAAW,SAACgR,EAAD,GAA0B,IAAhB7D,EAAe,EAAfA,SACnBnb,QAAQC,IAAI,MAAOkb,GACf,EAAKvV,MAAM9E,QAAUqa,GACvB,EAAKzO,SAAS,CACZ5L,MAAOqa,KAZM,EAiBnB1C,OAAS,SAACuG,GACJ,EAAKpZ,MAAM9E,OAAOd,QAAQC,IAAI,OAAQ+e,EAAMtQ,OAAO5N,OACvD,IAAIugB,EAAM,EAAKzX,MAAM0X,OAAOC,MAC1B,SAACC,GAAD,OAAOA,EAAE,EAAK5X,MAAM6X,WAAazC,EAAMtQ,OAAO5N,SAEhD,EAAK8I,MAAM8X,SAAS,EAAK9X,MAAMjC,KAAM0Z,EAAMA,EAAI5iB,GAAKugB,EAAMtQ,OAAO5N,QAtBhD,EAyBnB6gB,mBAAqB,SAACC,GAAD,OAAgBA,EAAW,EAAKhY,MAAM6X,UAzBxC,EA2BnBI,iBAAmB,SAACD,GAAD,OACjB,6BAAMA,EAAW,EAAKhY,MAAM6X,WA5BX,EAgCnBK,4BAA8B,YAAwB,IAArBhhB,EAAoB,EAApBA,MAAOihB,EAAa,EAAbA,OACtC,EAAKrV,SAAS,CACZsV,YAAa,EAAKpY,MAAMqY,eAAenhB,EAAOihB,MAlC/B,EAuCnBG,4BAA8B,WAC5B,EAAKxV,SAAS,CACZsV,YAAa,MAzCE,EA6CnBG,qBAAuB,SACrBnD,EADqB,GAGjB,IADF4C,EACC,EADDA,WAEF5hB,QAAQC,IAAI+e,EAAMtQ,QAClB,EAAK9E,MAAM8X,SAAS,EAAK9X,MAAMjC,KAAMia,EAAWnjB,KAlD/B,EAqDnB2jB,wBAA0B,SAACthB,GACzB,OAAO,GApDP,EAAK8E,MAAQ,CACX9E,MAAO8I,EAAM9I,OAAS,GACtBkhB,YAAapY,EAAM0X,QAJJ,E,qDAyDT,IAAD,SACmD/gB,KAAKqJ,MAAvDkP,EADD,EACCA,WAAYC,EADb,EACaA,WAAYta,EADzB,EACyBA,GAAIkJ,EAD7B,EAC6BA,KAAM9J,EADnC,EACmCA,MAAOmb,EAD1C,EAC0CA,KAD1C,EAEwBzY,KAAKqF,MAA5B9E,EAFD,EAECA,MAAOkhB,EAFR,EAEQA,YAGb/I,EAWEF,EAXFE,QACAC,EAUEH,EAVFG,SACAC,EASEJ,EATFI,SACAC,EAQEL,EARFK,WACAC,EAOEN,EAPFM,cACAC,EAMEP,EANFO,eACAC,EAKER,EALFQ,MACAC,EAIET,EAJFS,UACAC,EAGEV,EAHFU,WACAC,EAEEX,EAFFW,QACAC,EACEZ,EADFY,OAGIC,EAAkB,CACtB,eACAX,GAAW,aACXC,GAAY,cACZE,GAAc,gBACdC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAS,WACTC,GAAa,aACbC,GAAc,cACdC,GAAW,aACX,mBAECpT,OAAOuT,SACPC,KAAK,KAEFC,EAAU,2BACXjB,GADW,IAEdhY,QACA2X,OAAQlY,KAAKkY,OACbzK,SAAUzN,KAAKyN,SACfqU,QAAS,kBACP,EAAKP,4BAA4B,CAC/BhhB,MAAO6G,EACPoa,OAAQ,wBAEZtjB,GAAIkJ,EACJA,OACAkC,UAAW+P,EACXI,aAAc,QAGVC,EAAe1Z,KAAKqJ,MAAMiM,QAC5B,YACA,mBAEJ,OACE,yBAAKhM,UAAWoQ,GACbpc,GACC,2BAAOgM,UAAU,mBAAmB+D,QAASnP,GAAMkJ,GAChD9J,EACAsb,GAAY,MAGjB,yBACEtP,UAAU,mBACV8B,MAAO,CAAE2W,UAAW,IAAKC,SAAU,SAEnC,kBAAC,KAAD,CACEP,YAAaA,EACbF,4BAA6BvhB,KAAKuhB,4BAClCH,mBAAoBphB,KAAKohB,mBACzBE,iBAAkBthB,KAAKshB,iBACvB9H,WAAYA,EACZoI,qBAAsB5hB,KAAK4hB,qBAC3BD,4BAA6B3hB,KAAK2hB,4BAClCE,wBAAyB7hB,KAAK6hB,2BAMjCpJ,GAAQ,2BAAOnP,UAAU,wBAAwBmP,GAEjDW,GACCA,EAAOxM,KAAI,SAACpN,EAAOgN,GAAR,OACT,yBAAKlM,IAAKkM,EAAOlD,UAAU,oBACxB9J,W,GA/IcwL,IAAMf,WAuJpBmQ,0BAAYC,gBAAaP,MAAzBM,CAAgCyG,IC3JhC,IACXzZ,KAAM,CACJiF,MAAO,CACLiO,QAAS,YAAoB,EAAjB/Z,MAAiB,EAAVtD,IACjB,OAAO,MCJF,IACXsd,QAAS,CACPC,QAAS,oCACTrB,QAAS,0CAEX/R,KAAM,CACJiF,MAAO,CACLmO,QAAS,wCACTC,KAAM,CACFH,QAAS,+BAGfnJ,SAAU,CACRqJ,QAAS,qCACTC,KAAM,CACFH,QAAS,iCCNN2H,G,kDALX,WAAallB,GAAU,IAAD,8BAClB,cAAMA,IAFVC,aAAe,eAGX,EAAKiC,SAAW,oBAFE,E,UAFSnC,GCSpBolB,GAAa,SAAEnlB,EAAS4D,GAEnC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAX5B,SAAAA,GAAI,MAAK,CAClCuB,K/DkCwB,iB+DjCxBI,QAAS3B,GASmD+jB,CAAc/jB,MACxE0C,EACE,IAAImhB,GAAqBllB,GAASE,IAAI+D,MCR/BohB,G,kDALX,WAAarlB,GAAU,IAAD,8BAClB,cAAMA,IAFVC,aAAe,QAGX,EAAKiC,SAAW,aAFE,E,UAFEnC,GCMbma,GAAa,SAAEla,EAAS4D,GAEnC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAT7B,SAAAA,GAAI,MAAK,CACjCuB,KjEoCuB,gBiEnCvBI,QAAS3B,GAOmDikB,CAAajkB,MACvE0C,EACE,IAAIshB,GAAcrlB,GAASE,IAAI+D,MCYjC6d,GAAY,CAChBxX,QAAS,CAAC,SACVZ,OAAQ,CAAC,iBAGL6b,G,kDACJ,aAAe,IAAD,8BACZ,gBAOF7U,SAAW,SAACkN,EAAcC,GACxB,IAAMxc,EAAO,GACbA,EAAKuc,GAAgBC,EACrB,EAAKzO,SAAL,eACK/N,KAZO,EAiCdmkB,oBAAsB,SAAChiB,GACrB,IAAKA,EACH,OAAO,EAAK8I,MAAM5C,OAAOV,QACvB,SAACgb,GAAD,OAAYA,EAAO3P,kBAAoB,EAAK/L,MAAM+L,mBAGtD,IAAMoR,EAAajiB,EAAMkiB,OAAOC,cAC1BC,EAAcH,EAAWljB,OAC/B,OAAuB,IAAhBqjB,EACH,GACA,EAAKtZ,MAAM5C,OAAOV,QAChB,SAACgb,GAAD,OACEA,EAAO1Q,MAAMqS,cAAcrjB,MAAM,EAAGsjB,KAAiBH,GACrDzB,EAAO3P,kBAAoB,EAAK/L,MAAM+L,oBA9ClC,EAkDdwR,qBAAuB,SAACriB,GACtB,IAAKA,EAAO,OAAO,EAAK8I,MAAMhC,QAC9B,IAAMmb,EAAajiB,EAAMkiB,OAAOC,cAC1BC,EAAcH,EAAWljB,OAC/B,OAAuB,IAAhBqjB,EACH,GACA,EAAKtZ,MAAMhC,QAAQtB,QACjB,SAACgb,GAAD,OACEA,EAAO3Z,KAAKsb,cAAcrjB,MAAM,EAAGsjB,KAAiBH,MAxD5D,EAAKnd,MAAQ,CACX8L,SAAU,KACVC,gBAAiB,MAJP,E,gEAiBRpR,KAAKqJ,MAAMtM,QAAQ+G,YAChB9D,KAAKqJ,MAAM5C,OAAOnH,QACrBU,KAAKqJ,MAAM4N,WAAWjX,KAAKqJ,MAAMtM,QAAS,CACxCK,MAAO,IACPD,MAAO0hB,GAAUpY,SAEhBzG,KAAKqJ,MAAMhC,QAAQ/H,QACtBU,KAAKqJ,MAAM6Y,YAAYliB,KAAKqJ,MAAMtM,QAAS,CACzCK,MAAO,IACPD,MAAO0hB,GAAUxX,WAGrBrH,KAAKqJ,MAAMqB,QAAQvD,KAAK,O,+BAiClB,IAAD,OACP,OACE,yBAAKmC,UAAU,aACb,kBAAC,QAAD,CACEhE,OAAQ,gBAAG2V,EAAH,EAAGA,WAAYC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,KAAvB,OACN,EAAK9R,MAAM8D,sBAAsB,CAC/BpQ,QAAS,EAAKsM,MAAMtM,QACpBke,aACAC,SACAC,UAGJC,MAAOA,GACPC,SAAUA,IAEV,yBAAK/R,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,SAAD,CACElC,KAAK,OACL9J,MAAM,WACNgM,UAAU,eACVsP,UAAQ,IAEV,kBAAC,GAAD,CACEmI,OAAQ/gB,KAAKqJ,MAAMhC,QACnBD,KAAK,kBACL8Z,QAAQ,OACR5jB,MAAM,kBACNgM,UAAU,eACVqE,YAAY,UACZpN,MAAOP,KAAKqF,MAAM+L,gBAClB+P,SAAUnhB,KAAKyN,SACfiU,eAAgB1hB,KAAK4iB,qBACrBtN,SAAS,EACTsD,UAAQ,IAEV,kBAAC,GAAD,CACEmI,OAAQ/gB,KAAKqJ,MAAM5C,OACnBW,KAAK,WACL8Z,QAAQ,QACR5jB,MAAM,iBACNgM,UAAU,eACVqE,YAAY,iBACZpN,MAAOP,KAAKqF,MAAM8L,SAClBgQ,SAAUnhB,KAAKyN,SACfiU,eAAgB1hB,KAAKuiB,oBACrBjN,QAAwC,OAA/BtV,KAAKqF,MAAM+L,gBACpBwH,UAAQ,IAEV,kBAAC,KAAD,CACE9G,UAAU,EACVC,WAAW,gBACXtE,SAAUzN,KAAKqJ,MAAMiI,OACrBU,aAAc,CAAC,OAAQ,OAAQ,OAAQ,QACvCC,YAAa,QACbC,aAAa,KAGjB,yBAAK5I,UAAU,UACb,kBAAC,SAAD,CACE3J,KAAK,SACLyH,KAAK,UACL7G,MAAOP,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,KAEjC,kBAAC,UAAD,CAAQyB,KAAK,UACVK,KAAKqJ,MAAMkE,KAAO,aAAe,qB,GAhItBvC,IAAMf,WA0InBO,gBA9JS,SAACnF,GACvB,MAAO,CACLtI,QAASsI,EAAMtI,QACf0J,OAAQpB,EAAMoB,OAAOrI,KACrBiJ,QAAShC,EAAMgC,QAAQjJ,SAID,SAAC0C,GACzB,MAAO,CACLohB,YAAa,SAACnlB,EAASiE,GAAV,OAAqBF,EAASohB,GAAYnlB,EAASiE,KAChEiW,WAAY,SAACla,EAASiE,GAAV,OAAqBF,EAASmW,GAAWla,EAASiE,QAmJnDwJ,CAA4C8X,IClJrDO,G,kDACF,WAAYxZ,GAAS,IAAD,8BAChB,cAAMA,IAkCV8D,sBAAwB,YAAiC,IAA9B8N,EAA6B,EAA7BA,WAA6B,KAAjBC,OAAiB,EAATC,KACR,EAAK9R,OAAjCtM,EAD6C,EAC7CA,QAAS+lB,EADoC,EACpCA,gBACR7b,EAAW,EAAK5B,MAAhB4B,OACR,OAAO,IAAI1E,SAAQ,SAASC,EAASC,GACjC,GAAI1F,EAAQ+G,WAAa,CACrB,IAAM5D,EAAWoQ,GAAkBrQ,kBAAkBgb,GACrDhU,EAAO9H,SAAQ,SAACuS,EAAMrC,GAClBnP,EAASM,OAAO,QAASkR,MAE7BoR,EAAgB/lB,EAAS,CAAEqB,KAAO8B,IAClCsC,EAAQtC,QAERuC,EAAO,2BA/CC,EAoDpBiL,mBAAqB,SAAAhQ,GACjBA,EAAEwL,iBACF,EAAKiD,SAAL,gBACKzO,EAAEqQ,cAAc3G,KAAO1J,EAAEqQ,cAAcxN,SArD5C,EAAK8E,MAAQ,CACTmJ,eAAe,EACfE,YAAY,EACZC,aAAe,KACf1H,OAAS,IAEb,EAAKqK,OAAS,EAAKA,OAAOvF,KAAZ,iBARE,E,mDAWbwF,EAAcC,GACjBxR,KAAKmM,SAAS,CACVlF,OAASjH,KAAKqF,MAAM4B,OAAOpB,OAAO0L,O,yCAIvBoK,EAAWC,EAAWC,GAAW,IAAD,OAE5C7b,KAAKqJ,MAAMyS,UACTH,EAAU/V,YAAYxH,KAAKkB,SAAWU,KAAKqJ,MAAMzD,YAAYxH,KAAKkB,QAAWU,KAAKqJ,MAAMzD,YAAYD,UACrG3F,KAAKmM,SAAS,CAAEqC,eAAgB,IAChCJ,YAAW,WACP,GAAG,EAAK/E,MAAMqS,qBACd,CACI,IAAMxd,EAAK,EAAKmL,MAAMzD,YAAYD,QAAQzH,GAE1C,EAAKmL,MAAMqS,qBAAqBxd,QAEhC,EAAKmL,MAAMqB,QAAQvD,KAAK,YAE7B,S,+BA4BD,IAAD,EACuDnH,KAAKqF,MAAzDmJ,EADH,EACGA,cAAeE,EADlB,EACkBA,WAAYJ,EAD9B,EAC8BA,QAASK,EADvC,EACuCA,aAC5C,OACQ,gBAAC,GAAD,CAAU3B,cAAehN,KAAKqJ,MAAM2S,OAChC,uBAAK1S,UAAU,cACX,0BA9EZ,iBA+EckF,GACF,uBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,4CAICJ,GACD,uBAAKlF,UAAU,mBAAmBsF,KAAK,SAAvC,wCAICF,GACD,uBAAKpF,UAAU,mBAAmBsF,KAAK,SACjCD,GAGN,gBAAC,GAAD,CAAe3I,MAAOhG,KAAKqF,MAAMW,MAAO0H,mBAAoB1N,KAAK0N,mBAAoBP,sBAAuBnN,KAAKmN,sBAAuBmB,QAASA,EAAUgD,OAAQtR,KAAKsR,e,GAjFlKtG,aAwFfR,gBAnGS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,QAAS6I,YAAcP,EAAMO,gBAG7B,SAAA9E,GACxB,MAAO,CACHgiB,gBAAkB,SAAC/lB,EAASiE,GAAV,OAAqBF,E7B8Cd,SAAE/D,EAAS4D,GAExC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAvB9B,SAAAA,GAAI,MAC3B,CACEuB,KtCjC0B,qBsCkC1BI,QAAS3B,GAoBiD2kB,CAAiB3kB,MAC3E0C,EACE,IAAIwP,GAAkBvT,GAAS0B,OAAOuC,K6BpDU8hB,CAAgB/lB,EAASiE,KACzEgiB,kBAAoB,kBAAIliB,E7BAgB,CAC5CnB,KtCuBoC,mCmEoEzB6K,CAA4C+E,aAAWsT,KCjFhEI,G,kDACJ,WAAY5Z,GAAQ,IAAD,8BACjB,cAAMA,IAaR0V,UAAY,WACV,EAAK5S,SAAS,CAAE2O,MAAM,KAfL,EAkBnBkE,UAAY,WAAe,wDACzB,EAAK7S,SAAS,CAAE2O,MAAM,KAjBtB,EAAKzV,MAAQ,CACX6d,OAAQ,CAAEhlB,GAAI,EAAGkJ,KAAM,qBACvB+b,cAAe,GACfC,aACE,gGACFjS,SAAU9H,EAAM8H,SAChBkS,cAAe,GACfvI,MAAM,GAER,EAAKkE,UAAY,EAAKA,UAAUjT,KAAf,iBAXA,E,gEAuBb/L,KAAKqJ,MAAMtM,QAAQ+G,aACrB9D,KAAKmM,SAAS,CACZgF,SAAUnR,KAAKqJ,MAAM8H,SACrBkS,cAAerjB,KAAKqJ,MAAMia,gBAAgBvT,YAExC/P,KAAKqJ,MAAMia,gBAAgBnS,UAC7BnR,KAAKqJ,MAAMka,UAAUvjB,KAAKqJ,MAAMtM,QAAS,CACvCmB,GAAI8B,KAAKqJ,MAAMia,gBAAgBnS,SAC/BhU,MAAO,CAAC,uB,yCAKGwe,EAAWC,EAAWC,GACvC,GACEF,EAAU2H,gBAAgBnS,WAAanR,KAAKqJ,MAAM8H,WACrB,IAA7BnR,KAAKqJ,MAAMma,cACX,CACA,IAAMrS,EAAWnR,KAAKqJ,MAAMma,cACxBxjB,KAAKqJ,MAAMma,cAActlB,GACzB8B,KAAKqJ,MAAM8H,SACfnR,KAAKqJ,MAAM2Z,oBAEXhjB,KAAKqJ,MAAMoE,SAAS0D,GACpBnR,KAAKqJ,MAAMka,UAAUvjB,KAAKqJ,MAAMtM,QAAS,CACvCmB,GAAIiT,EACJhU,MAAO,CAAC,uB,+BAKJ,IAAD,OACDJ,EAAUiD,KAAKqJ,MAAMia,gBACrBG,EACJzjB,KAAKqJ,MAAM7D,YACXxF,KAAKqJ,MAAM7D,WAAWyK,iBACtBjQ,KAAKqJ,MAAM7D,WAAWyK,gBAAgB3Q,OAClCoH,GAAc1G,KAAKqJ,MAAM7D,WAAWyK,gBAAgB,GAAG7I,KACvDpH,KAAKqF,MAAM+d,aACjB,OACE,uBAAK9Z,UAAWtJ,KAAKqJ,MAAMqQ,aAAe,KACxC,uBAAKpQ,UAAU,aACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,UACb,yCAGF,uBAAKA,UAAU,SACb,uBACE8B,MAAO,CAAEE,OAAQ,WACjBvB,QAAS,kBACP,EAAKV,MAAMqB,QAAQvD,KAAK,UAAYpK,EAAQoU,WAE9C1H,IAAKga,KAGT,uBAAKna,UAAU,SACb,uBAAKA,UAAU,sCAEX,gBAAC,KAAD,CACE3J,KAAM+jB,aAAUC,OAChBpjB,MAAOP,KAAKqJ,MAAM7D,WAAW4B,MAAQ,iBACrCoG,aAAcxN,KAAKqJ,MAAM7D,WAAW4B,KACpCqG,SAAUzN,KAAKqJ,MAAMoE,SACrBmW,QAAS5jB,KAAKqJ,MAAM5C,OACpBod,SAAS,KACTC,SAAS,OACTxa,UAAU,kBAKftJ,KAAKqJ,MAAM7D,YACV,uBAAK8D,UAAU,qBACb,gBAAC,GAAD,CACE8F,MAAOpP,KAAKqJ,MAAM7D,WAAW2J,OAC7BpF,QAAS/J,KAAK+jB,aACdhX,KAAK,QAKV/M,KAAKqJ,MAAM7D,YACV,uBAAK8D,UAAU,qBAAf,QACQtJ,KAAKqJ,MAAM7D,WAAWuH,MAGhC,uBAAKzD,UAAU,qBACb,0BACE3J,KAAK,SACL2J,UAAU,iCACVS,QAAS/J,KAAK+e,WAHhB,eAUJ,gBAAC,GAAD,CACEjE,KAAM9a,KAAKqF,MAAMyV,KACjBsB,YAAa,SAAC1e,GAAD,OAAO,EAAKshB,UAAUthB,KAEnC,gBAAC,GAAD,CACEF,UAAW,SAACE,GAAD,OAAO,EAAKshB,UAAUthB,IACjCge,qBAAsB1b,KAAKgf,oB,GAhIjBhU,aA0IXR,gBA1JS,SAACnF,GACvB,MAAO,CACLtI,QAASsI,EAAMtI,QACfumB,gBAAiBje,EAAMc,cAAcV,SACrC+d,cAAene,EAAMO,YAAYD,QACjCH,WAAYH,EAAMO,YAAYH,aAIR,SAAC3E,GACzB,MAAO,CACLyiB,UAAW,SAACxmB,EAASiE,GAAV,OAAqBF,EAASiQ,GAAchU,EAASiE,KAChEgiB,kBAAmB,kBAAMliB,E9BPmB,CAC5CnB,KtCuBoC,mCoE6HzB6K,CAGb+E,aAAW0T,K,+BCjJbjnB,EAAQ,IAAUC,SAElB,IAUQkB,GAAQ,CACZJ,QAAU,CAAC,WAAY,6BAerBinB,G,kDAGF,WAAY3a,GACX,IAAD,8BACI,cAAMA,IA8CV4a,iBAAmB,WAEf,IAAMC,EAAe,CAAC,CAAChmB,GAAK,EAAGkJ,KAAO,WAClC8b,EAAS,EAAK7d,MAAM6d,OACxB,EAAK7Z,MAAM5C,OAAOmG,KAAI,SAACuX,GACnB,IAAIne,EAAQ,CAAE9H,GAAKimB,EAAIjmB,GAAKkJ,KAAO+c,EAAI/c,MAEvC,OADG+c,EAAIjmB,KAAO,EAAKmL,MAAMia,gBAAgBnS,WAAU+R,EAASld,GACrDke,EAAa/c,KAAKnB,MAE7B,EAAKmG,SAAS,CAACgX,cAAee,EAAchB,OAASA,KAxDzD,EA+DAlW,cAAgB,SAAAtP,GAEZ,EAAK2L,MAAMqB,QAAQpL,OAAS,EAAK,EAAK+J,MAAMqB,QAAQ0Z,SAAW,EAAK/a,MAAMqB,QAAQvD,KAAK,oBAjE3F,EAoEA4c,aAAe,SAAE3lB,GAEb,EAAKiL,MAAMgb,gBAAgB,EAAKhb,MAAMtM,QAAS,CAACmB,GAAK,EAAKmL,MAAM2F,MAAMhO,OAAO9C,GAAIE,KAAOA,IACxF,EAAK+N,SAAU/N,IAvEnB,EA0EAkmB,iBAAmB,SAAC3J,EAAeC,GAC/B,GAAIA,EAAJ,CACA,IAAMxc,EAAO,GACbA,EAAKuc,GAAgBC,EACrB,EAAKmJ,aAAL,eAAuB3lB,MA9E3B,EAkFAmmB,gBAAkB,SAAC7mB,GAGZA,EAAEghB,YAAc,EAAKrZ,MAAMmf,YAC1B,EAAKrY,SAAS,CAACqY,UAAY9mB,EAAEghB,YAC7B,EAAKqF,aAAa,CAACS,UAAW9mB,EAAEghB,cAvFxC,EA2FE+F,eAAiB,SAAC/mB,EAAGuO,EAAGyY,KA3F1B,EAgGAC,cAAgB,SAACzmB,GAEb,GAAIA,EAAJ,CACA,EAAK6lB,aAAa,CAAE5S,SAAWjT,IAC/B,IAAM0mB,EAAQ3e,SAAS/H,GACvB,EAAKmH,MAAM8d,cAAcvW,KAAI,SAACuX,GAE1B,OADGA,EAAIjmB,KAAO0mB,GAAQ,EAAKzY,SAAS,CAAC+W,OAASiB,KACvC,OAvGf,EA2GAU,YAAc,SAACnnB,GAEX,EAAKyO,SAAS,CAAC2Y,cAAgB,EAAKzb,MAAMxC,eAAe,MA7G7D,EAgHAke,gBAAkB,SAACrnB,GAEf,EAAKyO,SAAS,CAAC2Y,cAAgB,EAAKzb,MAAMxC,eAAenJ,GAAIsnB,WAAatnB,KAlH9E,EAqHA+S,YAAa,SAAC/S,GAEV,IAAI6E,SAAS,SAACC,EAASC,GACnBD,EAAQ,EAAK6G,MAAM4b,mBAAmB,EAAK5b,MAAMtM,QAAS,EAAKsI,MAAMyf,cAAc5mB,QAEtFkD,MAAK,SAAA1D,GACF,IAAMwnB,EAAqC,IAA1B,EAAK7f,MAAM2f,WAAmB,EAAI,EAAK3f,MAAM2f,WAAY,EAC1E,EAAK7Y,SAAU,CAAC6Y,WAAaE,EAAUJ,cAAgB,EAAKzb,MAAMxC,eAAeqe,SA5HzF,EAgIAC,aAAe,SAAAC,GACX,IAAIC,EAAgB3gB,IAAO0gB,GAAMpgB,OAAO,uBACxC,EAAK+e,aAAa,CAACuB,aAAeD,IAClC,EAAKlZ,SAAS,CAACiZ,KAAOA,KAnI1B,EA+SAG,SAAW,WAEP,IAAIC,EAAUxpB,EAAQ,IAAQwpB,QAC1BrB,EAAM,CACNsB,WAAY,iCAEZC,MAAOhhB,MAASM,OAAO,uBACvB2gB,IAAKjhB,MAASkhB,IAAI,EAAG,QAAQ5gB,OAAO,uBACpC6gB,IAAK,MACLC,MAAO,SAGPC,KAAeC,SADH,oCAEZD,KAAeE,YAAY9B,GAC1B/iB,MAAK,SAAS6c,GACXxe,QAAQC,IAAI8lB,EAAQvH,EAAS,CAAEiI,QAAQ,EAAMC,MAAOC,WA5T5D,EAAKC,mBAAqB,IAAI3V,GAAgBrH,EAAMtM,SAEpD,EAAKsI,MAAQ,CACToB,OAAS,GACTyc,OAAQ,CAAChlB,GAAK,EAAGkJ,KAAO,qBACxB0d,cAAgB,KAChB3B,cAAe,GACf9R,iBAAmB,EACnB2T,WAAa,EACbI,KAAM,GACNZ,UAAY,MAEhB,EAAKlT,OAAS,EAAKA,OAAOvF,KAAZ,iBAdlB,E,gEAmBQ/L,KAAKqJ,MAAMtM,QAAQ+G,YACnB9D,KAAKqJ,MAAM4N,WAAWjX,KAAKqJ,MAAMtM,QAAS,CAACQ,QAAS,WAAYH,MAAM,GAAIF,OAAS,CAACuU,QAAUzR,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,MACtH8B,KAAKqJ,MAAMid,YAAYtmB,KAAKqJ,MAAMtM,QAAS,CAACmB,GAAK8B,KAAKqJ,MAAM2F,MAAMhO,OAAO9C,GAAKf,MAAQA,GAAMJ,UAC5FiD,KAAKqJ,MAAMkd,kBAAkBvmB,KAAKqJ,MAAMtM,QAAS,CAACG,OAAS,CAACspB,WAAaxmB,KAAKqJ,MAAM2F,MAAMhO,OAAO9C,OAGjG8B,KAAKqJ,MAAMqB,QAAQvD,KAAK,c,6BAKzBoK,EAAcC,GACjB,GAAID,EAAajS,OAAjB,CACA,IAAMY,EAAWwQ,GAAgBzQ,kBAAkB,CAACumB,WAAaxmB,KAAKqJ,MAAMia,gBAAgBplB,GAAIuT,QAAUzR,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,KAClIqT,EAAapS,SAAQ,SAACuS,EAAMrC,GACxBnP,EAASM,OAAO,QAASkR,MAE7B1R,KAAKqJ,MAAMod,UAAUzmB,KAAKqJ,MAAMtM,QAAS,CAAEqB,KAAO8B,IAClDF,KAAKmM,SAAS,CAACkF,iBAAmBrR,KAAKqF,MAAMgM,iBAAmB,O,yCAIjDsK,EAAWC,EAAWC,IAE/B7b,KAAKqJ,MAAM5C,OAAOnH,SAAWU,KAAKqF,MAAM8d,cAAc7jB,QAAUU,KAAKqJ,MAAMia,gBAAgBplB,IACzFyd,EAAUlV,OAAOnH,SAAWU,KAAKqJ,MAAM5C,OAAOnH,SAAYU,KAAKikB,qB,6CAgBvEjkB,KAAKqJ,MAAMpF,iB,+BA2EX,IAAMlH,EAAUiD,KAAKqJ,MAAMia,gBAC3B,OACI,kBAAC,GAAD,KACE,kBAAC,oBAAD,CAAkBoD,MAAOC,KAASC,SAChC,kBAAC,GAAD,CAAU5Z,cAAehN,KAAKgN,eAC5B,kBAAC,QAAD,KACE,yBAAK1D,UAAU,aACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,wBACZ,kBAAC,YAAD,CACEsP,UAAU,EACVrY,MAAOxD,EAAQsP,OAAS,GACxBmB,aAAczQ,EAAQsP,MACtBwa,OAAQ7mB,KAAK+jB,aACb+C,SAAS,WAGb,yBAAKxd,UAAU,UACb,kBAAC,GAAD,CACE8F,MAAOrS,EAAQoS,OACfpF,QAAS/J,KAAK+jB,aACdhX,KAAK,SAIX,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,YACX,kBAAC,KAAD,CACEhJ,IAAKN,KAAKqF,MAAMgM,iBAChBS,UAAU,EACVC,WAAW,cACXtE,SAAUzN,KAAKsR,OACfU,aAAc,CAAC,OAAQ,QAAS,OAAQ,OAAQ,QAChDC,YAAa,QACbC,aAAa,EACb6U,WAAW,EACXC,gBAAgB,kBAGtB,6BACE,kBAAC,KAAD,CACE5I,MAAOpe,KAAKqJ,MAAMxC,eAClBogB,aAAa,EACbC,WAAW,EACXC,WAAYnnB,KAAKqF,MAAM2f,WACvBoC,QAASpnB,KAAK+kB,gBACdF,YAAa7kB,KAAK6kB,YAClBwC,kBAAmB,YAGvB,yBAAK/d,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,KAAD,CACEyD,KAAK,KACLrD,IAAI,cACJ0B,MAAO,CACLC,WAAY,OACZC,OAAQ,UACRI,MAAO,OAETH,KAAMI,KACN5B,QAAS/J,KAAKyQ,YACdlQ,MAAOP,KAAKqF,MAAM2f,aAEpB,kBAAC,SAAD,CAAO1iB,KAAMgG,OAAOC,SAASjG,OAC1B,gBAAGglB,EAAH,EAAGA,YAAahZ,EAAhB,EAAgBA,QAAhB,OACC,4BACE3O,KAAK,SACL2N,SAAUgB,EACVvE,QAASud,GAHX,YASJ,kBAAC,QAAD,CAAMhlB,KAAMgG,OAAOC,SAASjG,KAAMilB,KAAK,aACvC,kBAAC,YAAD,CAAUjlB,KAAMgG,OAAOC,SAASjG,UAItC,yBAAKgH,UAAU,iBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,6BACE,6CAEF,kBAAC,SAAD,CACElC,KAAK,YACL9J,MAAM,UACNiD,MAAM,IACNkN,SAAUzN,KAAKukB,gBACfnE,QAASrjB,EAAQmB,KAA4B,IAAtBnB,EAAQynB,YAEjC,kBAAC,SAAD,CACEpd,KAAK,YACL9J,MAAM,SACNiD,MAAM,IACNkN,SAAUzN,KAAKukB,gBACfnE,QAASrjB,EAAQynB,YAAmC,IAAtBznB,EAAQynB,aAG1C,6BACE,8CAEF,kBAAC,GAAD,CACEtmB,GAAG,cACHkJ,KAAK,cACLkC,UAAU,eACVmE,SAAUzN,KAAKskB,iBACfpM,OAAQlY,KAAKykB,eACblkB,MAAOxD,EAAQya,YACf7J,YACE5Q,EAAQiT,SACJjT,EAAQiT,SAAS8H,kBACjB,2BAIV,yBAAKxO,UAAU,eACb,6BACE,0CAEF,kBAAC,KAAD,CACE7D,SAAUzF,KAAKqF,MAAM+f,KACrB9b,UAAU,iCACVmE,SAAUzN,KAAKmlB,aACfqC,gBAAc,EACdC,WAAY,qBACZC,gBAAiBhjB,IAAO3H,EAAQuoB,cAActgB,OAC5C,yBAIN,kBAAC,GAAD,CACEyI,SAAUzN,KAAK2kB,cACfle,OAAQzG,KAAKqF,MAAM8d,cACnBhS,SAAUpU,EAAQoU,SAClBuI,aAAa,oBAEf,yBAAKpQ,UAAU,eACb,6BACE,2CAEF,kBAAC,eAAD,CACE/I,MACExD,EAAQ4qB,OAAS,qCAEnBre,UAAU,yBACVkE,aAAczQ,EAAQ4qB,MACtBd,OAAQ7mB,KAAK+jB,aACb+C,SAAS,QACTc,SAAUC,KAAEC,wB,GApSlB7d,aAsUXO,gBAhWS,SAAAnF,GACpB,MAAO,CACHtI,QAASsI,EAAMtI,QACfumB,gBAAkBje,EAAMc,cAAcV,SACtCgB,OAASpB,EAAMO,YAAYxH,KAC3ByI,eAAiBxB,EAAMwB,eACvBL,IAAInB,EAAMmB,QAQU,SAAA1F,GACxB,MAAO,CACLwlB,YAAc,SAACvpB,EAASiE,GAAV,OAAmBF,EhC4DR,SAAE/D,EAAS4D,GAExC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OAzDpB,SAAAA,GAAI,MAAK,CACxCuB,KrCpB6B,sBqCqB7BI,QAAS3B,GAuDiD2pB,CAAkB3pB,MAC5E0C,EACE,IAAI4P,GAAgB3T,GAASkB,OAAO+C,KgClEMgnB,CAAgBjrB,EAASiE,KACnEiW,WAAY,SAACla,EAASiE,GAAV,OAAqBF,EAASmQ,GAAelU,EAASiE,KAClEiD,aAAe,kBAAInD,EhCgBiB,CACtCnB,KrCrCgC,uBqCsChCI,QAAS,QgCjBPskB,gBAAiB,SAACtnB,EAASiE,GAAV,OAAqBF,EhCgFX,SAAC/D,EAAS4D,GAEzC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA1EpB,SAAAA,GAAI,MAAK,CACxCuB,KrC5B8B,uBqC6B9BI,QAAS3B,GAwEiD6pB,CAAmB7pB,MAC7E0C,EACE,IAAI4P,GAAgB3T,GAAS6B,OAAOoC,KgCtFWknB,CAAkBnrB,EAASiE,KAC1EulB,kBAAmB,SAACxpB,EAASiE,GAAV,OAAqBF,EhC0FT,SAAE/D,EAAS4D,GAE9C,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA/HhB,SAAAA,GAAI,MAAK,CAC9CuB,KrCiBsC,6BqChBtCI,QAAS3B,GA6HmD+pB,CAAwB/pB,MAClF0C,EACE,IAAI4P,GAAgB3T,GAASwT,UAAUvP,KgChGUonB,CAAsBrrB,EAASiE,KAChFylB,UAAY,SAAC1pB,EAASiE,GAAV,OAAqBF,EhCoGH,SAAE/D,EAAS4D,GAE7C,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OArIf,SAAAA,GAAI,MAAK,CAC/CuB,KrCauC,8BqCZvCI,QAAS3B,GAmImDiqB,CAAyBjqB,MACnF0C,EACE,IAAI4P,GAAgB3T,GAASyT,aAAaxP,KgC1GAsnB,CAAqBvrB,EAASiE,KACxEikB,mBAAoB,SAACloB,EAASmB,GAAV,OAAiB4C,EhC8GL,SAAC/D,EAASmB,GAE9C,OAAO,SAAS4C,EAAUC,GAExB,IAAMC,EAAS,CAAE9C,GAAIA,EAAIV,UAAY,SAACY,GAAS,OAnInB,SAAAA,GAAI,MAClC,CACEuB,KrCAsC,6BqCCtCI,QAAS3B,GAgI6CmqB,CAAwBrqB,KAC9E4C,EACE,IAAI4P,GAAgB3T,GAAS0T,YAAYzP,KgCpHMwnB,CAAwBzrB,EAASmB,QA0UvEsM,CAA6CwZ,I,YC/WtD/G,G,uKAEF,IAAMC,EACiB,MAAvBld,KAAKqJ,MAAM8T,QACP,WAAand,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,GAAK,kBAC1C,WAAa8B,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,GACzC,OACE,6BACE,6CACA,6BACE,kBAACkf,GAAA,EAAD,CACE9c,IAAI,MACJ+c,UAAU,YACVC,UAAU,kBAGd,sCACA,6BACE,kBAACF,GAAA,EAAD,CACE9c,IAAI,MACJ+c,UAAU,YACVC,UAAU,QACVE,cAAe,KAGnB,kBAACC,GAAA,EAAD,CAAWC,YAAa1d,KAAKqJ,MAAMqU,YAAaR,QAASA,IACzD,kBAAC,GAAD,CAAezP,SAAUzN,KAAKqJ,MAAMsU,SAAUrd,IAAI,a,GA1BrC0K,IAAMf,WAgCZO,gBApCf,SAAyBnF,GACvB,MAAO,CAAEtI,QAASsI,EAAMtI,WAmCXyN,CAAyByS,ICGlC4B,GAAY,CAChBrZ,WAAY,CAAC,qBAAsB,mBAG/BijB,G,kDACJ,WAAYpf,GAAQ,IAAD,8BACjB,cAAMA,IA+CRqf,aAAe,SAACxqB,GACd,EAAKmL,MAAM2Z,oBACX,EAAK2F,UAAUzqB,IAlDE,EAyDnB6gB,UAAY,WACV,EAAK5S,SAAS,CAAE2O,MAAM,KA1DL,EA6DnBkE,UAAY,WAAgB,IAAfthB,EAAc,wDACrBA,GAAGA,EAAEwL,iBACT,EAAKiD,SAAS,CAAE2O,MAAM,KA/DL,EAkEnB0D,cAAgB,SAACS,GACf,IAAIjT,EAAOiT,EAAUvd,QAAQ,eAAgB,IACjC,gBAATsK,IAAwBA,EAAM,WACjC,EAAKG,SAAS,CAAE+S,kBAAmBlT,KArElB,EAwEnB4c,WAAa,SAAClrB,GACRA,EAAEghB,YACJ,EAAKrV,MAAM4N,WAAW,EAAK5N,MAAMwf,YAAa,CAC5CtrB,QAASG,EAAEghB,UACXxhB,OAAQ,CAAEuU,QAAS,EAAKpI,MAAMwf,YAAYxlB,KAAKnF,IAC/Cf,MAAO0hB,GAAUrZ,aAEnB,EAAK2G,SAAS,CAAE+S,kBAAmBxhB,EAAEghB,cA/EtB,EAoFnBU,oBAAsB,SAAC1hB,GACrB,IAAI2hB,EAAQhb,KAAK9E,UAAU7B,KAAO2G,KAAK9E,UAAU,EAAK8F,MAAMia,aACxD5hB,EAAE4B,QAAU+f,IACd,EAAKhW,MAAM4N,WAAW,EAAK5N,MAAMwf,YAAa,CAC5CtrB,QAAS,EAAK8H,MAAM6Z,kBACpBhiB,OAAQ,CAAEqiB,GAAI7hB,EAAE6b,KAAK,MACrBpc,MAAO0hB,GAAUrZ,WACjBnI,KAAM,EAAKgI,MAAMma,YACjBpiB,MArHa,KAuHf,EAAK+O,SAAS,CAAEmT,YAAa5hB,MA5F/B,EAAK2H,MAAQ,CACXma,YAAa,EACb1E,MAAM,EACNoE,kBA/Be,kBAgCfI,YAAa,GACbnC,QAAS,GAEX,EAAKhN,YAAc,EAAKA,YAAYpE,KAAjB,iBACnB,EAAKmE,UAAY,EAAKA,UAAUnE,KAAf,iBACjB,EAAK4c,UAAY,EAAKA,UAAU5c,KAAf,iBAXA,E,gEAejBzH,IACItE,KAAKqJ,MAAMwf,YAAY/kB,a,6CAM3B9D,KAAKqJ,MAAM2R,gB,kCAGD9c,GAAK,IAAD,OACdkO,wBAAa,CACXC,MAAO,oBACPC,QAAS,oDACTC,QAAS,CACP,CACEjP,MAAO,MACPyM,QAAS,WACP,EAAKV,MAAM8G,YAAY,EAAK9G,MAAMwf,YAAa3qB,KAGnD,CACEZ,MAAO,KACPyM,QAAS,mB,gCAMP+e,GACR9oB,KAAKqJ,MAAMqB,QAAQvD,KAAK,eAAiB2hB,K,gCAQjCA,GACR9oB,KAAKqJ,MAAMqB,QAAQvD,KAAK,UAAY2hB,K,+BA4C5B,IAAD,OACY9oB,KAAKqJ,MAAhB5C,OACR,OACE,kBAAC,GAAD,KACE,kBAACoZ,GAAA,EAAD,CACEvf,IAAI,MACJwf,UAAU,cACVjC,aAAcA,IAEd,kBAACkC,GAAA,EAAD,CAAOD,UAAU,eACf,yBAAKxW,UAAU,OACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,cACb,qCAEE,4BACES,QAAS/J,KAAK+e,UACdzV,UAAU,gDAFZ,sBAQJ,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CACI0W,kBAAkB,sBAClB5B,MAAO,CACH,CAAE7d,MAAO,sBAAuBjD,MAAO,oBACvC,CAAEiD,MAAO,cAAejD,MAAO,oBAC/B,CAAEiD,MAAO,0BAA2BjD,MAAO,iBAC3C,CAAEiD,MAAO,yBAA0BjD,MAAO,kBAE9CkhB,cAAexe,KAAKwe,iBAG1B,yBAAKlV,UAAU,UACb,0BAAMA,UAAU,eACd,kBAAC2W,GAAA,EAAD,SAIN,yBAAK3W,UAAU,cACb,yBAAKA,UAAU,SACb,kBAAC4W,GAAA,EAAD,OAEF,yBAAK5W,UAAU,SACb,kBAAC6W,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,cACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBAAiBpL,GAAG,YACjC,kBAAC,GAAD,CACEyf,SAAU3d,KAAKof,oBACfjC,QAASnd,KAAKqF,MAAM8X,QACpB7c,IAAI,MACJod,YAtLP,OA0LC,yBAAKpU,UAAU,SACb,yBAAKA,UAAU,cACZtJ,KAAKqJ,MAAM5C,QACVzG,KAAKqJ,MAAM5C,OAAOmG,KAAI,SAAC5G,GAAD,OACpB,yBACE1F,IAAK0F,EAAM9H,GACXoL,UAAU,uBAEV,kBAAC,GAAD,CACEtD,MAAOA,EACPmK,YAAa,EAAKA,YAClBwY,UAAW,EAAKD,aAChBxY,UAAW,EAAKA,kBAM5B,yBAAK5G,UAAU,SACb,yBACEA,UAAU,wBACVpL,GAAG,eAIT,yBAAKoL,UAAU,cACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACb,0BAAMA,UAAU,eACd,kBAAC2W,GAAA,EAAD,eAUlB,kBAAC,GAAD,CAAOnF,KAAM9a,KAAKqF,MAAMyV,KAAMsB,YAAa,SAAC1e,GAAD,OAAO,EAAKshB,UAAUthB,KAC/D,kBAAC,GAAD,CACEF,UAAW,SAACE,GAAD,OAAO,EAAKshB,UAAUthB,IACjCge,qBAAsB1b,KAAK2oB,UAC3B3M,MAAOhc,KAAKgf,kB,GA7MC/U,aAoNVO,gBA1OS,SAACnF,GACvB,MAAO,CACLwjB,YAAaxjB,EAAMtI,QACnB0J,OAAQpB,EAAMO,YAAYxH,SAIJ,SAAC0C,GACzB,MAAO,CACLmW,WAAY,SAAC4R,EAAa7nB,GAAd,OACVF,EAASmQ,GAAe4X,EAAa7nB,KACvCmP,YAAa,SAAC0Y,EAAa3qB,GAAd,OACX4C,EjCkE2B,SAAC/D,EAASmB,GAEvC,OAAO,SAAS4C,EAAUC,GAExB,IAAMC,EAAS,CAAE9C,GAAIA,EAAIV,UAAY,SAACY,GAAS,OA1E1B,SAAAA,GAAI,MAC3B,CACEuB,KtCxB0B,qBsCyB1BI,QAAS3B,GAuE6C2qB,CAAiB7qB,KACvE4C,EACE,IAAIwP,GAAkBvT,GAAS4B,OAAOqC,KiCxE/BgoB,CAAgBH,EAAa3qB,KACxC8c,YAAa,kBAAMla,EAASgQ,OAC5BkS,kBAAmB,kBAAMliB,EjCzBmB,CAC5CnB,KtCuBoC,mCuE6NzB6K,CAA4Cie,ICxQ9CQ,I,QAAQ,CACjxCEpK,GAAY,CAChB3Y,aAAc,CAAC,WAAY,gBAC3BgjB,eAAgB,CACd,qBACA,uBACA,qBAEF7hB,QAAS,CAAC,SACVZ,OAAQ,CAAC,iBAGL0iB,G,kDACJ,WAAY9f,GAAQ,IAAD,8BACjB,cAAMA,IAkCR+f,qBAAuB,SAACH,GACtB,IAAMI,EAAgB,GAEtB,OADAJ,EAAM9pB,SAAQ,SAAC4N,GAAD,OAAUsc,EAAcliB,KAAK,CAAEjJ,GAAI6O,OAC1Csc,GAtCU,EAyCnBC,oBAAsB,SAAC3O,EAAcC,GACnC,IAAMxc,EAAO,GAGb,GAFAA,EAAKuc,GAAgBC,EAEA,oBAAjBD,EAAoC,CACtC,IAAMmO,EAAW9a,OAAOC,UAAU,EAAK5I,MAAM8L,UAEzC,EAAK9L,MAAM8L,SADX,EAAK9H,MAAMrD,MAAM9H,GAEf8H,EAAQ,EAAKqD,MAAM5C,OAAOua,MAAK,SAAChb,GAAD,OAAWA,EAAM9H,KAAO4qB,KACzD9iB,GAASA,EAAMoL,kBAAoBwJ,IACrCxc,EAAI,SAAe,GACnBA,EAAI,iBAAuB,kBAG/B,EAAK+N,SAAL,eACK/N,KAxDY,EA4DnBwkB,qBAAuB,SAACriB,EAAOihB,GAE7B,IAAKjhB,GAAoB,uBAAXihB,EAAiC,OAAO,EAAKnY,MAAMhC,QAEjE,IAAMmb,EAAajiB,EAAMkiB,OAAOC,cAC1BC,EAAcH,EAAWljB,OAC/B,OAAuB,IAAhBqjB,EACH,GACA,EAAKtZ,MAAMhC,QAAQtB,QACjB,SAACgb,GAAD,OACEA,EAAO3Z,KAAKsb,cAAcrjB,MAAM,EAAGsjB,KAAiBH,MAtE3C,EA0EnBD,oBAAsB,SAAChiB,EAAOihB,GAE5B,IAAKjhB,GAAoB,uBAAXihB,EAAiC,CAC7C,IAAM+H,EAC2B,KAA/B,EAAKlkB,MAAM+L,gBACP,EAAK/H,MAAMrD,MAAMoK,MAAMgB,gBACvB,EAAK/L,MAAM+L,gBACjB,OAAO,EAAK/H,MAAM5C,OAAOV,QACvB,SAACgb,GAAD,OAAYA,EAAO3P,kBAAoBmY,KAG3C,IAAM/G,EAAajiB,EAAMkiB,OAAOC,cAC1BC,EAAcH,EAAWljB,OAC/B,OAAuB,IAAhBqjB,EACH,GACA,EAAKtZ,MAAM5C,OAAOV,QAChB,SAACgb,GAAD,OACEA,EAAO1Q,MAAMqS,cAAcrjB,MAAM,EAAGsjB,KAAiBH,GACrDzB,EAAO3P,kBAAoB,EAAK/L,MAAM+L,oBA5F7B,EAgGnB2S,aAAe,SAAC3lB,GACd,EAAKiL,MAAMmgB,cAAc,EAAKngB,MAAMtM,QAAS,CAC3CmB,GAAI,EAAKmL,MAAM2F,MAAMhO,OAAO9C,GAC5BE,KAAMA,IAER,EAAK+N,SAAS/N,IArGG,EAwGnB4O,cAAgB,SAACtP,GACf,EAAK2L,MAAMqB,QAAQpL,OAAS,EACxB,EAAK+J,MAAMqB,QAAQ0Z,SACnB,EAAK/a,MAAMqB,QAAQvD,KAAK,WA3GX,EA2HnB0d,YAAc,SAACnnB,GACb,EAAKyO,SAAS,CAAE2Y,cAAe,EAAKzb,MAAMpC,OAAO,MA5HhC,EA+HnB8d,gBAAkB,SAACrnB,GACjB,EAAKyO,SAAS,CAAE2Y,cAAe,EAAKzb,MAAMpC,OAAOvJ,GAAIsnB,WAAYtnB,KAhIhD,EAmInB+S,YAAc,SAAC/S,GACb,IAAI6E,SAAQ,SAACC,EAASC,GACpBD,EACE,EAAK6G,MAAMogB,iBACT,EAAKpgB,MAAMtM,QACX,EAAKsI,MAAMyf,cAAc5mB,QAG5BkD,MAAK,SAAC1D,GACP,IAAMwnB,EACsB,IAA1B,EAAK7f,MAAM2f,WAAmB,EAAI,EAAK3f,MAAM2f,WAAa,EAC5D,EAAK7Y,SAAS,CACZ6Y,WAAYE,EACZJ,cAAe,EAAKzb,MAAMpC,OAAOie,SA9IrC,EAAK7f,MAAQ,CACXtI,QAAS,GACToU,SAAU,GACVC,gBAAiB,GACjBC,iBAAkB,EAClB2T,WAAY,EACZ0E,iBAAkB,KAClBC,iBAAkB,EAAKP,qBAAqBH,KAE9C,EAAK3X,OAAS,EAAKA,OAAOvF,KAAZ,iBAXG,E,gEAeb/L,KAAKqJ,MAAMtM,QAAQ+G,YACrB9D,KAAKqJ,MAAMka,UAAUvjB,KAAKqJ,MAAMtM,QAAS,CACvCmB,GAAI8B,KAAKqJ,MAAM2F,MAAMhO,OAAO9C,GAC5Bf,MAAO0hB,GAAUqK,iBAEnBlpB,KAAKqJ,MAAM6N,aAAalX,KAAKqJ,MAAMtM,QAAS,CAC1CG,OAAQ,CAAEiU,SAAUnR,KAAKqJ,MAAM2F,MAAMhO,OAAO9C,IAC5Cf,MAAO0hB,GAAU3Y,eAEnBlG,KAAKqJ,MAAM4N,WAAWjX,KAAKqJ,MAAMtM,QAAS,CACxCK,MAAO,IACPD,MAAO0hB,GAAUpY,SAEnBzG,KAAKqJ,MAAM6Y,YAAYliB,KAAKqJ,MAAMtM,QAAS,CAAEI,MAAO0hB,GAAUxX,UAC9DrH,KAAKqJ,MAAMugB,gBAAgB5pB,KAAKqJ,MAAMtM,QAAS,CAC7CG,OAAQ,CAAE2sB,cAAe7pB,KAAKqJ,MAAM2F,MAAMhO,OAAO9C,OAE9C8B,KAAKqJ,MAAMqB,QAAQvD,KAAK,Y,6BA8E1BoK,EAAcC,GACnB,GAAKD,EAAajS,OAAlB,CACA,IAAMY,EAAWoQ,GAAkBrQ,kBAAkB,CACnD4pB,cAAe7pB,KAAKqJ,MAAMrD,MAAM9H,GAChCuT,QAASzR,KAAKqJ,MAAMtM,QAAQsG,KAAKnF,KAEnCqT,EAAapS,SAAQ,SAACuS,EAAMrC,GAC1BnP,EAASM,OAAO,QAASkR,MAE3B1R,KAAKqJ,MAAMod,UAAUzmB,KAAKqJ,MAAMtM,QAAS,CAAEqB,KAAM8B,IACjDF,KAAKmM,SAAS,CAAEkF,iBAAkBrR,KAAKqF,MAAMgM,iBAAmB,O,sCA8BhE,OACE,4BAAQ/H,UAAU,iDAAlB,W,+BAMM,IAAD,OACCtD,EAAUhG,KAAKqJ,MAAfrD,MACF0jB,EAAmB1pB,KAAKqF,MAAMqkB,iBAChC1pB,KAAKqF,MAAMqkB,iBACX1jB,EAAMoK,MACNpK,EAAMoK,MAAMC,MACZ,iBACJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAUrD,cAAehN,KAAKgN,eAC5B,kBAAC,QAAD,KACE,yBAAK1D,UAAU,2BACb,wBAAIA,UAAU,qBACZ,kBAAC,YAAD,CACEsP,UAAU,EACVrY,MAAOyF,EAAMoB,MAAQ,GACrB0iB,GAAC,EACDtc,aAAcxH,EAAMoB,KACpByf,OAAQ7mB,KAAK+jB,aACb+C,SAAS,UAGb,yBAAKxd,UAAU,oBACb,yBAAKA,UAAU,YACb,kBAAC,KAAD,CACEhJ,IAAKN,KAAKqF,MAAMgM,iBAChBS,UAAU,EACVC,WAAW,cACXtE,SAAUzN,KAAKsR,OACfU,aAAc,CAAC,OAAQ,QAAS,OAAQ,OAAQ,QAChDC,YAAa,QACbC,aAAa,EACb6U,WAAW,EACXC,gBAAgB,kBAGpB,6BACE,kBAAC,KAAD,CACE5I,MAAOpe,KAAKqJ,MAAMpC,OAClBggB,aAAa,EACbC,WAAW,EACXC,WAAYnnB,KAAKqF,MAAM2f,WACvBoC,QAASpnB,KAAK+kB,gBACdgF,SAAS,EAETlF,YAAa7kB,KAAK6kB,gBAIxB,yBAAKvb,UAAU,oBACb,yBAAKA,UAAU,eACb,kBAAC,GAAD,CACE8F,MAAOpJ,EAAMmJ,OACbpF,QAAS/J,KAAK+jB,aACdhX,KAAK,QAGT,yBAAKzD,UAAU,eACb,yCADF,OAGE,kBAAC,KAAD,CACE3J,KAAM+jB,aAAUC,OAChBpjB,MAAOyF,EAAM+G,MAAQ,gBACrBU,SAAU,SAACrP,GACT,EAAK2lB,aAAa,CAAEhX,KAAM3O,KAE5BwlB,QAAS5jB,KAAKqF,MAAMskB,iBACpB9F,SAAS,KACTC,SAAS,QAGb,yBAAKxa,UAAU,eACb,6BACE,oDAEF,kBAAC,GAAD,CACEyX,OAAQ/gB,KAAKqJ,MAAMhC,QACnBD,KAAK,kBACL8Z,QAAQ,OACR5X,UAAU,eACVqE,YACE3H,EAAMoK,OAASpK,EAAMoK,MAAM4Z,aACvBhkB,EAAMoK,MAAM4Z,aAAa5iB,KACzB,kBAEN7G,MAAOP,KAAKqF,MAAM+L,gBAClB+P,SAAUnhB,KAAKspB,oBACf5H,eAAgB1hB,KAAK4iB,qBACrBtN,SAAS,KAGb,yBAAKhM,UAAU,eACb,6BACE,2CAEF,kBAAC,GAAD,CACEyX,OAAQ/gB,KAAKqJ,MAAM5C,OACnBW,KAAK,WACL8Z,QAAQ,QACR5X,UAAU,eACVqE,YAAa+b,EACbnpB,MAAOP,KAAKqF,MAAM8L,SAClBgQ,SAAUnhB,KAAKspB,oBACf5H,eAAgB1hB,KAAKuiB,oBACrBjN,SAAS,KAGb,yBAAKhM,UAAU,eACb,6BACE,2CAEF,kBAAC,eAAD,CACE/I,MAAOyF,EAAM2hB,OAAS,qCACtBna,aAAcxH,EAAM2hB,MACpBre,UAAU,yBACVud,OAAQ7mB,KAAK+jB,aACb+C,SAAS,QACTc,SAAUC,KAAEC,cAKpB,yBAAKxe,UAAU,aACb,yBAAKA,UAAU,aAAa8B,MAAO,CAAEsE,UAAW,QAC9C,oDAEF,yBAAKpG,UAAU,cACZtD,EAAMikB,UACLjkB,EAAMikB,SAAS7S,QAAO,SAACC,EAAata,EAASyP,GAQ3C,OAPIA,EAAQ,GACV6K,EAAYlQ,KACV,yBAAKmC,UAAU,WAAWhJ,IAAKkM,GAC7B,kBAAC,GAAD,CAAazP,QAASA,EAASuD,IAAKvD,EAAQmB,OAI3CmZ,IACN,MACFrR,EAAMikB,UAAsC,IAA1BjkB,EAAMikB,SAAS3qB,SAClC,yBAAKgK,UAAU,UACb,yE,GA1SIW,aAqTTO,gBA5VS,SAACnF,GACvB,MAAO,CACLtI,QAASsI,EAAMtI,QACfiJ,MAAOX,EAAMO,YAAYH,SACzBgB,OAAQpB,EAAMoB,OAAOrI,KACrBiJ,QAAShC,EAAMgC,QAAQjJ,KACvB6I,OAAQ5B,EAAMmC,sBAIQ,SAAC1G,GACzB,MAAO,CACLyiB,UAAW,SAACxmB,EAASiE,GAAV,OAAqBF,EAASiQ,GAAchU,EAASiE,KAChEkW,aAAc,SAACna,EAASiE,GAAV,OACZF,EAAS8P,GAAiB7T,EAASiE,KACrCkhB,YAAa,SAACnlB,EAASiE,GAAV,OAAqBF,EAASohB,GAAYnlB,EAASiE,KAChEiW,WAAY,SAACla,EAASiE,GAAV,OAAqBF,EAASmW,GAAWla,EAASiE,KAC9DwoB,cAAe,SAACzsB,EAASiE,GAAV,OACbF,EnCmE2B,SAAC/D,EAAS4D,GAEvC,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA1FxB,SAAAA,GAAI,MAAK,CACtCuB,KtCnB4B,qBsCoB5BI,QAAS3B,GAwFmD8rB,CAAiB9rB,MAC3E0C,EACE,IAAIwP,GAAkBvT,GAAS6B,OAAOoC,KmCzE/BmpB,CAAgBptB,EAASiE,KACpC4oB,gBAAiB,SAAC7sB,EAASiE,GAAV,OACfF,EnC4E+B,SAAE/D,EAAS4D,GAE5C,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA7HlB,SAAAA,GAAI,MAAK,CAC5CuB,KtCOkC,2BsCNlCI,QAAS3B,GA2HmDgsB,CAAsBhsB,MAChF0C,EACE,IAAIwP,GAAkBvT,GAASwT,UAAUvP,KmClFlCqpB,CAAoBttB,EAASiE,KACxCylB,UAAW,SAAC1pB,EAASiE,GAAV,OACTF,EnCqF8B,SAAE/D,EAAS4D,GAE3C,OAAO,SAASG,EAAUC,GAExB,IAAMC,EAAM,2BAAOL,GAAS,CAACnD,UAAY,SAACY,GAAS,OA1HjB,SAAAA,GAAI,MAAK,CAC7CuB,KtCNmC,4BsCOnCI,QAAS3B,GAwHmDksB,CAAuBlsB,MACjF0C,EACE,IAAIwP,GAAkBvT,GAASyT,aAAaxP,KmC3FrCupB,CAAmBxtB,EAASiE,KACvCyoB,iBAAkB,SAAC1sB,EAASmB,GAAV,OAChB4C,EnC8FgC,SAAC/D,EAASmB,GAE5C,OAAO,SAAS4C,EAAUC,GAExB,IAAMC,EAAS,CAAE9C,GAAIA,EAAIV,UAAY,SAACY,GAAS,OAnGrB,SAAAA,GAAI,MAChC,CACEuB,KtCxCkC,2BsCyClCI,QAAS3B,GAgG6CosB,CAAsBtsB,KAC5E4C,EACE,IAAIwP,GAAkBvT,GAAS0T,YAAYzP,KmCpGpCypB,CAAqB1tB,EAASmB,QAoU9BsM,CAA4C2e,ICnWrDuB,G,uKAEF,OACE,2BACE,gBAAC,GAAD,CAAQ3tB,QAASiD,KAAKqJ,MAAMtM,QAAS+M,SAAU9J,KAAKqJ,MAAMhG,KAAK+O,aAC/D,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAOuY,KAAM,IAAKC,OAAK,EAAC1gB,UAAWO,KACnC,gBAAC,KAAD,CAAOkgB,KAAM,SAAUC,OAAK,EAAC1gB,UAAWS,KACxC,gBAAC,KAAD,CAAOggB,KAAM,UAAWC,OAAK,EAAC1gB,UAAWO,KAEzC,gBAAC,GAAD,CAAckgB,KAAM,QAASC,OAAK,EAAC1gB,UAAW2B,GAAW9O,QAASiD,KAAKqJ,MAAMtM,UAC7E,gBAAC,GAAD,CAAc4tB,KAAM,eAAgBC,OAAK,EAAC1gB,UAAWqE,GAAYxR,QAASiD,KAAKqJ,MAAMtM,UACrF,gBAAC,GAAD,CAAc4tB,KAAM,kBAAmBC,OAAK,EAAC1gB,UAAW8M,GAAeja,QAASiD,KAAKqJ,MAAMtM,UAC3F,gBAAC,GAAD,CAAc4tB,KAAM,iBAAkBC,OAAK,EAAC1gB,UAAW2E,GAAU9R,QAASiD,KAAKqJ,MAAMtM,UAErF,gBAAC,KAAD,CAAQ4tB,KAAM,WAAYC,OAAK,EAAC1gB,UAAW4U,KAC3C,gBAAC,GAAD,CAAc6L,KAAM,kBAAmBC,OAAK,EAAC1gB,UAAW2gB,GAAe9tB,QAASiD,KAAKqJ,MAAMtM,UAC3F,gBAAC,KAAD,CAAQ4tB,KAAM,eAAgBC,OAAK,EAAC1gB,UAAW8Z,KAE/C,gBAAC,KAAD,CAAQ2G,KAAM,SAAUC,OAAK,EAAC1gB,UAAWue,KACzC,gBAAC,GAAD,CAAckC,KAAM,gBAAiBC,OAAK,EAAC1gB,UAAW2Y,GAAiB9lB,QAASiD,KAAKqJ,MAAMtM,UAC3F,gBAAC,KAAD,CAAQ4tB,KAAM,aAAcC,OAAK,EAAC1gB,UAAWif,KAE7C,gBAAC,KAAD,CAAOjf,UAAWK,W,GAvBVS,aA8BHR,gBAlCS,SAAAnF,GACpB,MAAO,CAAEtI,QAASsI,EAAMtI,QAASsG,KAAOgC,EAAMhC,QAiCnCmH,CAAyBkgB,IC7CpBpR,QACW,cAA7BhR,OAAOC,SAASuiB,UAEe,UAA7BxiB,OAAOC,SAASuiB,UAEhBxiB,OAAOC,SAASuiB,SAAS9b,MACvB,2DCVN+b,IAAS1gB,OACL,kBAAC,IAAD,CAAUrG,MAAOA,IACjB,kBAAC,KAAD,KACI,kBAAC,GAAD,QAGFgnB,SAASC,eAAe,SD6HxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhqB,MAAK,SAAAiqB,GACJA,EAAaC,gBAEdrmB,OAAM,SAAAzF,GACLC,QAAQD,MAAMA,EAAM8M,a,6DEjJ5BtQ,EAAQ,IAAUC,SAClBsvB,EAAOC,QAAU,CACbzsB,KAAO3C,yBACP4C,KAAO5C,K,oBCHXJ,EAAQ,IAAUC,SAClBsvB,EAAOC,QAAU,CACblrB,IAAMlE,oC,oBCFVJ,EAAQ,IAAUC,SAClBsvB,EAAOC,QAAU,CACb5E,QAAUxqB,oB","file":"static/js/main.f3a58eed.chunk.js","sourcesContent":["\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n\n    \"email\"\n\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import axios from 'axios';\nimport apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy + `&page=` + page,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n\n    create_bk = (data, hdrs = {}) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return axios.post(this.getEndpoint() , data , headers)\n    }\n\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         //const headers = {...this.session.headers, ...hdrs};\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n\n       // return axios.put(this.getEndpoint() + `/` + entityId , data,  this.session.headers);\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n       \n    }\n\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = this.session.jwt,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n}\nexport default UserRequests;","import { USER_LOADED, USER_LOGGED_IN, USER_IMAGE_UPDATED} from \"./types\";\nimport UserRequests from './../requests/UserRequests';\n\n\nexport const UserLoaded = data => ({\n    type: USER_LOADED,\n    payload: data\n  });\n\n  export const UserLoggedIn = data => ({\n    type: USER_LOGGED_IN,\n    payload: data\n  });\n\n  export const UserImageUpdated = data => ({\n    type: USER_IMAGE_UPDATED,\n    payload: data\n  });\n\n\n  \n\n  export const logInUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).get(params)\n      )\n    }\n  }\n\n\n  export const loadUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const updateUserImage = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserImageUpdated(data)} }}\n      dispatch(\n        new UserRequests(session).updateProfileImage(params)\n      )\n    }\n  }","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\nexport const SET_USER = \"SET_USER\";\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\n\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\nexport const USER_BOARD_DELETED=\"USER_BOARD_DELETED\";\nexport const USER_BOARD_IMAGES_LOADED=\"USER_BOARD_IMAGES_LOADED\";\nexport const USER_BOARD_IMAGES_CREATED=\"USER_BOARD_IMAGES_CREATED\";\nexport const USER_BOARD_IMAGE_DELETED = \"USER_BOARD_IMAGE_DELETED\";\nexport const USER_BOARDS_CLEARED = \"USER_BOARDS_CLEARED\"\n\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CREATED=\"USER_SESSION_CREATED\";\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"\nexport const USER_SESSION_DELETED=\"USER_SESSION_DELETED\"\nexport const USER_SESSION_LOADED=\"USER_SESSION_LOADED\";\nexport const USER_SESSION_IMAGES_LOADED=\"USER_SESSION_IMAGES_LOADED\";\nexport const USER_SESSION_IMAGES_CREATED=\"USER_SESSION_IMAGES_CREATED\";\nexport const USER_SESSION_IMAGE_DELETED = \"USER_SESSION_IMAGE_DELETED\";\nexport const USER_SESSION_CREATED_CLEARED=\"USER_SESSION_CREATED_CLEARED\";\nexport const USER_SESSIONS_CLEARED=\"USER_SESSIONS_CLEARED\";\n\nexport const SHAPERS_LOADED=\"SHAPERS_LOADED\";\nexport const BOARDS_LOADED=\"BOARDS_LOADED\";\n\n\nexport const USER_BOARD_CREATED_CLEARED=\"USER_BOARD_CREATED_CLEARED\";\n\nexport const USER_LOGGED_IN=\"USER_LOGGED_IN\";\n\nexport const USER_LOADED=\"USER_LOADED\";\n\nexport const USER_IMAGE_UPDATED=\"USER_IMAGE_UPDATED\";\n\nexport const STORMGLASS_LOADED=\"STORMGLASS_LOADED\";\n\n\n","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nimport {logInUser, loadUser} from './../../actions/user';\nimport store from './../../store/index'\nconst axios = require('axios');\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession(dispatch)) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      axios.get( apiConfig.host + apiConfig.port + `/api/user/firstOrNew?username=` + result.idToken.payload['cognito:username'] \n      + '&email=' + result.idToken.payload.email + '&first_name=' + result.idToken.payload.given_name + '&last_name=' + result.idToken.payload.family_name\n        ).then(data => {\n        const session = formatSessionObject(data.data.id, result);\n        session.user = {...session.user, ...data.data[0]};\n        dispatch(loadUser(session, {wheres : {email : result.idToken.payload.email}}));\n        resolve(session);\n      });     \n    })\n  })\n}\n\n\nconst formatSessionObject = (id, result) =>\n{\n  const session = {\n    user: {\n      id : id,\n      userName: result.idToken.payload['cognito:username'],\n      email: result.idToken.payload.email\n    },\n    //headers: `Authorization: Bearer ${result.accessToken.jwtToken}`,\n    jwt : result.accessToken.jwtToken,\n    groups : result.idToken.payload['cognito:groups'],\n    isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n    expiration : result.accessToken.payload.exp,\n    isLoggedIn : true\n  }\n  session.user = {...session.user};\n  return session;\n}\n\nexport const refresh = (id = null) =>\n{\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth();\n    auth.userhandler = {\n      onSuccess: function (result) {\n        let session = formatSessionObject(store.getState().session.user.id, result);\n        setSessionCookie(session);\n        store.dispatch({ type: SET_SESSION, session });\n        resolve(session)\n      },\n      onFailure: function (err) {\n        console.log('cognito refresh error', err)\n        reject(err)\n      }\n    }\n    //auth.refreshSession(auth.getSession());\n    auth.getSession();\n    //let user = auth.getCachedSession();\n    //auth.refreshSession(auth.getCachedSession());\n/** \n  const auth = createCognitoAuth();\n  auth.userhandler = {\n    onSuccess: function (result) {\n      let session = formatSessionObject(store.getState().session.user.id, result);\n      setSessionCookie(session);\n      store.dispatch({ type: SET_SESSION, session });\n      resolve(session)\n    },\n    onFailure: function (err) {\n      console.log('whateves', err)\n      reject(err)\n    }\n  }\n  auth.getSession()  \n  */\n})    \n  //let user = auth.getCachedSession();\n  //auth.refreshSession(user.getSession())\n  //console.log('cached session', user)\n  }\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import Cookie from \"js-cookie\";\nimport moment from \"moment\";\nimport { refresh } from './cognito'\n\nexport function setSessionCookie(session)\n{\n  //Cookie.set(\"x-token\", session);\n  localStorage.setItem('x-token', JSON.stringify(session))\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(localStorage.getItem('x-token'))\n    {\n      const session = JSON.parse(localStorage.getItem('x-token'));\n      const expTime = moment.unix(session.expiration).valueOf();\n      const current_time = moment().valueOf();\n      const updateTime =  moment.unix(session.expiration).subtract(5, \"minutes\").valueOf();\n      console.log('token expires @', moment.unix(session.expiration).format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('current time is', moment().format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('update time is', moment.unix(session.expiration).subtract(5, \"minutes\").format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('cookie expues',  current_time, expTime, updateTime);\n      if(current_time > updateTime){\n        refresh().then(data=> {return true})\n        .catch(e=>clearSession())\n        return session;\n      }\n      if ( expTime > current_time) {\n        return session;\n      }\n      else {\n        refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(localStorage.getItem('x-token'))\n  {\n    localStorage.removeItem(\"x-token\")\n  }\nreturn false;\n}\n\nexport function update()\n{\n  if(!hasSession())\n  {\n    refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n  }\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED, USER_BOARD_DELETED, USER_BOARDS_CLEARED, USER_BOARD_CREATED_CLEARED } from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  loaded : false,\n  created : false\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload, loaded : true}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case USER_BOARD_DELETED :\n      const filteredBoards  =  state.data.filter(board => { return board.id !== parseInt(action.payload)});\n      newState = {...state, ...{data : filteredBoards}}\n      return newState;\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    case USER_BOARDS_CLEARED :\n      return initialState;\n    case USER_BOARD_CREATED_CLEARED :\n        newState = {...state, ...{created : false}}\n        return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {USER_SESSION_CLEARED,\n  USER_SESSIONS_CLEARED, \n  USER_SESSION_CREATED_CLEARED,  \n  USER_SESSION_CREATED, \n  SET_USER_SESSIONS, \n  SESSION_CREATED, \n  DELETE_USER_SESSION, \n  USER_SESSION_UPDATED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  created : false\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_LOADED:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_SESSION_DELETED :\n        const filteredSessions  =  state.data.filter(session => { return session.id !== parseInt(action.payload)});\n        newState = {...state, ...{data : filteredSessions}}\n        return newState;\n    case USER_SESSION_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    case USER_SESSION_CREATED_CLEARED :\n      newState = {...state, ...{created : false}}\n      return newState;\n    case USER_SESSIONS_CLEARED :\n      return initialState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import {USER_LOADED, USER_IMAGE_UPDATED} from './../actions/types';\n\n\nconst initialState = {};\nconst user = (state = initialState, action) => {\n  let newState = state;\n  switch (action.type) {\n    case USER_LOADED:\n      return action.payload;\n      case USER_IMAGE_UPDATED:\n      newState.profile_img = action.payload.data;\n      return newState;\n    default:\n      return state\n  }\n}\nexport default user","const initialState = 0;\nconst api = (state = initialState, action) => {\nlet newState = state;\n  switch (action.type) {\n    case 'API_START':\n        return newState +1;\n    case 'API_END':\n        newState = state-1;\n        return newState;  \n    default :\n        return newState;\n}}\nexport default api;","import {BOARDS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case BOARDS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\nimport {USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_IMAGES_LOADED:\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_SESSION_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_SESSION_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\nimport {USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_BOARD_IMAGES_LOADED :\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_BOARD_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_BOARD_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import {SHAPERS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case SHAPERS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default shapers;","import {STORMGLASS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst stormglass = (state = initialState, action) => {\n  switch (action.type) {\n    case STORMGLASS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default stormglass;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\nimport stormglass from './stormglass';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  stormglass,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd } from \"./../actions/api\";\nimport apiConfig from './../config/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n   const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n        console.log('error', error)\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\nimport './css/Nav.css'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          My Memo</Link>\n                      }\n \n                {false && props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.username}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (false){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\nimport { s3Conf } from './../../config/s3';\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n\n  componentDidMount () {\n    if (this.props.session.isLoggedIn) {\n      this.props.history.push('/user/dashboard');\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n            <div className=\"container container-home\">\n              <div className=\"row align-items-center my-5\">\n                  <div className=\"col-lg-7\">\n                    <img className=\"img-fluid rounded mb-4 mb-lg-0\" src=\"https://surfzonemovie.com/wp-content/uploads/2016/01/Bill-Stewart-gets-barrelled-at-famous-break-Cloudbreak-Fiji-900x400.jpg\" alt=\"\" />\n                  </div>\n                  <div className=\"col-lg-5\">\n                    <h1 className=\"font-weight-light\">My Surf Sesh</h1>\n                    <p>A Free online journal to track your surfing sessions and gain analytics into your performance!</p>\n                    <a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a>\n                  </div>\n              </div>\n              <div className=\"card text-white bg-secondary my-5 py-4 text-center\">\n                  <div className=\"card-body\">\n                    <p className=\"text-white m-0\">This call to action card is a great place to showcase some important information or display a clever tagline!</p>\n                  </div>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Track Sessions</h2>\n                          <img src={s3Conf.root + 'site/session_example.png'} />\n                          <p className=\"card-text\">Track and rate your session then use the stats to decide the best board and location for the swell.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Showcase Boards</h2>\n                          <img src={s3Conf.root + 'site/board_example.png'} />\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod tenetur ex natus at dolorem enim! Nesciunt pariatur voluptatem sunt quam eaque, vel, non in id dolore voluptates quos eligendi labore.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Store Photos</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                          <h2 className=\"card-title\">Get Reports</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n/*\n<img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n*/","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/user/dashboard\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={true}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer) ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const onClick = (rating) =>\n    {\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\" onClick={()=>props.history.push(\"/session/\" + props.session.id)} >\n            <div className=\"row\">\n                <div className=\"col-12 session-card-title\"><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</button></div>\n                <div className=\"col-4\">\n                <div>\n                    <img className=\"img-responsive img-thumbnail img-card\" \n                        src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name \n                        : \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\" }/>\n                </div>\n                    <div style={{textAlign : 'center', marginTop : '0.3em'}}>\n                        { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                        { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer'}}  icon={faTrash} onClick={() => props.deleteSession(props.session.id)} /> }\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card-date\" >{moment(props.session.createdAt).calendar()}</div>\n                    <div className=\"card-rating\" ><StarBar stars={props.session.rating} /></div>\n                    <div >{props.session.UserBoard && props.session.UserBoard.name ? props.session.UserBoard.name : \"No Board Selected\"}</div>\n                    <div >{props.session.Location && props.session.Location.name ? props.session.Location.name : \"No Location Specified\"}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\">\n            <div className=\"row\">\n                <div className=\"col-12 board-card-title\"><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/board/\" + props.board.id)}>{props.board.name}</button></div>\n                <div className=\"col-4\">\n                <img className=\"img-responsive img-thumbnail img-card\" alt=\"\" \n                    src={props.board.UserBoardImages && props.board.UserBoardImages.length ? s3Conf.root + props.board.UserBoardImages[0].name \n                    : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n                </div>\n                <div className=\"col-8\">\n                <div >\n                    { props.editBoard && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editBoard(props.board.id)} /> }\n                    { props.deleteBoard && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteBoard(props.board.id)} /> }\n                </div>\n                <div className=\"card-rating\">\n                    <StarBar stars={props.board.rating} />\n                </div>\n                <div className=\"board-card-model\">{props.board.size} {props.board.Board && props.board.Board.model}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(BoardCard);","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { USER_SESSION_CREATED, \n  SET_USER_SESSION, \n  SET_USER_SESSIONS, \n  USER_SESSION_UPDATED, \n  USER_SESSION_CLEARED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED, \n  USER_SESSION_IMAGES_LOADED, \n  USER_SESSION_IMAGES_CREATED, \n  USER_SESSION_IMAGE_DELETED,\n  USER_SESSION_CREATED_CLEARED,\n  USER_SESSIONS_CLEARED  } from \"./types\";\nimport SessionRequests from './../requests/SessionRequests';\n\n\nexport const UserSessionImagesLoaded = data => ({\n  type: USER_SESSION_IMAGES_LOADED,\n  payload: data\n});\n\nexport const UserSessionImagesCreated = data => ({\n  type: USER_SESSION_IMAGES_CREATED,\n  payload: data\n});\n\nexport const UserSessionCreatedCleared = () => ({\n  type: USER_SESSION_CREATED_CLEARED\n});\n\nexport const UserSessionsCleared = () => ({\n  type: USER_SESSIONS_CLEARED\n});\n\nconst UserSessionImageDeleted = data=> (\n  {\n    type: USER_SESSION_IMAGE_DELETED,\n    payload: data\n  }\n)\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n\nexport const UserSessionCreated = data => ({\n  type: USER_SESSION_CREATED,\n  payload: data\n});\n\n  export const UserSessionLoaded = data => ({\n    type: USER_SESSION_LOADED,\n    payload: data\n  });\n\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  const UserSessionDeleted = data=> (\n    {\n      type: USER_SESSION_DELETED,\n      payload: data\n    }\n  )\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n\nexport const createUserSession= ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).create(params)\n    )\n  }\n}\n\nexport const loadUserSessions = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionsLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).get(params)\n    )\n  }\n}\n\nexport const loadUserSession = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getOne(params)\n    )\n  }\n}\n\n\nexport const deleteUserSession = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).delete(params)\n    )\n  }\n}\n\nexport const updateUserSession = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionUpdated(data)} }}\n    dispatch(\n      new SessionRequests(session).update(params)\n    )\n  }\n}\n\nexport const loadUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getImages(params)\n    )\n  }\n}\n\nexport const addUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).createImages(params)\n    )\n  }\n}\n\nexport const deleteUserSessionImage = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionImageDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).deleteImage(params)\n    )\n  }\n}\n","import { USER_BOARDS_CLEARED,  USER_BOARD_CREATED_CLEARED, SET_USER_BOARDS, USER_BOARD_UPDATED, USER_BOARD_DELETED, SET_USER_BOARD, USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED, USER_BOARD_CREATED } from \"./types\";\nimport UserBoardRequests from './../requests/UserBoardRequests';\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardImagesLoaded = data => ({\n    type: USER_BOARD_IMAGES_LOADED,\n    payload: data\n  });\n\n  export const UserBoardsCleared = data => ({\n    type: USER_BOARDS_CLEARED,\n    payload: data\n  });\n\n  export const UserBoardCreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n\n  export const UserBoardImagesCreated = data => ({\n    type: USER_BOARD_IMAGES_CREATED,\n    payload: data\n  });\n\n  export const UserBoardLoaded = data => ({\n    type: SET_USER_BOARD,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n  const UserBoardDeleted = data=> (\n    {\n      type: USER_BOARD_DELETED,\n      payload: data\n    }\n  )\n\n  const UserBoardCreated = data=> (\n    {\n      type: USER_BOARD_CREATED,\n      payload: data\n    }\n  )\n\n  export const UserBoardreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n  \n\n  const UserBoardImageDeleted = data=> (\n    {\n      type: USER_BOARD_IMAGE_DELETED,\n      payload: data\n    }\n  )\n\n  export const createUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).create(params)\n      )\n    }\n  }\n\n\n  export const clearUserBoards = ( )=>\n  {\n    return function(dispatch, getState)\n    {\n      dispatch(\n        UserBoardsCleared(null)\n      )\n    }\n  }\n\n  export const loadUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardsLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).get(params)\n      )\n    }\n  }\n\n  export const deleteUserBoard = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).delete(params)\n      )\n    }\n  }\n\n  export const updateUserBoard = (session, args) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardUpdated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).update(params)\n      )\n    }\n  }\n\n  export const loadUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getImages(params)\n      )\n    }\n  }\n\n  export const addUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).createImages(params)\n      )\n    }\n  }\n\n  export const deleteUserBoardImage = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardImageDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).deleteImage(params)\n      )\n    }\n  }\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\nimport {loadUser, updateUserImage} from './../../actions/user';\n\nconst mapStateToProps = state => {\n    return { user : state.user, session : state.session }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      //updateImage : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}})),\n      updateImage : (session, params)=>dispatch(updateUserImage(session, params)),\n      loadUser : (session, params)=>dispatch(loadUser(session, params))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(this.props.session, {id : this.props.session.user.id} );\n        }\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.updateImage(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n            <div className=\"team-single\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div className=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <div className=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Profile Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 col-md-7\">\n                        <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p className=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div className=\"contact-info-section margin-40px-tb\">\n                                <ul className=\"list-style9 no-margin\">\n                                <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">username:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.username}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"MM-DD-YYYY\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong className=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-envelope text-pink\"></i>\n                                                <strong className=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.email}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <h5 className=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div className=\"sm-no-margin\">\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Positive Behaviors</div>\n                                        <div className=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard);\n\n/**\n *                             <div className=\"margin-20px-top team-single-icons\">\n                                <ul className=\"no-margin\">\n                                    <li><a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n */","window.geolocator.config({\n    language: \"en\",\n    google: {\n      version: \"3\",\n      key: \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\",\n    },\n  });\n \n  export const locator = window.geolocator;\n  export const defaultOptions = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumWait: 10000, // max wait time for desired accuracy\n    maximumAge: 0, // disable cache\n    desiredAccuracy: 30, // meters\n    fallbackToIP: true, // fallback to IP if Geolocation fails or rejected\n    addressLookup: true, // requires Google API key if true\n  };\n","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n\nconst index = algoliaClient.initIndex('surfline_spots');\n\n\n\nconst getSpots = (lat, lon)=>\n{\n    return index.search('', {\n        aroundLatLng: `${lat}, ${lon}`,\n        aroundRadius: 10000 // 1000 km\n      })\n}\n\nexport default getSpots;\n  \n","const setWithExpiry = (key, value, ttl) => {\n    const now = new Date()\n    \n    // `item` is an object which contains the original value\n    // as well as the time when it's supposed to expire\n      const item = {\n          value: value,\n          expiry: now.getTime() + ttl\n      }\n      localStorage.setItem(key, JSON.stringify(item))\n  }\n\n\n const  getWithExpiry = (key) => {\n\tconst itemStr = localStorage.getItem(key)\n\t// if the item doesn't exist, return null\n\tif (!itemStr) {\n\t\treturn null\n\t}\n\tconst item = JSON.parse(itemStr)\n\tconst now = new Date()\n\t// compare the expiry time of the item with the current time\n\tif (now.getTime() > item.expiry) {\n\t\t// If the item is expired, delete the item from storage\n\t\t// and return null\n\t\tlocalStorage.removeItem(key)\n\t\treturn null\n\t}\n\treturn item.value\n}\n\nexport default {\n    setWithExpiry,\n    getWithExpiry\n  }","import './css/NearestSpots.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport ReactTooltip from 'react-tooltip'\nimport Iframe from 'react-iframe'\nimport  cache from './../../../lib/utils/cache';\n\nconst CACHE_KEY = 'nrspt';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n    };\n  };\n\nclass NearestSpots extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        spots : [],\n        selected : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    const setState = this.setState;\n    if (this.props.session.isLoggedIn) \n    {\n      const cachedHits = cache.getWithExpiry(CACHE_KEY);\n      if (cachedHits) {\n        console.log('we have cached hots');\n        this.setState({ spots: JSON.parse(cachedHits) });\n      }\n      else\n      {\n        locator.locate(defaultOptions , function (err, location) {\n        if (err) return console.log(\"location err\", err);\n        getSpots(location.coords.latitude,location.coords.longitude).then(data=>{\n            setState({spots : data.hits})\n            cache.setWithExpiry(CACHE_KEY, JSON.stringify(data.hits), 36000);\n          })\n        });\n      }\n    }\n  }\n\n  render()\n  {    \n    const { spots } =  this.state;\n    console.log('spots', spots)\n    return <div className=\"container surfline nearest_spots\">\n        <h6>Nearest Spots</h6>\n        {spots.map(el => (\n        <div className=\"row spot\" key={el.url}>\n            <div className=\"col\">\n\n            <a data-tip data-event=\"click\" data-for={el.url} href=\"#\" data-tip >{el.name}</a>\n            <ReactTooltip id={el.url}  getContent={() => { \n                return <Iframe url={this.state.selected} \n                        width=\"450px\"\n                        height=\"450px\"\n                        id=\"myId\"\n                        className=\"myClassname\"\n                        display=\"initial\"\n                        position=\"relative\"\n                        loading=\"content loading\"\n                        allowFullScreen={true}\n                        isCapture={true}\n                        clickable={true}\n                        /> }}/>             \n            </div>\n        </div>\n        ))}\n\n\n    </div>\n    }  \n    \n}\n\nexport default connect(mapStateToProps)(NearestSpots);","//import './css/Report.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport {StormGlassLoaded} from './../../../actions/stormglass';\nimport apiConfig from './../../../config/api';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n      stormglass : state.stormglass\n    };\n  };\n\n  const mapDispachToProps = (dispatch) => {\n    return {\n      stormglassLoaded: (data) => dispatch(StormGlassLoaded(data)),\n    };\n  };\n\nclass Report extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        data : {},\n        location : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if(this.props.stormglass.data.wavePeriod)\n      {\n        this.setState({data : this.props.stormglass.data});\n      }\n      else {\n        const  currentTime = new Date();\n        const hours = currentTime.getHours();\n        const setState = this.setState;\n        const sgLoaded = this.props.stormglassLoaded;\n        locator.locate(defaultOptions , function (err, location) {\n          if (err) return console.log(\"location err\", err);\n          getSpots(location.coords.latitude,location.coords.longitude).then(data=>{\n            setState({location :data.hits[0].name })\n            const params = 'waveHeight,airTemperature';\n            fetch(`${apiConfig.host + apiConfig.port }/api/sc?lat=${data.hits[0]._geoloc.lat}&lon=${data.hits[0]._geoloc.lon}&name=${data.hits[0].id}`).then((response) => response.json()).then((jsonData) => {\n              sgLoaded(jsonData.hours[currentTime.getHours()]);\n              console.log(jsonData.hours[currentTime.getHours()]);\n              setState({data : jsonData.hours[currentTime.getHours()]});\n            });\n          })\n      });\n    }\n    }\n  }\n\n  render()\n  {    \n    const { spots } =  this.state;\n    console.log('spots', spots)\n    return <div className=\"container surfline nearest_spots\">\n          <h6>Local Report</h6>\n          <div className=\"row spot\"><div className=\"col\"> <i>Observations Near {this.state.location}</i></div></div>\n          <div className=\"row spot\" >\n            <div className=\"col\">   \n            <div>Water Temp: {this.state.data.waterTemperature && (( this.state.data.waterTemperature.sg * 9/5) + 32).toFixed()} &#176;F</div>  \n            <div>Swell Height: {this.state.data.swellHeight && (this.state.data.swellHeight.sg * 3.28084).toFixed(2)} ft</div>  \n            <div>Swell Period: {this.state.data.swellPeriod && this.state.data.swellPeriod.sg } s</div>  \n            <div>Wave Height: {this.state.data.waveHeight && (this.state.data.waveHeight.sg * 3.28084).toFixed(2)} ft</div>  \n            <div>Wave Period: {this.state.data.wavePeriod && this.state.data.wavePeriod.sg } s</div>  \n            <div>Pressure: {this.state.data.pressure && this.state.data.pressure.sg } hPa</div>  \n            <div>Wind Speed: {this.state.data.currentSpeed && (this.state.data.currentSpeed.sg * 1.94384 ).toFixed(2) * 100 } k</div>  \n          </div>\n        </div>\n      </div>\n    }  \n    \n}\n\n\nexport default connect(mapStateToProps, mapDispachToProps )(Report);","import { STORMGLASS_LOADED } from \"./types\";\n\nexport const StormGlassLoaded = data => ({\n    type: STORMGLASS_LOADED,\n    payload: data\n  });\n\n\n\n\n\n\n  \n\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport  MainContainer  from './../layout/MainContainer';\nimport { Link } from 'react-router-dom';\nimport SessionCard from './../session/SessionCard';\nimport BoardCard from './../board/BoardCard';\nimport UserRequests from './../../requests/UserRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport UserSessionRequests from './../../requests/SessionRequests';\nimport {UserSessionsLoaded} from './../../actions/user_session';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {loadUserd} from './../../actions/user';\nimport './css/Dashboard.css'\nimport ProfileCard from './ProfileCard';\nimport NearestSpots from './../reports/surfline/NearestSpots';\nimport Report from './../reports/stormglass/Report';\n\n\nconst DASHBOARD_LIST_LIMIT = 3; \nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data, locations : state.user.UserLocations }\n  }\n\n  const withs = \n  {\n    user : [],\n    boards : ['Board', 'UserBoardImage'],\n    sessions : ['UserBoard', 'SessionImage', 'Location']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n       // loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n        loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.boards, onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n        loadSessions: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.sessions, onSuccess : (data)=>{return UserSessionsLoaded(data)}})),\n    };\n  };\n\nclass UserDashboard extends React.Component{\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            //this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSessions(new UserSessionRequests(this.props.session), this.props.session );\n        }\n    }\n     \n    render() {\n        const { user_sessions, boards } = this.props;\n        return (\n           <MainContainer>\n                <div className=\"row\">\n                    <div className=\"container card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                        </div>\n                        <div className=\"card-text dashboard-boxes\">\n                                <div className=\"container row\">\n                                    \n                                    <div className=\"col-md-10 row\">\n                                        <div className=\"col-md-12\"><ProfileCard /></div>\n                                        <div className=\"col-md-6\">\n                                            <h5>Latest Sessions</h5>\n                                            {\n                                                user_sessions && user_sessions.reduce((mappedArray, session, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                       \n                                                                <SessionCard session={session} key={session.id} />\n                                                              \n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                        <h5>Newest Boards</h5>\n                                            {\n                                                boards && boards.reduce((mappedArray, board, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <BoardCard board={board} key={board.id}/>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }                              \n                                        </div>\n                                </div>\n                                <div className=\"col-md-2\">\n                                    <div className=\"index-sidecard\"><Report/></div>\n                                    <div className=\"index-sidecard\"><NearestSpots /></div>\n                                 </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps )(UserDashboard)\n\n// <link href=\"//www.surf-forecast.com/stylesheets/feed.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div id=\"wf-weatherfeed\"><iframe  allowtransparency=\"true\" height=\"272\" width=\"469\" src=\"//www.surf-forecast.com/breaks/Hollyoake/forecasts/feed/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"><p>Your browser does not support iframes.</p></iframe><div id=\"wf-link\"><a href=\"https://www.surf-forecast.com/\"><img alt=\"Surf Forecast\" src=\"//www.surf-forecast.com/images/feed/surflogo-150.jpg\"/></a><p id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">Hollyoake</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</p><div></div></div></div>\n                                  ","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\n\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n        const {search, value} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb\" : \"sc-bxivhb d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport Location from \"./../../form/Location\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport moment from \"moment\";\nimport { loadUserBoards, clearUserBoards } from \"./../../../actions/user_board\";\nimport { refresh } from \"./../../../lib/utils/cognito\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    boards: state.user_boards,\n    user_sessions: state.user_sessions,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n    clearBoards: () => dispatch(clearUserBoards()),\n  };\n};\n\nclass SessionForm extends React.Component {\n  constructor(props) {\n    refresh(props.session.user.id);\n    super(props);\n    this.defaultName = moment().format(\"MMMM D YYYY, h:mm a\");\n    this.state = { show: false, pictures: props.pictures, location_id: \"\" };\n  }\n\n  onChange = (propertyName, newValue) => {\n    const data = [];\n    data[propertyName] = newValue;\n    this.setState({\n      ...data,\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if (!this.props.boards.loaded)\n        this.props.loadBoards(this.props.session, {\n          wheres: { user_id: this.props.session.user.id },\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearBoards();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form\n          action={({ serialized, fields, form }) =>\n            this.props.processFormSubmission({\n              session: this.props.session,\n              serialized,\n              fields,\n              form,\n            })\n          }\n          rules={rules}\n          messages={messages}\n        >\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <Input\n                name=\"title\"\n                label=\"Session Name\"\n                className=\"form-control\"\n                initialValue={this.defaultName}\n                required\n              />\n              <Location\n                id=\"location_id\"\n                name=\"location_id\"\n                label=\"Where You paddling Out?\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                value={this.state.location_id}\n              />\n            </div>\n            <div className=\"col-12 clear-fix\">\n              <Input\n                type=\"hidden\"\n                name=\"user_id\"\n                value={this.props.session.user.id}\n              />\n              <span style={{float : 'right'}}>\n              <Button type=\"submit\">\n                {this.props.edit ? \"Edit Session\" : \"Add Session\"}\n              </Button>\n              </span>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {createUserSession, UserSessionCreatedCleared } from './../../actions/user_session';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession :  (session, params) => dispatch(createUserSession(session, params)),\n        clearCreatedSession : ()=> dispatch( UserSessionCreatedCleared() )\n    }\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.onSubmissionComplete()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(this.props.noUpdate) return;\n        if ((prevProps.user_sessions.data.length !== this.props.user_sessions.data.length)\n        && this.props.user_sessions.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_sessions.created.id;\n                    this.props.clearCreatedSession();\n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createSession(session, {data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 row \">\n                        <div className=\"col-md-12 \">\n                            <h2>{TITLE}</h2>\n                            {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new session\n                            </div>\n                            )}\n                            {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                            </div>\n                            )}\n                            {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                            )}    \n                        </div>\n                        <div className=\"col-md-12\">           \n                            <SessionForm key=\"session_form\" session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop} />\n                        </div>\n                    </div>\n                </FormCard>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport './css/Modal.css'\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n\n        </section>\n      </div>\n    );\n  };\n  export default Modal;\n\n  /**\n   *           <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n   */","import React from 'react';\nimport { connectStateResults } from 'react-instantsearch-dom';\n\nclass StateResults extends React.Component{\n  constructor({\n    searchState,\n    searchResults,\n    allSearchResults,\n    error,\n    searching,\n    searchingForFacetValues,\n    isSearchStalled,\n    onChange\n  })\n  {\n    super();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(!this.props.searching && this.props.searchResults)\n    {\n      const ids =[];\n      this.props.searchResults.hits.forEach(hit=> ids.push(hit.id))\n      if(this.props.onChange)\n      {\n          this.props.onChange(ids)\n      }\n    }\n  }\n  render(args)\n  {\n    //just push something out here to satisfy render\n    return ''\n  }\n}\n\n  const SearchResults = connectStateResults(StateResults);\n  export default SearchResults;","import \"./css/Facets.css\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  RefinementList,\n  Configure,\n} from \"react-instantsearch-dom\";\nimport SearchResults from \"./../algolia/SearchResults\";\n\nfunction mapStateToProps(state) {\n  return { api: state.api, session: state.session };\n}\n\nclass Facets extends React.Component {\n  render() {\n    const filters =\n      this.props.showAll === \"1\"\n        ? \"user_id=\" + this.props.session.user.id + \" OR is_public=1\"\n        : \"user_id=\" + this.props.session.user.id;\n    return (\n      <div>\n        <h6>Boards</h6>\n        <div>\n          <RefinementList key=\"rl1\" container=\"#sessions\" attribute=\"board\" />\n        </div>\n        <h6>Locations</h6>\n        <div>\n          <RefinementList\n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"location\"\n          />\n        </div>\n        <h6>Rating</h6>\n        <div>\n          <RefinementList\n            key=\"rl2\"\n            container=\"#sessions\"\n            attribute=\"rating\"\n            limit={10}\n            showMore={true}\n            showMoreLimit={3}\n            //searchable={true}\n            //searchableIsAlwaysActive={true}\n          />\n        </div>\n        <Configure hitsPerPage={this.props.hitsPerPage} filters={filters} />\n        <SearchResults onChange={this.props.onSelect} key=\"sr1\" />\n      </div>\n    );\n  }\n}\nexport default connect(mapStateToProps)(Facets);\n","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n  \nconst searchClient = {\n      search(requests) {\n        const shouldSearch = requests.some(({ params: { query }}) => query !== '');\n        if (shouldSearch) {\n          return algoliaClient.search(requests);\n        }\n        return Promise.resolve({\n          results: [{ hits: [] }],\n        });\n      },\n      searchForFacetValues: algoliaClient.searchForFacetValues,\n    };\n\nexport default searchClient;\n  ","import React from 'react';\nimport { connectSortBy } from 'react-instantsearch-dom';\nimport { Select, Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\n\nclass SB extends React.Component{\n  constructor({ items, refine, createURL })\n  {\n    super();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n      if(prevProps.currentRefinement !== this.props.currentRefinement){\n          this.props.onSortUpdated(this.props.currentRefinement);\n      }\n   \n  }\n\n  render()\n  {    \n\n    return <Form><Select  onChange={event => {\n       // event.preventDefault();\n       // console.log(event)\n        this.props.refine(event.nextValue);\n      }}>\n       {this.props.items.map(item => (\n      <option key={item.value} value={item.value}>\n\n          {item.label}\n     \n      </option>\n    ))}\n    </Select></Form>\n\n    return <ul >\n    {this.props.items.map(item => (\n      <li key={item.value} >\n        <a\n          href={this.props.createURL(item.value)}\n          style={{ fontWeight: item.isRefined ? 'bold' : '' }}\n          onClick={event => {\n            event.preventDefault();\n            this.props.refine(item.value);\n          }}\n        >\n          {item.label}\n        </a>\n      </li>\n    ))}\n  </ul>\n  }\n}\n\nconst SortBy = connectSortBy(SB);\nexport default SortBy","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport React, { Component } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport SessionCard from \"./SessionCard\";\nimport {\n  loadUserSessions,\n  deleteUserSession,\n  UserSessionsCleared,\n} from \"./../../actions/user_session\";\nimport Create from \"./Create\";\nimport Modal from \"./../layout/Modal\";\nimport {  Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport Facets from \"./Facets\";\nimport {\n  InstantSearch,\n  CurrentRefinements,\n  ClearRefinements,\n  Index,\n  Pagination,\n  HitsPerPage,\n} from \"react-instantsearch-dom\";\nimport searchClient from \"./../../lib/utils/algolia\";\nimport SortBy from \"./../layout/SortBy\";\nimport NearestSpots from './../reports/surfline/NearestSpots';\nimport Report from './../reports/stormglass/Report';\n\n\n\nconst DEFAULT_SORT = \"created_at_DESC\";\nconst DEFAULT_SHOW = 12;\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    sessions: state.user_sessions.data,\n    api: state.api,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadSessions: (session, params) => dispatch(loadUserSessions(session, params)),\n    deleteSession: (session, id) => dispatch(deleteUserSession(session, id)),\n    clearSessions: () => dispatch(UserSessionsCleared()),\n  };\n};\n\nconst relations = {\n  user_session: [\"UserBoard\", \"Location\", \"SessionImage\"],\n};\n\nclass SessionIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sessions: [],\n      //this will recieve the paginated sessions from the child\n      currentPage: 0,\n      show: false,\n      selectedSortOrder: DEFAULT_SORT,\n      currentHits: [],\n      showAll: 0,\n    };\n    this.deleteSession = this.deleteSession.bind(this);\n    this.editSession = this.editSession.bind(this);\n    this.viewSession = this.viewSession.bind(this);\n  }\n\n \n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      //this.props.loadSessions(this.props.session, { orderBy : DEFAULT_SORT ,  wheres : {user_id : this.props.session.user.id }, withs : relations.user_session } );\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearSessions();\n  }\n\n  deleteSession(id) {\n    confirmAlert({\n      title: \"Confirm To Delete\",\n      message: \"Are you sure you want to delete this session?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.props.deleteSession(this.props.session, id);\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  editSession(sessionId) {\n    this.props.history.push(\"/session/edit/\" + sessionId);\n  }\n\n  viewSession(sessionId) {\n    this.props.history.push(\"/session/\" + sessionId);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    this.setState({ show: false });\n  };\n\n  onSortUpdated = (sortOrder)=>{\n    let sort = sortOrder.replace('sessions_', '');\n    if(sort === 'sessions') sort= 'id_desc';\n    this.setState({ selectedSortOrder: sort });\n  }\n\n  setScope = (e) => {\n    if (e.nextValue) {\n      this.setState({ showAll: e.nextValue });\n    }\n  };\n\n  searchResultHandler = (e) => {\n    var isNew = JSON.stringify(e) !== JSON.stringify(this.state.currentHits);\n    if (e.length && isNew) {\n      this.props.loadSessions(this.props.session, {\n        orderBy: this.state.selectedSortOrder,\n        wheres: { in: e.join(\",\") },\n        withs: relations.user_session,\n        page: this.state.currentPage,\n        limit: DEFAULT_SHOW,\n      });\n      this.setState({ currentHits: e });\n    }\n  };\n\n  onSearch = (e) => {\n    console.log(\"onSearch\", e);\n  };\n\n  render() {\n    const { sessions } = this.props;\n    return (\n      <MainContainer>\n        <InstantSearch\n          key=\"is1\"\n          indexName=\"sessions\"\n          searchClient={searchClient}\n        >\n          <Index indexName=\"sessions\">\n            <div className=\"row\">\n              <div className=\"container card card-lg mx-auto\">\n                <div className=\"card-title\">\n                  <h2>\n                    Sessions\n                    <Link\n                      to=\"#\"\n                      onClick={this.showModal}\n                      className=\"btn btn-sm btn-outline-secondary float-right\"\n                    >\n                      Create New Session\n                    </Link>\n                  </h2>\n                </div>\n                <div className=\"card-text\">\n                  <div className=\"container\">\n                    <div className=\"row col-12\">\n                      <div className=\"col-2\">\n                        <SortBy\n                          defaultRefinement=\"sessions\"\n                          items={[\n                            { value: \"sessions\", label: \"Newest To Oldest\" },\n                            { value: \"sessions_id_asc\", label: \"Oldest To Newest\" },\n                            { value: \"sessions_rating_desc\", label: \"Best To Worst\" },\n                            { value: \"sessions_rating_asc\", label: \"Worst To Best\" }\n                          ]}\n                          onSortUpdated={this.onSortUpdated}\n                        />\n                      </div>\n                      <div className=\"col-10\">\n                        <span className=\"float-right\">\n                          <Pagination />\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <ClearRefinements />\n                      </div>\n                      <div className=\"col-9\">\n                        <CurrentRefinements />\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <div className=\"detail-line is_public_radio\">\n                          <Form>\n                            <Radio\n                              name=\"is_public\"\n                              label=\"Mine\"\n                              value=\"0\"\n                              onChange={this.setScope}\n                              checked={parseInt(this.state.showAll) === 0}\n                            />\n                            <Radio\n                             className=\"is_public_radio\"\n                              name=\"is_public\"\n                              label=\"Mine + Public\"\n                              value=\"1\"\n                              onChange={this.setScope}\n                              checked={parseInt(this.state.showAll) === 1}\n                            />\n                          </Form>\n                        </div>\n                        <div className=\"filter-widgets\" id=\"sessions\">\n                          <Facets\n                            onSelect={this.searchResultHandler}\n                            showAll={this.state.showAll}\n                            key=\"sr1\"\n                            hitsPerPage={DEFAULT_SHOW}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"row\">\n                          {this.props.sessions &&\n                            this.props.sessions.map((session) => (\n                              <div key={session.id} className=\"col-12\">\n                                <SessionCard\n                                  session={session}\n                                  key={session.id}\n                                  deleteSession={this.deleteSession}\n                                  viewSession={this.viewSession}\n                                  editSession={this.editSession}\n                                />\n                              </div>\n                            ))}\n                          {(!sessions || sessions.length === 0) && (\n                            <div className=\"col-12\">\n                              <h3>No Sessions found at the moment</h3>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-3\">\n                            <div className=\"index-sidecard\"><Report/></div>\n                            <div className=\"index-sidecard\"><NearestSpots /></div>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-6\"></div>\n                      <div className=\"col-6\">\n                        <span className=\"float-right\">\n                          <Pagination />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Index>\n        </InstantSearch>\n        <Modal show={this.state.show} handleClose={(e) => this.hideModal(e)}>\n          <Create\n            onSuccess={(e) => this.hideModal(e)}\n            onSubmissionComplete={this.viewSession}\n            close={this.hideModal}\n          />\n        </Modal>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex);\n\n/**\n *        <div className=\"row col-12 filter-widgets\" id=\"sessions\">\n                                <InstantSearch\n                                        indexName=\"dev_sessions\"\n                                        searchClient={searchClient}\n                                        >\n                                        <RefinementList \n                                        container=\"#sessions\"\n                                        attribute=\"rating\"\n                                        searchableIsAlwaysActive={true} />\n                                        <Configure hitsPerPage={8} />\n                                    </InstantSearch>\n                                </div>\n */\n","import WWO from 'worldweatheronline-api';\nimport  wwConfig  from './../../config/worldweather';\n\nexport default WWO.createClient({\n    key : wwConfig.key,\n    responseType: 'json',\n    subscription: 'premium',\n    locale: 'EN'\n});","import React from \"react\";\nimport { createField, fieldPresets } from \"react-advanced-form\";\nimport Autosuggest from \"react-autosuggest\";\n\nclass TypeAheadInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || \"\",\n      suggestions: props.entity,\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    console.log(\"key\", newValue);\n    if (this.state.value !== newValue) {\n      this.setState({\n        value: newValue,\n      });\n    }\n  };\n\n  onBlur = (event) => {\n    if (this.state.value) console.log(\"blur\", event.target.value);\n    let vid = this.props.entity.find(\n      (x) => x[this.props.keyName] === event.target.value\n    );\n    this.props.setValue(this.props.name, vid ? vid.id : event.target.value);\n  };\n\n  getSuggestionValue = (suggestion) => suggestion[this.props.keyName];\n\n  renderSuggestion = (suggestion) => (\n    <div>{suggestion[this.props.keyName]}</div>\n  );\n\n  // Autosuggest will call this function every time we need to update suggestions.\n  onSuggestionsFetchRequested = ({ value, reason }) => {\n    this.setState({\n      suggestions: this.props.getSuggestions(value, reason),\n    });\n  };\n\n  // Autosuggest will call this function every time we need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  onSuggestionSelected = (\n    event,\n    { suggestion, /*suggestionValue, suggestionIndex, sectionIndex, method*/ }\n  ) => {\n    console.log(event.target);\n    this.props.setValue(this.props.name, suggestion.id);\n  };\n\n  shouldRenderSuggestions = (value) => {\n    return true;\n  };\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props;\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState;\n\n    const inputClassNames = [\n      \"form-control\",\n      touched && \"is-touched\",\n      pristine && \"is-pristine\",\n      validating && \"is-validating\",\n      validatedSync && \"validated-sync\",\n      validatedAsync && \"validated-async\",\n      valid && \"is-valid\",\n      validSync && \"valid-sync\",\n      validAsync && \"valid-async\",\n      invalid && \"is-invalid\",\n      \"sc-EHOje fVJbnH\",\n    ]\n      .filter(Boolean)\n      .join(\" \");\n\n    const inputProps = {\n      ...fieldProps,\n      value,\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n      onFocus: () =>\n        this.onSuggestionsFetchRequested({\n          value: name,\n          reason: \"type_ahead_focused\",\n        }),\n      id: name,\n      name,\n      className: inputClassNames,\n      autoComplete: \"off\",\n    };\n\n    const wrapperClass = this.props.display\n      ? \"sc-bxivhb\"\n      : \"sc-bxivhb d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && \" *\"}\n          </label>\n        )}\n        <div\n          className=\"sc-ifAKCX fatWUN\"\n          style={{ maxHeight: 200, overflow: \"auto\" }}\n        >\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={this.onSuggestionSelected}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            shouldRenderSuggestions={this.shouldRenderSuggestions}\n            //focusInputOnSuggestionClick={false}\n            //alwaysRenderSuggestions={true}\n          />\n        </div>\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput);\n","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import { SHAPERS_LOADED } from \"./types\";\nimport ManufacturerRequests from './../requests/ManufacturerRequests';\n\n\nexport const ShapersLoaded = data => ({\n    type: SHAPERS_LOADED,\n    payload: data\n  });\n\n\n\n  export const loadShapers= ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return ShapersLoaded(data)} }}\n      dispatch(\n        new ManufacturerRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import { BOARDS_LOADED } from \"./types\";\nimport BoardRequests from './../requests/BoardRequests';\n\nexport const BoardsLoaded = data => ({\n    type: BOARDS_LOADED,\n    payload: data\n  });\n\n  export const loadBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return BoardsLoaded(data)} }}\n      dispatch(\n        new BoardRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport TypeAheadInput from \"./../../form/TypeAheadInput\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport ImageUploader from \"react-images-upload\";\nimport { loadShapers } from \"./../../../actions/shaper\";\nimport { loadBoards } from \"./../../../actions/board\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    boards: state.boards.data,\n    shapers: state.shapers.data,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadShapers: (session, params) => dispatch(loadShapers(session, params)),\n    loadBoards: (session, params) => dispatch(loadBoards(session, params)),\n  };\n};\n\nconst relations = {\n  shapers: [\"Board\"],\n  boards: [\"Manufacturer\"],\n};\n\nclass UserBoardForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      board_id: null,\n      manufacturer_id: null,\n    };\n  }\n\n  onChange = (propertyName, newValue) => {\n    const data = [];\n    data[propertyName] = newValue;\n    this.setState({\n      ...data,\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if (!this.props.boards.length)\n        this.props.loadBoards(this.props.session, {\n          limit: 1000,\n          withs: relations.boards,\n        });\n      if (!this.props.shapers.length)\n        this.props.loadShapers(this.props.session, {\n          limit: 1000,\n          withs: relations.shapers,\n        });\n    } else {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  getBoardSuggestions = (value) => {\n    if (!value) {\n      return this.props.boards.filter(\n        (entity) => entity.manufacturer_id === this.state.manufacturer_id\n      );\n    }\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0\n      ? []\n      : this.props.boards.filter(\n          (entity) =>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue &&\n            entity.manufacturer_id === this.state.manufacturer_id\n        );\n  };\n\n  getShaperSuggestions = (value) => {\n    if (!value) return this.props.shapers;\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0\n      ? []\n      : this.props.shapers.filter(\n          (entity) =>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form\n          action={({ serialized, fields, form }) =>\n            this.props.processFormSubmission({\n              session: this.props.session,\n              serialized,\n              fields,\n              form,\n            })\n          }\n          rules={rules}\n          messages={messages}\n        >\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <Input\n                name=\"name\"\n                label=\"Nickname\"\n                className=\"form-control\"\n                required\n              />\n              <TypeAheadInput\n                entity={this.props.shapers}\n                name=\"manufacturer_id\"\n                keyName=\"name\"\n                label=\"choose a shaper\"\n                className=\"form-control\"\n                placeholder=\"Unknown\"\n                value={this.state.manufacturer_id}\n                setValue={this.onChange}\n                getSuggestions={this.getShaperSuggestions}\n                display={true}\n                required\n              />\n              <TypeAheadInput\n                entity={this.props.boards}\n                name=\"board_id\"\n                keyName=\"model\"\n                label=\"choose a model\"\n                className=\"form-control\"\n                placeholder=\"choose a board\"\n                value={this.state.board_id}\n                setValue={this.onChange}\n                getSuggestions={this.getBoardSuggestions}\n                display={this.state.manufacturer_id !== null}\n                required\n              />\n              <ImageUploader\n                withIcon={false}\n                buttonText=\"Choose images\"\n                onChange={this.props.onDrop}\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                maxFileSize={5242880}\n                withPreview={true}\n              />\n            </div>\n            <div className=\"col-12\">\n              <Input\n                type=\"hidden\"\n                name=\"user_id\"\n                value={this.props.session.user.id}\n              />\n              <Button type=\"submit\">\n                {this.props.edit ? \"Edit Board\" : \"Add Board\"}\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(UserBoardForm);\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport {FormCard} from './../layout/FormCard';\nimport  UserBoardForm  from './forms/UserBoardForm';\nimport { withRouter} from 'react-router-dom';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport {createUserBoard, UserBoardCreatedCleared} from './../../actions/user_board';\n\n\n\nconst TITLE=\"Create Board\";\n\nconst mapStateToProps = state => {\n    return { session: state.session, user_boards : state.user_boards}\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createUserBoard : (session, params) => dispatch(createUserBoard(session, params)), \n        clearCreatedBoard : ()=>dispatch( UserBoardCreatedCleared())\n    };\n  };\n\nclass CreateUserBoard extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : []\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        \n        if(this.props.noUpdate) return;\n        if ((prevProps.user_boards.data.length !== this.props.user_boards.data.length) && this.props.user_boards.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_boards.created.id;\n                  \n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n    \n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createUserBoard} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = UserBoardRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createUserBoard(session, { data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <UserBoardForm board={this.state.board} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading}  onDrop={this.onDrop} />\n                    </div>\n                </FormCard>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(withRouter(CreateUserBoard));\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport InlineEdit, { InputType } from \"riec\";\nimport {\n  loadUserBoard,\n  UserBoardCreatedCleared,\n} from \"./../../../actions/user_board\";\nimport { s3Conf } from \"./../../../config/s3\";\nimport Modal from \"./../../layout/Modal\";\nimport CreateUserBoard from \"./../CreateUserBoard\";\nimport StarBar from \"./../../layout/StarBar\";\n\nimport { withRouter } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    current_session: state.user_sessions.selected,\n    board_created: state.user_boards.created,\n    user_board: state.user_boards.selected,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n    clearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n  };\n};\n\nclass BoardPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      select: { id: 0, name: \"No Board Selected\" },\n      selectOptions: [],\n      defaultImage:\n        \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\",\n      board_id: props.board_id,\n      selectedBoard: {},\n      show: false,\n    };\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    this.setState({ show: false });\n  };\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      this.setState({\n        board_id: this.props.board_id,\n        selectedBoard: this.props.current_session.UserBoard,\n      });\n      if (this.props.current_session.board_id)\n        this.props.loadBoard(this.props.session, {\n          id: this.props.current_session.board_id,\n          withs: [\"UserBoardImage\"],\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.current_session.board_id !== this.props.board_id ||\n      this.props.board_created !== false\n    ) {\n      const board_id = this.props.board_created\n        ? this.props.board_created.id\n        : this.props.board_id;\n      this.props.clearCreatedBoard();\n      //this.setState({ board_id : board_id})\n      this.props.onChange(board_id);\n      this.props.loadBoard(this.props.session, {\n        id: board_id,\n        withs: [\"UserBoardImage\"],\n      });\n    }\n  }\n\n  render() {\n    const session = this.props.current_session;\n    const boardImage =\n      this.props.user_board &&\n      this.props.user_board.UserBoardImages &&\n      this.props.user_board.UserBoardImages.length\n        ? s3Conf.root + this.props.user_board.UserBoardImages[0].name\n        : this.state.defaultImage;\n    return (\n      <div className={this.props.wrapperClass + \" \"}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <strong>Board:</strong>\n            </div>\n\n            <div className=\"col-5\">\n              <img\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  this.props.history.push(\"/board/\" + session.board_id)\n                }\n                src={boardImage}\n              />\n            </div>\n            <div className=\"col-7\">\n              <div className=\"board-select board-picker-line row\">\n            \n                  <InlineEdit\n                    type={InputType.Select}\n                    value={this.props.user_board.name || \"Select A Board\"}\n                    defaultValue={this.props.user_board.name}\n                    onChange={this.props.onChange}\n                    options={this.props.boards}\n                    valueKey=\"id\"\n                    labelKey=\"name\"\n                    className=\"form-control\"\n                  />\n              \n              </div>\n\n              {this.props.user_board && (\n                <div className=\"board-picker-line\">\n                  <StarBar\n                    stars={this.props.user_board.rating}\n                    onClick={this.submitUpdate}\n                    size=\"xs\"\n                  />\n                </div>\n              )}\n\n              {this.props.user_board && (\n                <div className=\"board-picker-line\">\n                  Size:{this.props.user_board.size}\n                </div>\n              )}\n              <div className=\"board-picker-line\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary btn-sm\"\n                  onClick={this.showModal}\n                >\n                  New Board\n                </button>\n              </div>\n            </div>\n\n            <Modal\n              show={this.state.show}\n              handleClose={(e) => this.hideModal(e)}\n            >\n              <CreateUserBoard\n                onSuccess={(e) => this.hideModal(e)}\n                onSubmissionComplete={this.hideModal}\n              />\n            </Modal>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(withRouter(BoardPicker));\n","import './css/Session.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport {FormCard} from './../layout/FormCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport Location from './../form/Location';\nimport MainContainer from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {loadUserBoards} from './../../actions/user_board';\nimport {UserSessionCleared,loadUserSession, updateUserSession, loadUserSessionImages, addUserSessionImages, deleteUserSessionImage} from './../../actions/user_session';\nimport WWClient from './../../lib/utils/worldweather'\nimport noaaForecaster from 'noaa-forecasts';\nimport BoardPicker from './../board/forms/BoardPicker';\nimport { Radio} from 'react-advanced-form-addons';\nimport { FacebookProvider, Share, Comments, Page } from 'react-facebook';\nimport fbConfig from './../../config/fb'\nrequire('dotenv').config();\n\nconst mapStateToProps = state => {\n    return { \n        session: state.session, \n        current_session : state.user_sessions.selected, \n        boards : state.user_boards.data, \n        session_images : state.session_images, \n        api:state.api \n    }\n  }\n\n  const withs = {\n    session : ['Location', 'UserBoard.UserBoardImage']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadSession : (session, params)=>dispatch(loadUserSession(session, params)),\n      loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n      clearSession : ()=>dispatch(UserSessionCleared()),\n      editUserSession: (session, params) => dispatch(updateUserSession(session, params)), \n      loadSessionImages: (session, params) => dispatch(loadUserSessionImages(session, params)), \n      addImages : (session, params) => dispatch(addUserSessionImages(session, params)), \n      deleteSessionImage: (session, id) => dispatch( deleteUserSessionImage (session, id))\n    };\n  };\n\nclass SessionView extends Component {\n\n    \n    constructor(props)\n    {\n        super(props)\n        this.UserSessionRequest = new SessionRequests(props.session);\n        \n        this.state = { \n            boards : [], \n            select: {id : 0, name : 'No Board Selected'},\n            selectedImage : null,\n            selectOptions: [],\n            uploaderInstance : 1,\n            imageIndex : 0,\n            date: '',\n            is_public : null,\n        };\n        this.onDrop = this.onDrop.bind(this);\n    \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoards(this.props.session, {orderBy: 'name_ASC', limit:50, wheres : {user_id : this.props.session.user.id }} );\n            this.props.loadSession(this.props.session, {id : this.props.match.params.id,  withs : withs.session});\n            this.props.loadSessionImages(this.props.session, {wheres : {session_id : this.props.match.params.id }} );\n        }\n       else{\n            this.props.history.push('/session');\n       }\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = SessionRequests.createFormRequest({session_id : this.props.current_session.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n      \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n            ((this.props.boards.length && !this.state.selectOptions.length && this.props.current_session.id)\n            || (prevProps.boards.length !== this.props.boards.length)) && this.setSelectedBoard();\n    }\n\n    setSelectedBoard = () =>\n    {\n        const boardOptions = [{id : 0, name : 'select'}];\n        let select = this.state.select\n        this.props.boards.map((obj) => {\n            let board = { id : obj.id , name : obj.name};\n            if(obj.id === this.props.current_session.board_id) select = board;\n            return boardOptions.push(board) \n        })\n        this.setState({selectOptions: boardOptions, select : select})\n    }\n\n    componentWillUnmount(){\n        this.props.clearSession();\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/user/dashboard');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserSession(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    onLocationChange = (propertyName , newValue ) => {\n        if(!newValue) return;\n        const data = [];\n        data[propertyName] = newValue;\n        this.submitUpdate({ ...data});\n      };\n\n\n    onPrivacyChange = (e)=>\n    {\n        //@totdo this double submits without keeping track of state\n        if(e.nextValue !== this.state.is_public){\n            this.setState({is_public : e.nextValue});\n            this.submitUpdate({is_public :e.nextValue })\n        }\n    }\n    \n      onLocationBlur = (e, a, d) =>\n    {\n\n    }\n\n    onBoardChange = (id) =>\n    {\n        if(!id) return;\n        this.submitUpdate({ board_id : id});\n        const idInt = parseInt(id);\n        this.state.selectOptions.map((obj) => {\n            if(obj.id === idInt ) this.setState({select : obj});\n            return true;\n        })\n    }\n\n    onImageLoad = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteSessionImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.session_images[newIndex]})\n        });\n    }\n\n    onDateChange = date => {\n        let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        this.submitUpdate({session_date : formattedDate})\n        this.setState({date : date})\n      };\n\n    render() {\n        const session = this.props.current_session;\n        return (\n            <MainContainer>\n              <FacebookProvider appId={fbConfig.api_key}>\n                <FormCard returnToIndex={this.returnToIndex}>\n                  <Form>\n                    <div className=\"container\">\n                      <div className=\"details row\">\n                        <h3 className=\"col-12 session-title\">\n                          <RIEInput\n                            required={false}\n                            value={session.title || \"\"}\n                            defaultValue={session.title}\n                            change={this.submitUpdate}\n                            propName=\"title\"\n                          />\n                        </h3>\n                        <div className=\"col-12\">\n                          <StarBar\n                            stars={session.rating}\n                            onClick={this.submitUpdate}\n                            size=\"1x\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"preview col-7\">\n                          <div className=\"clearfix\">\n                              <ImageUploader\n                                key={this.state.uploaderInstance}\n                                withIcon={false}\n                                buttonText=\"Add Images!\"\n                                onChange={this.onDrop}\n                                imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n                                maxFileSize={5242880}\n                                withPreview={false}\n                                withLabel={false}\n                                buttonClassName='btn btn-link'\n                              />\n                          </div>\n                          <div>\n                            <ImageGallery\n                              items={this.props.session_images}\n                              showBullets={true}\n                              showIndex={true}\n                              startIndex={this.state.imageIndex}\n                              onSlide={this.onImageSelected}\n                              onImageLoad={this.onImageLoad}\n                              thumbnailPosition={\"bottom\"}\n                            />\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"card-text\">\n                              <FontAwesomeIcon\n                                size=\"lg\"\n                                alt=\"delete user\"\n                                style={{\n                                  marginLeft: \".5em\",\n                                  cursor: \"pointer\",\n                                  color: \"red\",\n                                }}\n                                icon={faTrash}\n                                onClick={this.deleteImage}\n                                value={this.state.imageIndex}\n                              />\n                              <Share href={window.location.href}>\n                                {({ handleClick, loading }) => (\n                                  <button\n                                    type=\"button\"\n                                    disabled={loading}\n                                    onClick={handleClick}\n                                  >\n                                    Share\n                                  </button>\n                                )}\n                              </Share>\n                              <Page href={window.location.href} tabs=\"timeline\" />\n                              <Comments href={window.location.href} />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"details col-5\">\n                          <div className=\"container\">\n                            <div className=\"detail-line\">\n                              <div className=\"detail-line\">\n                                <div>\n                                  <strong>Privacy:</strong>\n                                </div>\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Private\"\n                                  value=\"0\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.id && session.is_public !== true}\n                                />\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Public\"\n                                  value=\"1\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.is_public && session.is_public === true}\n                                />\n                              </div>\n                              <div>\n                                <strong>Location:</strong>\n                              </div>\n                              <Location\n                                id=\"location_id\"\n                                name=\"location_id\"\n                                className=\"form-control\"\n                                onChange={this.onLocationChange}\n                                onBlur={this.onLocationBlur}\n                                value={session.location_id}\n                                placeholder={\n                                  session.Location\n                                    ? session.Location.formatted_address\n                                    : \"No Location Specified\"\n                                }\n                              />\n                            </div>\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Date:</strong>\n                              </div>\n                              <DatePicker\n                                selected={this.state.date}\n                                className=\"date-picker-input form-control\"\n                                onChange={this.onDateChange} //only when value has changed\n                                showTimeSelect\n                                dateFormat={\"MMMM d yyyy h:mm a\"}\n                                placeholderText={moment(session.session_date).format(\n                                  \"MMMM D YYYY h:mm a\"\n                                )}\n                              />\n                            </div>\n                            <BoardPicker\n                              onChange={this.onBoardChange}\n                              boards={this.state.selectOptions}\n                              board_id={session.board_id}\n                              wrapperClass=\"row detail-line\"\n                            />\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Notes:</strong>\n                              </div>\n                              <RIETextArea\n                                value={\n                                  session.notes || \"You have no notes for this session\"\n                                }\n                                className=\"form-control text-area\"\n                                defaultValue={session.notes}\n                                change={this.submitUpdate}\n                                propName=\"notes\"\n                                validate={_.isString}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Form>\n                </FormCard>\n              </FacebookProvider>\n            </MainContainer>\n          );\n          \n    }\n\n    loadNoaa = () =>\n    {\n        var inspect = require('util').inspect;\n        var obj = {\n            listLatLon: '38.99,-77.01 37.7833,-122.4167',\n            //product: 'time-series', // this is a default, it's not actually required\n            begin: moment().format('YYYY-MM-DDTHH:mm:ss'),\n            end: moment().add(3, 'days').format('YYYY-MM-DDTHH:mm:ss'),\n            qpf: 'qpf', // first elementInputName - Liquid Precipitation Amount\n            pop12: 'pop12' // another elementInputName - 12 hour probability of precipitation    \n            };\n            var token = 'yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV';\n            noaaForecaster.setToken(token);\n            noaaForecaster.getForecast(obj)\n            .then(function(results) {\n                console.log(inspect(results, { colors: true, depth: Infinity }));\n            });\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps )(SessionView)","import \"./css/Facets.css\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  RefinementList,\n  Configure,\n} from \"react-instantsearch-dom\";\nimport SearchResults from \"./../algolia/SearchResults\";\n\nfunction mapStateToProps(state) {\n  return { session: state.session };\n}\n\nclass Facets extends React.Component {\n  render() {\n    const filters =\n    this.props.showAll === \"1\"\n      ? \"user_id=\" + this.props.session.user.id + \" OR is_public=1\"\n      : \"user_id=\" + this.props.session.user.id;\n    return (\n      <div>\n        <h6>Manufacturers</h6>\n        <div>\n          <RefinementList\n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"manufacturer\"\n          />\n        </div>\n        <h6>Models</h6>\n        <div>\n          <RefinementList\n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"model\"\n            showMoreLimit={3}\n          />\n        </div>\n        <Configure hitsPerPage={this.props.hitsPerPage} filters={filters} />\n        <SearchResults onChange={this.props.onSelect} key=\"sr2\" />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Facets);\n","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport BoardCard from \"./../board/BoardCard\";\nimport {\n  loadUserBoards,\n  deleteUserBoard,\n  UserBoardsCleared,\n  UserBoardCreatedCleared,\n} from \"./../../actions/user_board\";\nimport Modal from \"./../layout/Modal\";\nimport CreateUserBoard from \"./CreateUserBoard\";\nimport {\n  InstantSearch,\n  CurrentRefinements,\n  ClearRefinements,\n  Index,\n  Pagination,\n  HitsPerPage,\n} from \"react-instantsearch-dom\";\nimport searchClient from \"./../../lib/utils/algolia\";\nimport Facets from \"./Facets\";\nimport { hasSession } from \"./../../lib/utils/session\";\nimport SortBy from \"./../layout/SortBy\";\n\nconst DEFAULT_SORT = \"created_at_DESC\";\nconst DEFAULT_SHOW = 12;\n\nconst mapStateToProps = (state) => {\n  return {\n    userSession: state.session,\n    boards: state.user_boards.data,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoards: (userSession, params) =>\n      dispatch(loadUserBoards(userSession, params)),\n    deleteBoard: (userSession, id) =>\n      dispatch(deleteUserBoard(userSession, id)),\n    clearBoards: () => dispatch(UserBoardsCleared()),\n    clearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n  };\n};\n\nconst relations = {\n  user_board: [\"Board.Manufacturer\", \"UserBoardImage\"],\n};\n\nclass BoardIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      show: false,\n      selectedSortOrder: DEFAULT_SORT,\n      currentHits: [],\n      showAll: 0\n    };\n    this.deleteBoard = this.deleteBoard.bind(this);\n    this.editBoard = this.editBoard.bind(this);\n    this.viewBoard = this.viewBoard.bind(this);\n  }\n\n  componentDidMount() {\n    hasSession();\n    if (this.props.userSession.isLoggedIn) {\n      //this.props.loadBoards(this.props.userSession, { orderBy : DEFAULT_SORT , wheres : {user_id : this.props.userSession.user.id }, withs : relations.user_board} );\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearBoards();\n  }\n\n  deleteBoard(id) {\n    confirmAlert({\n      title: \"Confirm To Delete\",\n      message: \"Are you sure you want to delete this userSession?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.props.deleteBoard(this.props.userSession, id);\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  editBoard(boardId) {\n    this.props.history.push(\"/board/edit/\" + boardId);\n  }\n\n  boardCreated = (id) => {\n    this.props.clearCreatedBoard();\n    this.viewBoard(id);\n  };\n\n  viewBoard(boardId) {\n    this.props.history.push(\"/board/\" + boardId);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    if (e) e.preventDefault();\n    this.setState({ show: false });\n  };\n\n  onSortUpdated = (sortOrder)=>{\n    let sort = sortOrder.replace('user_boards_', '');\n    if(sort === 'user_boards') sort= 'id_desc';\n    this.setState({ selectedSortOrder: sort });\n  }\n\n  sortBoards = (e) => {\n    if (e.nextValue) {\n      this.props.loadBoards(this.props.userSession, {\n        orderBy: e.nextValue,\n        wheres: { user_id: this.props.userSession.user.id },\n        withs: relations.user_board,\n      });\n      this.setState({ selectedSortOrder: e.nextValue });\n    }\n  };\n\n\n  searchResultHandler = (e) => {\n    var isNew = JSON.stringify(e) !== JSON.stringify(this.state.currentHits);\n    if (e.length && isNew) {\n      this.props.loadBoards(this.props.userSession, {\n        orderBy: this.state.selectedSortOrder,\n        wheres: { in: e.join(\",\") },\n        withs: relations.user_board,\n        page: this.state.currentPage,\n        limit: DEFAULT_SHOW,\n      });\n      this.setState({ currentHits: e });\n    }\n  };\n\n  render() {\n    const { boards } = this.props;\n    return (\n      <MainContainer>\n        <InstantSearch\n          key=\"is2\"\n          indexName=\"user_boards\"\n          searchClient={searchClient}\n        >\n          <Index indexName=\"user_boards\">\n            <div className=\"row\">\n              <div className=\"container card card-lg mx-auto\">\n                <div className=\"card-title\">\n                  <h2>\n                    Boards\n                    <button\n                      onClick={this.showModal}\n                      className=\"btn btn-sm btn-outline-secondary float-right\"\n                    >\n                      Create New Board\n                    </button>\n                  </h2>\n                </div>\n                <div className=\"card-text\">\n                  <div className=\"container\">\n                    <div className=\"row col-12\">\n                      <div className=\"col-2\">\n                        <SortBy\n                            defaultRefinement=\"user_boards_id_desc\"\n                            items={[\n                                { value: \"user_boards_id_desc\", label: \"Newest To Oldest\" },\n                                { value: \"user_boards\", label: \"Oldest To Newest\" },\n                                { value: \"user_boards_rating_desc\", label: \"Best To Worst\" },\n                                { value: \"user_boards_rating_asc\", label: \"Worst To Best\" }\n                            ]}\n                            onSortUpdated={this.onSortUpdated}\n                            />\n                      </div>\n                      <div className=\"col-10\">\n                        <span className=\"float-right\">\n                          <Pagination />\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <ClearRefinements />\n                      </div>\n                      <div className=\"col-9\">\n                        <CurrentRefinements />\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <div className=\"filter-widgets\" id=\"sessions\">\n                          <Facets\n                            onSelect={this.searchResultHandler}\n                            showAll={this.state.showAll}\n                            key=\"sr2\"\n                            hitsPerPage={DEFAULT_SHOW}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-7\">\n                        <div className=\"row col-12\">\n                          {this.props.boards &&\n                            this.props.boards.map((board) => (\n                              <div\n                                key={board.id}\n                                className=\"col-md-12 col-sm-12\"\n                              >\n                                <BoardCard\n                                  board={board}\n                                  deleteBoard={this.deleteBoard}\n                                  viewBoard={this.boardCreated}\n                                  editBoard={this.editBoard}\n                                />\n                              </div>\n                            ))}\n                        </div>\n                      </div>\n                      <div className=\"col-2\">\n                        <div\n                          className=\"col-12 filter-widgets\"\n                          id=\"sessions\"\n                        ></div>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-6\"></div>\n                      <div className=\"col-6\">\n                        <span className=\"float-right\">\n                          <Pagination />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Index>\n        </InstantSearch>\n        <Modal show={this.state.show} handleClose={(e) => this.hideModal(e)}>\n          <CreateUserBoard\n            onSuccess={(e) => this.hideModal(e)}\n            onSubmissionComplete={this.viewBoard}\n            close={this.hideModal}\n          />\n        </Modal>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex);\n","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import \"./Board.css\";\n\nimport _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FormCard } from \"./../layout/FormCard\";\nimport { Form } from \"react-advanced-form\";\nimport { RIEInput, RIETextArea } from \"@attently/riek\";\n\nimport SessionCard from \"./../session/SessionCard\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport StarBar from \"./../layout/StarBar\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\n\nimport ImageUploader from \"react-images-upload\";\nimport ImageGallery from \"react-image-gallery\";\nimport TypeAheadInput from \"./../form/TypeAheadInput\";\nimport { sizes } from \"./data/board_sizes\";\nimport InlineEdit, { InputType } from \"riec\";\n\nimport { loadBoards } from \"./../../actions/board\";\nimport { loadShapers } from \"./../../actions/shaper\";\nimport { loadUserSessions } from \"./../../actions/user_session\";\nimport {\n  loadUserBoard,\n  updateUserBoard,\n  loadUserBoardImages,\n  addUserBoardImages,\n  deleteUserBoardImage,\n} from \"./../../actions/user_board\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    board: state.user_boards.selected,\n    boards: state.boards.data,\n    shapers: state.shapers.data,\n    images: state.user_board_images,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n    loadSessions: (session, params) =>\n      dispatch(loadUserSessions(session, params)),\n    loadShapers: (session, params) => dispatch(loadShapers(session, params)),\n    loadBoards: (session, params) => dispatch(loadBoards(session, params)),\n    editUserBoard: (session, params) =>\n      dispatch(updateUserBoard(session, params)),\n    loadBoardImages: (session, params) =>\n      dispatch(loadUserBoardImages(session, params)),\n    addImages: (session, params) =>\n      dispatch(addUserBoardImages(session, params)),\n    deleteBoardImage: (session, id) =>\n      dispatch(deleteUserBoardImage(session, id)),\n  };\n};\n\nconst relations = {\n  user_session: [\"Location\", \"SessionImage\"],\n  selected_board: [\n    \"Board.Manufacturer\",\n    \"Session.SessionImage\",\n    \"Session.UserBoard\",\n  ],\n  shapers: [\"Board\"],\n  boards: [\"Manufacturer\"],\n};\n\nclass BoardView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: [],\n      board_id: \"\",\n      manufacturer_id: \"\",\n      uploaderInstance: 1,\n      imageIndex: 0,\n      modelPlaceholder: null,\n      boardSizeOptions: this.prepBoardSizeOptions(sizes),\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      this.props.loadBoard(this.props.session, {\n        id: this.props.match.params.id,\n        withs: relations.selected_board,\n      });\n      this.props.loadSessions(this.props.session, {\n        wheres: { board_id: this.props.match.params.id },\n        withs: relations.user_session,\n      });\n      this.props.loadBoards(this.props.session, {\n        limit: 1000,\n        withs: relations.boards,\n      });\n      this.props.loadShapers(this.props.session, { withs: relations.shapers });\n      this.props.loadBoardImages(this.props.session, {\n        wheres: { user_board_id: this.props.match.params.id },\n      });\n    } else this.props.history.push(\"/board\");\n  }\n\n  prepBoardSizeOptions = (sizes) => {\n    const filteredSizes = [];\n    sizes.forEach((size) => filteredSizes.push({ id: size }));\n    return filteredSizes;\n  };\n\n  onTypeAheadSelected = (propertyName, newValue) => {\n    const data = [];\n    data[propertyName] = newValue;\n    //here we have to make sure to clear out the model if not belong to shaper\n    if (propertyName === \"manufacturer_id\") {\n      const boardId = !Number.isInteger(this.state.board_id)\n        ? this.props.board.id\n        : this.state.board_id;\n      const board = this.props.boards.find((board) => board.id === boardId);\n      if (board && board.manufacturer_id !== newValue) {\n        data[\"board_id\"] = \"\";\n        data[\"modelPlaceholder\"] = \"Choose A Board\";\n      }\n    }\n    this.setState({\n      ...data,\n    });\n  };\n\n  getShaperSuggestions = (value, reason) => {\n    //if its empty or just focused let's show everything\n    if (!value || reason === \"type_ahead_focused\") return this.props.shapers;\n\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0\n      ? []\n      : this.props.shapers.filter(\n          (entity) =>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n  };\n\n  getBoardSuggestions = (value, reason) => {\n    //if its empty or just focused let's show everything\n    if (!value || reason === \"type_ahead_focused\") {\n      const shaperId =\n        this.state.manufacturer_id === \"\"\n          ? this.props.board.Board.manufacturer_id\n          : this.state.manufacturer_id;\n      return this.props.boards.filter(\n        (entity) => entity.manufacturer_id === shaperId\n      );\n    }\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0\n      ? []\n      : this.props.boards.filter(\n          (entity) =>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue &&\n            entity.manufacturer_id === this.state.manufacturer_id\n        );\n  };\n\n  submitUpdate = (data) => {\n    this.props.editUserBoard(this.props.session, {\n      id: this.props.match.params.id,\n      data: data,\n    });\n    this.setState(data);\n  };\n\n  returnToIndex = (e) => {\n    this.props.history.length > 1\n      ? this.props.history.goBack()\n      : this.props.history.push(\"/board\");\n  };\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    if (!pictureFiles.length) return;\n    const formData = UserBoardRequests.createFormRequest({\n      user_board_id: this.props.board.id,\n      user_id: this.props.session.user.id,\n    });\n    pictureFiles.forEach((file, i) => {\n      formData.append(\"photo\", file);\n    });\n    this.props.addImages(this.props.session, { data: formData });\n    this.setState({ uploaderInstance: this.state.uploaderInstance + 1 });\n  }\n\n  onImageLoad = (e) => {\n    this.setState({ selectedImage: this.props.images[0] });\n  };\n\n  onImageSelected = (e) => {\n    this.setState({ selectedImage: this.props.images[e], imageIndex: e });\n  };\n\n  deleteImage = (e) => {\n    new Promise((resolve, reject) => {\n      resolve(\n        this.props.deleteBoardImage(\n          this.props.session,\n          this.state.selectedImage.id\n        )\n      );\n    }).then((e) => {\n      const newIndex =\n        this.state.imageIndex === 0 ? 0 : this.state.imageIndex - 1;\n      this.setState({\n        imageIndex: newIndex,\n        selectedImage: this.props.images[newIndex],\n      });\n    });\n  };\n\n  renderLeftNav() {\n    return (\n      <button className=\"image-gallery-custom-left-nav btn btn-primary\">\n        hello\n      </button>\n    );\n  }\n\n  render() {\n    const { board } = this.props;\n    const modelPlaceholder = this.state.modelPlaceholder\n      ? this.state.modelPlaceholder\n      : board.Board\n      ? board.Board.model\n      : \"Choose A Model\";\n    return (\n      <MainContainer>\n        <FormCard returnToIndex={this.returnToIndex}>\n          <Form>\n            <div className=\"row col-md-12 container\">\n              <h2 className=\"details col-md-12\">\n                <RIEInput\n                  required={false}\n                  value={board.name || \"\"}\n                  s\n                  defaultValue={board.name}\n                  change={this.submitUpdate}\n                  propName=\"name\"\n                />\n              </h2>\n              <div className=\"preview col-md-6\">\n                <div className=\"clearfix\">\n                  <ImageUploader\n                    key={this.state.uploaderInstance}\n                    withIcon={false}\n                    buttonText=\"Add Images!\"\n                    onChange={this.onDrop}\n                    imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n                    maxFileSize={5242880}\n                    withPreview={false}\n                    withLabel={false}\n                    buttonClassName=\"btn btn-link\"\n                  />\n                </div>\n                <div>\n                  <ImageGallery\n                    items={this.props.images}\n                    showBullets={true}\n                    showIndex={true}\n                    startIndex={this.state.imageIndex}\n                    onSlide={this.onImageSelected}\n                    showNav={false}\n                    //renderCustomControls={this.renderLeftNav}\n                    onImageLoad={this.onImageLoad}\n                  />\n                </div>\n              </div>\n              <div className=\"details col-md-6\">\n                <div className=\"detail-line\">\n                  <StarBar\n                    stars={board.rating}\n                    onClick={this.submitUpdate}\n                    size=\"1x\"\n                  />\n                </div>\n                <div className=\"detail-line\">\n                  <strong>Size:</strong>\n                  &nbsp;\n                  <InlineEdit\n                    type={InputType.Select}\n                    value={board.size || \"Select A Size\"}\n                    onChange={(data) => {\n                      this.submitUpdate({ size: data });\n                    }}\n                    options={this.state.boardSizeOptions}\n                    valueKey=\"id\"\n                    labelKey=\"id\"\n                  />\n                </div>\n                <div className=\"detail-line\">\n                  <div>\n                    <strong>Shaper/Company:</strong>\n                  </div>\n                  <TypeAheadInput\n                    entity={this.props.shapers}\n                    name=\"manufacturer_id\"\n                    keyName=\"name\"\n                    className=\"form-control\"\n                    placeholder={\n                      board.Board && board.Board.Manufacturer\n                        ? board.Board.Manufacturer.name\n                        : \"Choose A Shaper\"\n                    }\n                    value={this.state.manufacturer_id}\n                    setValue={this.onTypeAheadSelected}\n                    getSuggestions={this.getShaperSuggestions}\n                    display={true}\n                  />\n                </div>\n                <div className=\"detail-line\">\n                  <div>\n                    <strong>Model:</strong>\n                  </div>\n                  <TypeAheadInput\n                    entity={this.props.boards}\n                    name=\"board_id\"\n                    keyName=\"model\"\n                    className=\"form-control\"\n                    placeholder={modelPlaceholder}\n                    value={this.state.board_id}\n                    setValue={this.onTypeAheadSelected}\n                    getSuggestions={this.getBoardSuggestions}\n                    display={true}\n                  />\n                </div>\n                <div className=\"detail-line\">\n                  <div>\n                    <strong>Notes:</strong>\n                  </div>\n                  <RIETextArea\n                    value={board.notes || \"You have no notes for this session\"}\n                    defaultValue={board.notes}\n                    className=\"form-control text-area\"\n                    change={this.submitUpdate}\n                    propName=\"notes\"\n                    validate={_.isString}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"container\">\n              <div className=\"row col-12\" style={{ marginTop: \"1em\" }}>\n                <h5>Used In Sessions...</h5>\n              </div>\n              <div className=\"row col-12\">\n                {board.Sessions &&\n                  board.Sessions.reduce((mappedArray, session, index) => {\n                    if (index < 3) {\n                      mappedArray.push(\n                        <div className=\"col-md-4\" key={index}>\n                          <SessionCard session={session} key={session.id} />\n                        </div>\n                      );\n                    }\n                    return mappedArray;\n                  }, [])}\n                {(!board.Sessions || board.Sessions.length === 0) && (\n                  <div className=\"col-12\">\n                    <h3>No Sessions found at the moment</h3>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Form>\n        </FormCard>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView);\n","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\n\nimport SessionView from './components/session/View';\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport BoardView from './components/board/View';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, user : state.user }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session} username={this.props.user.first_name} />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    key : process.env.REACT_APP_WORLD_WEATHER_KEY\n}","require('dotenv').config();\nmodule.exports = {\n    api_key : process.env.REACT_APP_FACEBOOK_APP_ID\n}"],"sourceRoot":""}