{"version":3,"sources":["config/cognito.js","requests/BaseRequest.js","requests/UserRequests.js","actions/user.js","actions/types.js","lib/utils/token_storage.js","lib/utils/cognito.js","lib/utils/session.js","reducers/session.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/stormglass.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","requests/UserBoardRequests.js","requests/SessionRequests.js","actions/user_session.js","actions/user_board.js","components/user/ProfileCard.js","lib/utils/geolocator.js","lib/utils/surfline_alg_geo.js","lib/utils/cache.js","components/reports/surfline/NearestSpots.js","components/reports/stormglass/helpers/session.js","components/reports/stormglass/Report.js","actions/stormglass.js","components/layout/StarBar.js","components/session/SessionCard.js","components/session/LatestSessions.js","components/board/BoardCard.js","components/board/NewestBoards.js","components/user/Dashboard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/layout/Modal.js","components/session/SessionIndex.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","requests/ManufacturerRequests.js","actions/shaper.js","requests/BoardRequests.js","actions/board.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/board/forms/BoardPicker.js","components/session/Conditions.js","components/session/View.js","components/board/BoardIndex.js","components/board/data/board_sizes.js","components/board/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/google.js","config/fb.js","config/elastic.js"],"names":["require","config","cognitoConfig","apiUrl","process","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","querystring","BaseRequest","session","REQUEST_TYPE","getHost","apiConfig","host","port","getEndpoint","endpoint","get","wheres","withs","limit","page","label","orderBy","onSuccess","onFailure","e","apiAction","url","getWhereString","getWithString","getlabel","getOne","id","create","data","hdrs","headers","method","delete","update","withString","forEach","element","slice","length","stringify","error","console","log","type","accessToken","jwt","headersOverride","payload","this","createFormRequest","formData","FormData","Object","entries","key","value","append","UserRequests","updateProfileImage","args","getAverages","UserLoaded","loadUser","dispatch","getState","params","TokenStorage","_service","getService","setToken","tokenObj","localStorage","setItem","access_token","refresh_token","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","axios","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","then","getCognitoSession","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","email","given_name","family_name","formatSessionObject","user","userName","jwtToken","groups","isAdmin","Array","indexOf","expiration","exp","isLoggedIn","refresh","store","clearSession","signOut","JSON","hasSession","parse","expTime","moment","unix","valueOf","current_time","updateTime","subtract","format","catch","existingSession","initialState","state","action","assign","user_board","selected","loaded","created","user_boards","concat","filteredBoards","filter","board","parseInt","user_session","user_sessions","filteredSessions","item","averages","newState","profile_img","count","authorized","api","boards","s3Conf","original","thumbnail","session_images","prepImages","setImages","img","images","formattedImages","push","name","shapers","stormglass","combineReducers","user_board_images","apiMiddleware","next","dataOrParams","includes","defaults","baseURL","common","interceptors","response","use","originalRequest","status","_retry","res","api401","apiStart","request","apiError","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","compose","createStore","rootReducer","applyMiddleware","thunk","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","username","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","history","Login","hash","search","MainContainer","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","uname","map","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","post","submitFail","errorMessage","role","EditUser","put","setValues","match","UserBoardRequests","getImages","createImages","deleteImage","SessionRequests","UserSessionsLoaded","loadUserSessions","UserBoardsLoaded","UserBoardsCleared","loadUserBoard","UserBoardLoaded","loadUserBoards","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","loadUserAverages","pictureFiles","pictureDataURLs","user_id","file","i","updateImage","image","rel","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","createdAt","Math","round","aggregations","total_sessions","session_rating","aria-valuenow","aria-valuemin","aria-valuemax","UserImageUpdated","updateUserImage","UserAveragesLoaded","geolocator","language","google","version","googleConfig","api_key","locator","defaultOptions","enableHighAccuracy","timeout","maximumWait","maximumAge","desiredAccuracy","fallbackToIP","addressLookup","algoliasearch","responsesCache","createInMemoryCache","requestsCache","serializable","initIndex","getSpots","lat","lon","aroundLatLng","aroundRadius","ttl","expiry","Date","getTime","itemStr","NearestSpots","spots","cachedHits","cache","locate","coords","latitude","longitude","hits","el","getSessionData","lng","currentTime","_geoloc","fetch","json","jsonData","hours","getHours","obj","water_temperature","waterTemperature","sg","toFixed","swell_height","swellHeight","noaa","swell_period","swellPeriod","wave_height","waveHeight","wave_period","wavePeriod","pressure","wind_speed","windSpeed","Report","sgLoaded","stormglassLoaded","StormGlassLoaded","StarBar","content","starClassname","static","disabledClassname","rating","stars","faStar","withRouter","SessionImages","isOwner","textAlign","marginTop","editSession","deleteSession","calendar","UserBoard","Location","vicinity","LatestSessions","sessions","reduce","mappedArray","UserBoardImages","editBoard","deleteBoard","Board","model","NewestBoards","UserDashboard","loadBoards","loadSessions","UserSessionRequests","locations","UserLocations","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","geometry","d","handleNoResult","handleStatusUpdate","onBlur","locRender","prediction","types","description","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","autoComplete","wrapperClass","display","libraries","googleMaps","autocompletionRequest","input","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","createField","fieldPresets","matches","generic","missing","rule","SessionForm","propertyName","newValue","defaultName","show","pictures","conditions","clearBoards","serialized","fields","form","rules","messages","initialValue","float","Create","createSession","onSubmissionComplete","prevProps","prevState","snapshot","noUpdate","clearCreatedSession","close","UserSessionCreated","createUserSession","Modal","handleClose","showHideClassName","relations","SessionIndex","showModal","hideModal","onSortUpdated","prevQuery","nextQuery","sortString","order","selectedSortOrder","elasticResultHandler","ids","in","clearSessions","setScope","scopes","nextValue","is_public","esFilters","showAll","viewSession","sessionId","app","elasticConfig","sessions_index","credentials","checked","componentId","dataField","innerClass","react","and","defaultQuery","query","bool","should","onData","onQueryChange","renderResultStats","stats","numberOfResults","renderNoResults","pagination","infiniteScroll","sortOptions","sortBy","paginationAt","UserSessionDeleted","deleteUserSession","TypeAheadInput","event","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","shouldRenderSuggestions","onFocus","maxHeight","overflow","ManufacturerRequests","loadShapers","ShapersLoaded","BoardRequests","BoardsLoaded","UserBoardForm","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","CreateUserBoard","createUserBoard","UserBoardCreated","clearCreatedBoard","BoardPicker","select","selectOptions","defaultImage","selectedBoard","current_session","loadBoard","board_created","boardImage","InputType","Select","options","valueKey","labelKey","editClass","submitUpdate","Conditions","SessionDatum","SessionView","setSelectedBoard","boardOptions","goBack","editUserSession","onLocationChange","onPrivacyChange","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","getForecast","results","colors","depth","Infinity","UserSessionRequest","loadSession","loadSessionImages","session_id","addImages","appId","fbConfig","change","propName","editProps","position","top","zIndex","left","withLabel","buttonClassName","items","showBullets","showIndex","startIndex","onSlide","thumbnailPosition","tabs","showTimeSelect","dateFormat","placeholderText","onLocationBlur","disable","notes","validate","_","isString","UserSessionLoaded","loadUserSession","UserSessionUpdated","updateUserSession","UserSessionImagesLoaded","loadUserSessionImages","UserSessionImagesCreated","addUserSessionImages","UserSessionImageDeleted","deleteUserSessionImage","BoardIndex","boardCreated","viewBoard","userSession","filters","mlVal","boardId","user_boards_index","button","onError","or","UserBoardDeleted","deleteUserBoard","sizes","selected_board","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","isDisabled","loadBoardImages","user_board_id","showNav","Manufacturer","Sessions","UserBoardUpdated","updateUserBoard","UserBoardImagesLoaded","loadUserBoardImages","UserBoardImagesCreated","addUserBoardImages","UserBoardImageDeleted","deleteUserBoardImage","App","path","exact","CreateSession","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","REACT_APP_GOOGLE_API_KEY"],"mappings":"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","file":"static/js/main.1957efd5.chunk.js","sourcesContent":["\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"email\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n    /*\n    create a label to be applied to the redux action for debugging\n    */\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    /*\n    Get an array of objects based on given variables\n    */\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy + `&page=` + page,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n    /*\n    get a single object based on id \n    */\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n    /*\n    Create a new object\n    */\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n    /*\n    delete existing object\n    */\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n    /*\n    Update existing object\n    */\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n    }\n    /*\n    create string to ask for relations\n    */\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n    /*\n    create string with standard `where` key values\n    */\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n    /*\n    on fail lets send a redux action telling the app of error\n    */\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n    }\n    /*\n    helper method to format form request\n    */\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n    /*\n    wrapper for all requests\n    this will send an api action that will be sniffed in the middleware and handled by\n    ./frontend/src/middleware/api.js\n    */\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = this.session.jwt,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n\n    getAverages = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `/average?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n}\nexport default UserRequests;","import { USER_LOADED, USER_LOGGED_IN, USER_IMAGE_UPDATED, USER_AVERAGES_LOADED} from \"./types\";\nimport UserRequests from './../requests/UserRequests';\n\n\nexport const UserLoaded = data => ({\n    type: USER_LOADED,\n    payload: data\n  });\n\n  export const UserAveragesLoaded = data => ({\n    type: USER_AVERAGES_LOADED,\n    payload: data\n  });\n\n\n  export const UserLoggedIn = data => ({\n    type: USER_LOGGED_IN,\n    payload: data\n  });\n\n  export const UserImageUpdated = data => ({\n    type: USER_IMAGE_UPDATED,\n    payload: data\n  });\n\n\n  export const logInUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).get(params)\n      )\n    }\n  }\n\n\n  export const loadUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserAverages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserAveragesLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getAverages(params)\n      )\n    }\n  }\n\n  export const updateUserImage = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserImageUpdated(data)} }}\n      dispatch(\n        new UserRequests(session).updateProfileImage(params)\n      )\n    }\n  }","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\nexport const SET_USER = \"SET_USER\";\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\n\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\nexport const USER_BOARD_DELETED=\"USER_BOARD_DELETED\";\nexport const USER_BOARD_IMAGES_LOADED=\"USER_BOARD_IMAGES_LOADED\";\nexport const USER_BOARD_IMAGES_CREATED=\"USER_BOARD_IMAGES_CREATED\";\nexport const USER_BOARD_IMAGE_DELETED = \"USER_BOARD_IMAGE_DELETED\";\nexport const USER_BOARDS_CLEARED = \"USER_BOARDS_CLEARED\"\n\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CREATED=\"USER_SESSION_CREATED\";\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"\nexport const USER_SESSION_DELETED=\"USER_SESSION_DELETED\"\nexport const USER_SESSION_LOADED=\"USER_SESSION_LOADED\";\nexport const USER_SESSION_IMAGES_LOADED=\"USER_SESSION_IMAGES_LOADED\";\nexport const USER_SESSION_IMAGES_CREATED=\"USER_SESSION_IMAGES_CREATED\";\nexport const USER_SESSION_IMAGE_DELETED = \"USER_SESSION_IMAGE_DELETED\";\nexport const USER_SESSION_CREATED_CLEARED=\"USER_SESSION_CREATED_CLEARED\";\nexport const USER_SESSIONS_CLEARED=\"USER_SESSIONS_CLEARED\";\n\nexport const SHAPERS_LOADED=\"SHAPERS_LOADED\";\nexport const BOARDS_LOADED=\"BOARDS_LOADED\";\n\n\nexport const USER_BOARD_CREATED_CLEARED=\"USER_BOARD_CREATED_CLEARED\";\n\nexport const USER_LOGGED_IN=\"USER_LOGGED_IN\";\n\nexport const USER_LOADED=\"USER_LOADED\";\n\nexport const USER_IMAGE_UPDATED=\"USER_IMAGE_UPDATED\";\n\nexport const STORMGLASS_LOADED=\"STORMGLASS_LOADED\";\n\nexport const USER_AVERAGES_LOADED = \"USER_AVERAGES_LOADED\";\n\n\n","const TokenStorage = (function(){\n    var _service;\n    function _getService() {\n        if(!_service) {\n          _service = this;\n          return _service\n      }\n      return _service\n    }\n    function _setToken(tokenObj) {\n      localStorage.setItem('access_token', tokenObj.access_token);\n      localStorage.setItem('refresh_token', tokenObj.refresh_token);\n    }\n    function _getAccessToken() {\n      return localStorage.getItem('access_token');\n    }\n    function _getRefreshToken() {\n      return localStorage.getItem('refresh_token');\n    }\n    function _clearToken() {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n   return {\n      getService : _getService,\n      setToken : _setToken,\n      getAccessToken : _getAccessToken,\n      getRefreshToken : _getRefreshToken,\n      clearToken : _clearToken\n    }\n   })();\n   export default TokenStorage;\n   ","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nimport {logInUser, loadUser} from './../../actions/user';\nimport store from './../../store/index'\nimport TokenStorage from './../utils/token_storage';\nconst axios = require('axios');\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession(dispatch)) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      axios.get( apiConfig.host + apiConfig.port + `/api/user/firstOrNew?username=` + result.idToken.payload['cognito:username'] \n      + '&email=' + result.idToken.payload.email + '&first_name=' + result.idToken.payload.given_name + '&last_name=' + result.idToken.payload.family_name\n        ).then(data => {\n        const session = formatSessionObject(data.data.id, result);\n        TokenStorage.setToken({access_token : session.jwt, refresh_token : null});\n        session.user = {...session.user, ...data.data[0]};\n        dispatch(loadUser(session, {wheres : {email : result.idToken.payload.email}}));\n        resolve(session);\n      });     \n    })\n  })\n}\n\n\nconst formatSessionObject = (id, result) =>\n{\n  const session = {\n    user: {\n      id : id,\n      userName: result.idToken.payload['cognito:username'],\n      email: result.idToken.payload.email\n    },\n    jwt : result.accessToken.jwtToken,\n    groups : result.idToken.payload['cognito:groups'],\n    isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n    expiration : result.accessToken.payload.exp,\n    isLoggedIn : true\n  }\n  session.user = {...session.user};\n  return session;\n}\n\nexport const refresh = (id = null) =>\n{\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth();\n    auth.userhandler = {\n      onSuccess: function (result) {\n        let session = formatSessionObject(store.getState().session.user.id, result);\n        TokenStorage.setToken({access_token : session.jwt, refresh_token : null});\n        setSessionCookie(session);\n        store.dispatch({ type: SET_SESSION, session });\n        resolve(session)\n      },\n      onFailure: function (err) {\n        console.log('cognito refresh error', err)\n        reject(err)\n      }\n    }\n    auth.getSession();\n  });    \n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import Cookie from \"js-cookie\";\nimport moment from \"moment\";\nimport { refresh } from './cognito'\n\nexport function setSessionCookie(session)\n{\n  //Cookie.set(\"x-token\", session);\n  localStorage.setItem('x-token', JSON.stringify(session))\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(localStorage.getItem('x-token'))\n    {\n      const session = JSON.parse(localStorage.getItem('x-token'));\n      const expTime = moment.unix(session.expiration).valueOf();\n      const current_time = moment().valueOf();\n      const updateTime =  moment.unix(session.expiration).subtract(5, \"minutes\").valueOf();\n      console.log('token expires @', moment.unix(session.expiration).format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('current time is', moment().format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('update time is', moment.unix(session.expiration).subtract(5, \"minutes\").format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('cookie expues',  current_time, expTime, updateTime);\n      if(current_time > updateTime){\n        refresh().then(data=> {return true})\n        .catch(e=>clearSession())\n        return session;\n      }\n      if ( expTime > current_time) {\n        return session;\n      }\n      else {\n        refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(localStorage.getItem('x-token'))\n  {\n    localStorage.removeItem(\"x-token\")\n  }\nreturn false;\n}\n\nexport function update()\n{\n  if(!hasSession())\n  {\n    refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n  }\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED, USER_BOARD_DELETED, USER_BOARDS_CLEARED, USER_BOARD_CREATED_CLEARED } from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  loaded : false,\n  created : false\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload, loaded : true}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case USER_BOARD_DELETED :\n      const filteredBoards  =  state.data.filter(board => { return board.id !== parseInt(action.payload)});\n      newState = {...state, ...{data : filteredBoards}}\n      return newState;\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    case USER_BOARDS_CLEARED :\n      return initialState;\n    case USER_BOARD_CREATED_CLEARED :\n        newState = {...state, ...{created : false}}\n        return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {USER_SESSION_CLEARED,\n  USER_SESSIONS_CLEARED, \n  USER_SESSION_CREATED_CLEARED,  \n  USER_SESSION_CREATED, \n  SET_USER_SESSIONS, \n  SESSION_CREATED, \n  DELETE_USER_SESSION, \n  USER_SESSION_UPDATED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  created : false\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_LOADED:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_SESSION_DELETED :\n        const filteredSessions  =  state.data.filter(session => { return session.id !== parseInt(action.payload)});\n        newState = {...state, ...{data : filteredSessions}}\n        return newState;\n    case USER_SESSION_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    case USER_SESSION_CREATED_CLEARED :\n      newState = {...state, ...{created : false}}\n      return newState;\n    case USER_SESSIONS_CLEARED :\n      return initialState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import {USER_LOADED, USER_IMAGE_UPDATED, USER_AVERAGES_LOADED} from './../actions/types';\n\n\nconst initialState = {data : {}, averages : {}};\nconst user = (state = initialState, action) => {\n  let newState = state;\n  switch (action.type) {\n    case USER_LOADED:\n      return {...newState, ...{data :  action.payload}}\n    case USER_IMAGE_UPDATED:\n      return {...newState, ...{data : {profile_img : action.payload.data}}}\n    case USER_AVERAGES_LOADED :\n      console.log('user_averages_loaded')\n      return {...newState, ...{averages : {...action.payload}}}\n    default:\n      return state\n  }\n}\nexport default user","const initialState = { count : 0, authorized : true};\nconst api = (state = initialState, action) => {\n  switch (action.type) {\n    case 'API_START':\n        return  {...state, ...{count : state.count + 1}};\n    case 'API_END':\n        return  {...state, ...{count : state.count - 1}};\n    case 'API_401':\n        return  {...state, ...{authorized : false}};\n    default :\n        return state;\n}}\nexport default api;","import {BOARDS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case BOARDS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\nimport {USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"/img/session_default_lg.png\",\n        thumbnail: \"/img/session_default_lg.png\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_IMAGES_LOADED:\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_SESSION_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_SESSION_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\nimport {USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"/img/board_default_lg.png\",\n        thumbnail: \"/img/board_default_lg.png\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_BOARD_IMAGES_LOADED :\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_BOARD_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_BOARD_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import {SHAPERS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case SHAPERS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default shapers;","import {STORMGLASS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst stormglass = (state = initialState, action) => {\n  switch (action.type) {\n    case STORMGLASS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default stormglass;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\nimport stormglass from './stormglass';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  stormglass,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd, api401 } from \"./../actions/api\";\nimport apiConfig from \"./../config/api\";\nimport { refresh } from './../lib/utils/cognito';\nimport TokenStorage from './../lib/utils/token_storage';\n\nconst apiMiddleware = ({ dispatch }) => (next) => (action) => {\n  next(action);\n\n  if (action.type !== API) return;\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers,\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${TokenStorage.getAccessToken()}`;\n  axios.interceptors.response.use(\n    response => {\n      return response;\n    },\n    error => {\n      const originalRequest = error.config;\n      if(error.response.status === 401  ){\n      if (!originalRequest._retry) {\n        console.log('trying agaibn', originalRequest)\n        originalRequest._retry = true;\n        return refresh()\n          .then((res) => {\n              TokenStorage.setToken(res.jwt);\n              axios.defaults.headers.common[\"Authorization\"] = `Bearer ${res.jwt}`;\n              return axios(originalRequest);\n          });\n      }else {\n        dispatch(api401('unauthorized'));\n      }\n    }\n      return Promise.reject(error);\n    }\n  );\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data,\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n\nexport const api401 = error => ({\n  type: 'API_401',\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\nimport './css/Nav.css'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"/img/LogoMakr_4GvwRg.png\" alt=\"glazewave\" height=\"150\" width=\"150\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          Dashboard</Link>\n                      }\n \n                {false && props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.username}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (false){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\nimport { s3Conf } from './../../config/s3';\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n\n  componentDidMount () {\n    if (this.props.session.isLoggedIn) {\n      this.props.history.push('/user/dashboard');\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n            <div className=\"container container-home\">\n              <div className=\"row align-items-center my-5\">\n                  <div className=\"col-lg-7\">\n                    <img className=\"img-fluid rounded mb-4 mb-lg-0\" src=\"/img/glazewave_index.png\" alt=\"\" />\n                  </div>\n                  <div className=\"col-lg-5\">\n                    <h1 className=\"font-weight-light\"><img\n\t\t\t\t\t\t\t\t\tclassName=\"align-left\"\n\t\t\t\t\t\t\t\t\tsrc=\"/img/LogoMakr_4GvwRg.png\"\n\t\t\t\t\t\t\t\t\talt=\"glazewave\"\n\t\t\t\t\t\t\t\t/></h1>\n                    <p>Get Stoked. Get Wet. Get Smart. Get Better.</p>\n                   \n                  </div>\n              </div>\n              <div className=\"card index-cta my-5 py-4 text-center bg-primary\">\n                    <p>A Free online tool to track your time getting wet and gain analytics into your performance!</p>\n                    <p><a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a></p>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h3 className=\"card-title\">Track Sessions</h3>\n                          <img src={s3Conf.root + 'site/session_example.png'} />\n                          <p className=\"card-text\">Track and rate your session then use the stats to decide the best board and location for the swell!</p>\n                        </div>\n                        <div className=\"card-footer\">\n                            <a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h3 className=\"card-title\">Store Boards</h3>\n                          <img src={s3Conf.root + 'site/board_example.png'} />\n                          <p className=\"card-text\">Show your quiver off to friends and the public while keeping track of how each performs in different conditions!.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h3 className=\"card-title\">Stow Photos</h3>\n                          <p className=\"card-text\">Create image galleries with your best photos from each session.</p>\n                          <h3 className=\"card-title\">Get Reports</h3>\n                          <p className=\"card-text\">See your local conditions and nearest spots to surf!</p>\n                          <h3 className=\"card-title\">View &amp; Share</h3>\n                          <p className=\"card-text\">Privacy controls let each user share and view boards and sessions!<br /><i>(Only if you choose of course. We'll always take your privacy seriously)</i></p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n/*\n<img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n*/","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/user/dashboard\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={true}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer) ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { USER_SESSION_CREATED, \n  SET_USER_SESSION, \n  SET_USER_SESSIONS, \n  USER_SESSION_UPDATED, \n  USER_SESSION_CLEARED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED, \n  USER_SESSION_IMAGES_LOADED, \n  USER_SESSION_IMAGES_CREATED, \n  USER_SESSION_IMAGE_DELETED,\n  USER_SESSION_CREATED_CLEARED,\n  USER_SESSIONS_CLEARED  } from \"./types\";\nimport SessionRequests from './../requests/SessionRequests';\n\n\nexport const UserSessionImagesLoaded = data => ({\n  type: USER_SESSION_IMAGES_LOADED,\n  payload: data\n});\n\nexport const UserSessionImagesCreated = data => ({\n  type: USER_SESSION_IMAGES_CREATED,\n  payload: data\n});\n\nexport const UserSessionCreatedCleared = () => ({\n  type: USER_SESSION_CREATED_CLEARED\n});\n\nexport const UserSessionsCleared = () => ({\n  type: USER_SESSIONS_CLEARED\n});\n\nconst UserSessionImageDeleted = data=> (\n  {\n    type: USER_SESSION_IMAGE_DELETED,\n    payload: data\n  }\n)\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n\nexport const UserSessionCreated = data => ({\n  type: USER_SESSION_CREATED,\n  payload: data\n});\n\n  export const UserSessionLoaded = data => ({\n    type: USER_SESSION_LOADED,\n    payload: data\n  });\n\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  const UserSessionDeleted = data=> (\n    {\n      type: USER_SESSION_DELETED,\n      payload: data\n    }\n  )\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n\nexport const createUserSession= ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).create(params)\n    )\n  }\n}\n\nexport const loadUserSessions = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionsLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).get(params)\n    )\n  }\n}\n\nexport const loadUserSession = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getOne(params)\n    )\n  }\n}\n\n\nexport const deleteUserSession = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).delete(params)\n    )\n  }\n}\n\nexport const updateUserSession = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionUpdated(data)} }}\n    dispatch(\n      new SessionRequests(session).update(params)\n    )\n  }\n}\n\nexport const loadUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getImages(params)\n    )\n  }\n}\n\nexport const addUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).createImages(params)\n    )\n  }\n}\n\nexport const deleteUserSessionImage = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionImageDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).deleteImage(params)\n    )\n  }\n}\n","import { USER_BOARDS_CLEARED,  USER_BOARD_CREATED_CLEARED, SET_USER_BOARDS, USER_BOARD_UPDATED, USER_BOARD_DELETED, SET_USER_BOARD, USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED, USER_BOARD_CREATED } from \"./types\";\nimport UserBoardRequests from './../requests/UserBoardRequests';\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardImagesLoaded = data => ({\n    type: USER_BOARD_IMAGES_LOADED,\n    payload: data\n  });\n\n  export const UserBoardsCleared = data => ({\n    type: USER_BOARDS_CLEARED,\n    payload: data\n  });\n\n  export const UserBoardCreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n\n  export const UserBoardImagesCreated = data => ({\n    type: USER_BOARD_IMAGES_CREATED,\n    payload: data\n  });\n\n  export const UserBoardLoaded = data => ({\n    type: SET_USER_BOARD,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n  const UserBoardDeleted = data=> (\n    {\n      type: USER_BOARD_DELETED,\n      payload: data\n    }\n  )\n\n  const UserBoardCreated = data=> (\n    {\n      type: USER_BOARD_CREATED,\n      payload: data\n    }\n  )\n\n  export const UserBoardreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n  \n\n  const UserBoardImageDeleted = data=> (\n    {\n      type: USER_BOARD_IMAGE_DELETED,\n      payload: data\n    }\n  )\n\n  export const createUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).create(params)\n      )\n    }\n  }\n\n\n  export const clearUserBoards = ( )=>\n  {\n    return function(dispatch, getState)\n    {\n      dispatch(\n        UserBoardsCleared(null)\n      )\n    }\n  }\n\n  export const loadUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardsLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).get(params)\n      )\n    }\n  }\n\n  export const deleteUserBoard = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).delete(params)\n      )\n    }\n  }\n\n  export const updateUserBoard = (session, args) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardUpdated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).update(params)\n      )\n    }\n  }\n\n  export const loadUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getImages(params)\n      )\n    }\n  }\n\n  export const addUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).createImages(params)\n      )\n    }\n  }\n\n  export const deleteUserBoardImage = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardImageDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).deleteImage(params)\n      )\n    }\n  }\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\nimport {loadUser, updateUserImage, loadUserAverages} from './../../actions/user';\n\nconst mapStateToProps = state => {\n    return { user : state.user.data, session : state.session, aggregations : state.user.averages }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      //updateImage : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}})),\n      updateImage : (session, params)=>dispatch(updateUserImage(session, params)),\n      loadUser : (session, params)=>dispatch(loadUser(session, params)),\n      loadUserAverages : (session, params)=>dispatch(loadUserAverages(session, params))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(this.props.session, {id : this.props.session.user.id} );\n            this.props.loadUserAverages(this.props.session, {id : this.props.session.user.id} );\n        }\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.updateImage(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n            <div className=\"team-single\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div className=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <div className=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Profile Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 col-md-7\">\n                        <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p className=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div className=\"contact-info-section margin-40px-tb\">\n                                <ul className=\"list-style9 no-margin\">\n                                <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">username:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.username}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"MM-DD-YYYY\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-envelope text-pink\"></i>\n                                                <strong className=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.email}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                             <div className=\"sm-no-margin\">\n                             <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Total Sessions</div>\n                                        <div className=\"col-5 text-right\">{Math.round(this.props.aggregations.total_sessions)}</div>\n                                    </div>\n                                </div>\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Average Session Rating</div>\n                                        <div className=\"col-5 text-right\">{this.props.aggregations.session_rating} out of 10</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : `${this.props.aggregations.session_rating * 10}%`}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard);\n\n/**\n *                             <div className=\"margin-20px-top team-single-icons\">\n                                <ul className=\"no-margin\">\n                                    <li><a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n\n\n                                                                <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong className=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n\n\n\n                                                        <h5 className=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div className=\"sm-no-margin\">\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Positive Behaviors</div>\n                                        <div className=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n */","import googleConfig from './../../config/google';\n\nwindow.geolocator.config({\n    language: \"en\",\n    google: {\n      version: \"3\",\n      key: googleConfig.api_key,\n    },\n  });\n \n  export const locator = window.geolocator;\n  export const defaultOptions = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumWait: 10000, // max wait time for desired accuracy\n    maximumAge: 0, // disable cache\n    desiredAccuracy: 30, // meters\n    fallbackToIP: true, // fallback to IP if Geolocation fails or rejected\n    addressLookup: true, // requires Google API key if true\n  };\n","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n\nconst index = algoliaClient.initIndex('surfline_spots');\n\nconst getSpots = (lat, lon)=>\n{\n    return index.search('', {\n        aroundLatLng: `${lat}, ${lon}`,\n        aroundRadius: 10000 // 1000 km\n      })\n}\n\nexport default getSpots;\n  \n","const setWithExpiry = (key, value, ttl) => {\n    const now = new Date()\n    \n    // `item` is an object which contains the original value\n    // as well as the time when it's supposed to expire\n      const item = {\n          value: value,\n          expiry: now.getTime() + ttl\n      }\n      localStorage.setItem(key, JSON.stringify(item))\n  }\n\n\n const  getWithExpiry = (key) => {\n\tconst itemStr = localStorage.getItem(key)\n\t// if the item doesn't exist, return null\n\tif (!itemStr) {\n\t\treturn null\n\t}\n\tconst item = JSON.parse(itemStr)\n\tconst now = new Date()\n\t// compare the expiry time of the item with the current time\n\tif (now.getTime() > item.expiry) {\n\t\t// If the item is expired, delete the item from storage\n\t\t// and return null\n\t\tlocalStorage.removeItem(key)\n\t\treturn null\n\t}\n\treturn item.value\n}\n\nexport default {\n    setWithExpiry,\n    getWithExpiry\n  }","import './css/NearestSpots.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport ReactTooltip from 'react-tooltip'\nimport Iframe from 'react-iframe'\nimport  cache from './../../../lib/utils/cache';\n\nconst CACHE_KEY = 'nrspt';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n    };\n  };\n\nclass NearestSpots extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        spots : [],\n        selected : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    const setState = this.setState;\n    if (this.props.session.isLoggedIn) \n    {\n      const cachedHits = cache.getWithExpiry(CACHE_KEY);\n      if (cachedHits) {\n        this.setState({ spots: JSON.parse(cachedHits) });\n      }\n      else\n      {\n        locator.locate(defaultOptions , function (err, location) {\n        if (err) return console.log(\"location err\", err);\n        getSpots(location.coords.latitude,location.coords.longitude).then(data=>{\n            setState({spots : data.hits})\n            cache.setWithExpiry(CACHE_KEY, JSON.stringify(data.hits), 36000);\n          })\n        });\n      }\n    }\n  }\n\n\n  render()\n  {    \n    const { spots } =  this.state;\n    return <div className=\"container surfline nearest_spots\">\n        <h6>Nearest Spots</h6>\n        {spots.map(el => (\n        <div className=\"row spot\" key={el.url}>\n            <div className=\"col\">\n              <a href={el.url} target=\"_blank\">{el.name}</a>        \n            </div>\n        </div>\n        ))}\n    </div>\n    }  \n    \n}\n\nexport default connect(mapStateToProps)(NearestSpots);\n\n/**\n * \n  render()\n  {    \n    const { spots } =  this.state;\n    return <div className=\"container surfline nearest_spots\">\n        <h6>Nearest Spots</h6>\n        {spots.map(el => (\n        <div className=\"row spot\" key={el.url}>\n            <div className=\"col\">\n            <div data-tip data-event=\"click\" data-for={el.url} href=\"#\" data-tip=\"http://localhost:3000/user/dashboard\" data-iscapture='true'>{el.name}</div>\n            <ReactTooltip id={el.url}  getContent={(datatip) => { \n                return <Iframe url={datatip} \n                        width=\"450px\"\n                        height=\"450px\"\n                        /> }}\n                        isCapture={true}\n                      />             \n            </div>\n        </div>\n        ))}\n    </div>\n    }  \n */","\nimport getSpots from './../../../../lib/utils/surfline_alg_geo';\nimport apiConfig from './../../../../config/api';\n\nexport const getSessionData = (lat, lng) => {\n    return new Promise(( resolve, reject )=>{\n            const  currentTime = new Date();\n            getSpots(lat, lng).then(data=>{\n                const lat = data.hits[0]._geoloc.lat;\n                const lon = data.hits[0]._geoloc.lon;\n            fetch(`${apiConfig.host + apiConfig.port }/api/sc?lat=${data.hits[0]._geoloc.lat}&lon=${data.hits[0]._geoloc.lon}&name=${data.hits[0].id}`).then((response) => response.json()).then((jsonData) => {\n               const data = jsonData.hours[currentTime.getHours()];\n                const obj = {\n                    water_temperature : ((data.waterTemperature.sg * 9/5) + 32).toFixed(),\n                    swell_height :  (data.swellHeight.noaa * 3.28084).toFixed(1),\n                    swell_period : data.swellPeriod.noaa.toFixed(),\n                    wave_height : (data.waveHeight.noaa * 3.28084).toFixed(1),\n                    wave_period : data.wavePeriod.noaa.toFixed() ,\n                    pressure : (data.pressure.sg * 0.0002953).toFixed(2) * 100 ,\n                    wind_speed : (data.windSpeed.sg * 1.94384 ).toFixed(1),\n                    lat : lat,\n                    lon : lon\n                };\n                resolve(obj)\n            });\n        })\n})}","//import './css/Report.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport {StormGlassLoaded} from './../../../actions/stormglass';\nimport apiConfig from './../../../config/api';\nimport {getSessionData} from './helpers/session';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n      stormglass : state.stormglass\n    };\n  };\n\n  const mapDispachToProps = (dispatch) => {\n    return {\n      stormglassLoaded: (data) => dispatch(StormGlassLoaded(data)),\n    };\n  };\n\nclass Report extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        data : {},\n        location : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if(this.props.stormglass.data.wave_period)\n      {\n        this.setState({data : this.props.stormglass.data});\n      }\n      else {\n        const setState = this.setState;\n        const sgLoaded = this.props.stormglassLoaded;\n        locator.locate(defaultOptions , function (err, location) {\n          if (err) return console.log(\"location err\", err);\n          getSessionData(location.coords.latitude,location.coords.longitude).then(data=>\n            {\n              sgLoaded(data);\n              setState({data :data});\n            })\n          });\n        }\n      }\n  }\n\n\n\n  render()\n  {    \n    return <div className=\"container surfline nearest_spots\">\n          <h6>Local Report</h6>\n          <div className=\"row spot\"><div className=\"col\"> <i>Observations Near {this.state.location}</i></div></div>\n          <div className=\"row spot\" >\n            <div className=\"col\">   \n            <div>Water Temp: {this.state.data.water_temperature}F</div>  \n            <div>Swell Height: {this.state.data.swell_height}ft</div>  \n            <div>Swell Period: {this.state.data.swell_period }s</div>  \n            <div>Wave Height: {this.state.data.wave_height }ft</div>  \n            <div>Wave Period: {this.state.data.wave_period }s</div>  \n            <div>Pressure: {this.state.data.pressure }in</div>  \n            <div>Wind Speed: {this.state.data.wind_speed }k</div>  \n          </div>\n        </div>\n      </div>\n    }  \n    \n}\n\n\nexport default connect(mapStateToProps, mapDispachToProps )(Report);","import { STORMGLASS_LOADED } from \"./types\";\n\nexport const StormGlassLoaded = data => ({\n    type: STORMGLASS_LOADED,\n    payload: data\n  });\n\n\n\n\n\n\n  \n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const starClassname = (props.static && props.static === true) ? 'star-static' : 'star';\n    const disabledClassname = (props.static && props.static === true) ? 'star-disabled-static' : 'star-disabled';\n    const onClick = (rating) =>\n    {\n        if(props.static && props.static === true) return;\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className={disabledClassname} icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className={starClassname} icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className={disabledClassname} icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\" >\n            <div className=\"row\">\n                <div className=\"col-12 session-card-title\" onClick={()=>props.history.push(\"/session/\" + props.session.id)} ><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</button></div>\n                <div className=\"col-4\">\n                <div onClick={()=>props.history.push(\"/session/\" + props.session.id)} >\n                    <img className=\"img-responsive img-thumbnail img-card\" alt={props.session.title}\n                        src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name \n                        : \"/img/session_default_lg.png\" }/>\n                </div>\n                { props.isOwner && \n                    <div style={{textAlign : 'center', marginTop : '0.3em'}}>\n                        { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                        { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer'}}  icon={faTrash} \n                        onClick={(e) => { e.preventDefault();props.deleteSession(props.session.id)}} /> }\n                    </div>\n}\n                </div>\n                <div className=\"col-8\" onClick={()=>props.history.push(\"/session/\" + props.session.id)} >\n                    <div className=\"card-date\" >{moment(props.session.createdAt).calendar()}</div>\n                    <div className=\"card-rating\" ><StarBar stars={props.session.rating} /></div>\n                    <div className=\"capitalize\">{props.session.UserBoard && props.session.UserBoard.name ? props.session.UserBoard.name : \"No Board Selected\"}</div>\n                    <div className=\"capitalize\">{props.session.Location && props.session.Location.name ?  props.session.Location.name  + ' ' + props.session.Location.vicinity : \"No Location Specified\"}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from 'react';\nimport SessionCard from './SessionCard';\nimport { Link } from 'react-router-dom';\n\nexport const LatestSessions = props =>{\n    if(!props.sessions.length){\n        return (\n            <div className=\"alert alert-primary text-center card-newest-resultset card-newest-empty-resultset\">\n                <h5>Latest Sessions</h5>    \n                <div>You haven't created any Sessions Yet.</div>\n                <div>\n                    <Link className=\"btn btn-sm btn-primary\" to={'/session'} >Get Started!</Link>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className=\"alert alert-primary card-newest-resultset\">\n            <h5>Latest Sessions</h5>    \n            {\n            props.sessions && props.sessions.reduce((mappedArray, session, index) => {                           \n                if (index < props.limit) { \n                    mappedArray.push(\n                        <SessionCard session={session} key={session.id} />\n                );\n            }                                                  \n            return mappedArray;\n            }, [])\n            }\n        </div>\n    )\n}\n\n\n","import React from \"react\";\nimport StarBar from \"./../layout/StarBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { s3Conf } from \"./../../config/s3\";\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = (props) => {\n\treturn (\n\t\t<div className=\"container-fluid session-card\" >\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12 board-card-title\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link card-title capitalize\"\n\t\t\t\t\t\tonClick={() => props.history.push(\"/board/\" + props.board.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.board.name}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-4\" onClick={()=>props.history.push(\"/board/\" + props.board.id)}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"img-responsive img-thumbnail img-card\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tprops.board.UserBoardImages && props.board.UserBoardImages.length\n\t\t\t\t\t\t\t\t? s3Conf.root + props.board.UserBoardImages[0].name\n\t\t\t\t\t\t\t\t: \"/img/board_default_lg.png\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-8\">\n\t\t\t\t{ props.isOwner && \n\t\t\t\t\t<div>\n\t\t\t\t\t\t{props.editBoard && (\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\talt=\"edit user\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: \".1em\", cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\ticon={faEdit}\n\t\t\t\t\t\t\t\tonClick={() => props.editBoard(props.board.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{props.deleteBoard && (\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\talt=\"delete user\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: \".5em\", cursor: \"pointer\", color: \"red\" }}\n\t\t\t\t\t\t\t\ticon={faTrash}\n\t\t\t\t\t\t\t\tonClick={() => props.deleteBoard(props.board.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div onClick={()=>props.history.push(\"/board/\" + props.board.id)}>\n\t\t\t\t\t<div className=\"card-rating\">\n\t\t\t\t\t\t<StarBar stars={props.board.rating} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-card-model\">\n\t\t\t\t\t\t{props.board.size} {props.board.Board && props.board.Board.model}\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default withRouter(BoardCard);\n","import React from \"react\";\nimport BoardCard from \"./BoardCard\";\nimport { Link } from 'react-router-dom';\n\nexport const NewestBoards = (props) => {\n  if (!props.boards.length) {\n    return (\n    <div className=\"alert alert-primary text-center card-newest-resultset card-newest-empty-resultset\">\n        <h5>Newest Boards</h5>\n        <div>You haven't added any Boards Yet.</div>\n        <div>\n            <Link className=\"btn btn-sm btn-primary\" to={'/board'} >Get Started!</Link>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"alert alert-primary text-center card-newest-resultset\">\n      <h5>Newest Boards</h5>\n      {\n        props.boards.reduce((mappedArray, board, index) => {\n          if (index < props.limit) {\n            mappedArray.push(<BoardCard board={board} key={board.id} />);\n          }\n          return mappedArray;\n        }, [])}\n    </div>\n  );\n};\n","import \"./css/Dashboard.css\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\nimport UserSessionRequests from \"./../../requests/SessionRequests\";\nimport { UserSessionsLoaded } from \"./../../actions/user_session\";\nimport { UserBoardsLoaded } from \"./../../actions/user_board\";\nimport ProfileCard from \"./ProfileCard\";\nimport NearestSpots from \"./../reports/surfline/NearestSpots\";\nimport Report from \"./../reports/stormglass/Report\";\nimport { LatestSessions } from \"./../session/LatestSessions\";\nimport { NewestBoards } from \"./../board/NewestBoards\";\n\nconst DASHBOARD_LIST_LIMIT = 3;\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tboards: state.user_boards.data,\n\t\tuser_sessions: state.user_sessions.data,\n\t\tlocations: state.user.UserLocations,\n\t};\n};\n\nconst withs = {\n\tuser: [],\n\tboards: [\"Board\", \"UserBoardImage\"],\n\tsessions: [\"UserBoard\", \"SessionImage\", \"Location\"],\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\t// loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n\t\tloadBoards: (request, session) =>\n\t\t\tdispatch(\n\t\t\t\trequest.get({\n\t\t\t\t\twheres: { user_id: session.user.id },\n\t\t\t\t\torderBy: \"created_at_DESC\",\n\t\t\t\t\twiths: withs.boards,\n\t\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\t\treturn UserBoardsLoaded(data);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t),\n\t\tloadSessions: (request, session) =>\n\t\t\tdispatch(\n\t\t\t\trequest.get({\n\t\t\t\t\twheres: { user_id: session.user.id },\n\t\t\t\t\torderBy: \"created_at_DESC\",\n\t\t\t\t\twiths: withs.sessions,\n\t\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\t\treturn UserSessionsLoaded(data);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t),\n\t};\n};\n\nclass UserDashboard extends React.Component {\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\t//this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n\t\t\tthis.props.loadBoards(\n\t\t\t\tnew UserBoardRequests(this.props.session),\n\t\t\t\tthis.props.session\n\t\t\t);\n\t\t\tthis.props.loadSessions(\n\t\t\t\tnew UserSessionRequests(this.props.session),\n\t\t\t\tthis.props.session\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { user_sessions, boards } = this.props;\n\t\treturn (\n\t\t\t<MainContainer>\n\t\t\t\t<div className=\"container card card-lg mx-auto dashboard\">\n\t\t\t\t\t<div className=\"row dashboard-boxes\">\n\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t<ProfileCard />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t<LatestSessions \n\t\t\t\t\t\t\t\t\tsessions={user_sessions}\n\t\t\t\t\t\t\t\t\tlimit={DASHBOARD_LIST_LIMIT}\n\t\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t<NewestBoards\n\t\t\t\t\t\t\t\t\t\tboards={boards}\n\t\t\t\t\t\t\t\t\t\tlimit={DASHBOARD_LIST_LIMIT}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"align-left\"\n\t\t\t\t\t\t\t\t\tsrc=\"/img/LogoMakr_4GvwRg.png\"\n\t\t\t\t\t\t\t\t\talt=\"glazewave\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t<Report />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t<NearestSpots />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</MainContainer>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(UserDashboard);\n\n// <link href=\"//www.surf-forecast.com/stylesheets/feed.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div id=\"wf-weatherfeed\"><iframe  allowtransparency=\"true\" height=\"272\" width=\"469\" src=\"//www.surf-forecast.com/breaks/Hollyoake/forecasts/feed/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"><p>Your browser does not support iframes.</p></iframe><div id=\"wf-link\"><a href=\"https://www.surf-forecast.com/\"><img alt=\"Surf Forecast\" src=\"//www.surf-forecast.com/images/feed/surflogo-150.jpg\"/></a><p id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">Hollyoake</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</p><div></div></div></div>\n","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\nimport { getSessionData} from './../reports/stormglass/helpers/session';\n\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n        getSessionData(geocodedPrediction.geometry.location.lat(),geocodedPrediction.geometry.location.lng()).then(d=>this.props.onChange('conditions', d)) \n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n      //if(this.props.disable && this.props.disable === true){\n        //return  <div className=\"sc-ifAKCX\">{this.props.placeholder}</div>\n     // }\n        const {search, value} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb\" : \"sc-bxivhb d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport Location from \"./../../form/Location\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport moment from \"moment\";\nimport { loadUserBoards, clearUserBoards } from \"./../../../actions/user_board\";\nimport { refresh } from \"./../../../lib/utils/cognito\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    boards: state.user_boards,\n    user_sessions: state.user_sessions,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n    clearBoards: () => dispatch(clearUserBoards()),\n  };\n};\n\nclass SessionForm extends React.Component {\n  constructor(props) {\n    refresh(props.session.user.id);\n    super(props);\n    this.defaultName = moment().format(\"MMMM D YYYY, h:mm a\");\n    this.state = { show: false, pictures: props.pictures, location_id: \"\" , conditions : {}};\n  }\n\n  onChange = (propertyName, newValue) => {\n    const data = [];\n    data[propertyName] = newValue;\n    this.setState({\n      ...data,\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if (!this.props.boards.loaded)\n        this.props.loadBoards(this.props.session, {\n          wheres: { user_id: this.props.session.user.id },\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearBoards();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form\n          action={({ serialized, fields, form }) =>\n            this.props.processFormSubmission({\n              session: this.props.session,\n              conditions: this.state.conditions,\n              serialized,\n              fields,\n              form,\n            })\n          }\n          rules={rules}\n          messages={messages}\n        >\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <Input\n                name=\"title\"\n                label=\"Session Name\"\n                className=\"form-control\"\n                initialValue={this.defaultName}\n                required\n              />\n              <Location\n                id=\"location_id\"\n                name=\"location_id\"\n                label=\"Where You paddling Out?\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                value={this.state.location_id}\n              />\n            </div>\n            <div className=\"col-12 clear-fix\">\n              <Input\n                type=\"hidden\"\n                name=\"user_id\"\n                value={this.props.session.user.id}\n              />\n              <span style={{float : 'right'}}>\n              <Button type=\"submit\">\n                {this.props.edit ? \"Edit Session\" : \"Add Session\"}\n              </Button>\n              </span>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {createUserSession, UserSessionCreatedCleared } from './../../actions/user_session';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession :  (session, params) => dispatch(createUserSession(session, params)),\n        clearCreatedSession : ()=> dispatch( UserSessionCreatedCleared() )\n    }\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.onSubmissionComplete()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(this.props.noUpdate) return;\n        if ((prevProps.user_sessions.data.length !== this.props.user_sessions.data.length)\n        && this.props.user_sessions.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_sessions.created.id;\n                    this.props.clearCreatedSession();\n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ conditions, serialized, fields, form})=> {\n        console.log('form cond', conditions)\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                formData.append('conditions', JSON.stringify(conditions));\n                createSession(session, {data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 row \">\n                        <div className=\"col-md-12 \">\n                            <h2>{TITLE}</h2>\n                            {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new session\n                            </div>\n                            )}\n                            {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                            </div>\n                            )}\n                            {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                            )}    \n                        </div>\n                        <div className=\"col-md-12\">           \n                            <SessionForm key=\"session_form\" session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop} />\n                        </div>\n                    </div>\n                </FormCard>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport './css/Modal.css'\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n        </section>\n      </div>\n    );\n  };\n  export default Modal;\n\n  /**\n   *           <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n   */","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"./../../css/Elastic.css\";\nimport React, { Component } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { connect } from \"react-redux\";\nimport elasticConfig from './../../config/elastic';\nimport { Link } from \"react-router-dom\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport SessionCard from \"./SessionCard\";\nimport {\n  loadUserSessions,\n  deleteUserSession,\n  UserSessionsCleared,\n} from \"./../../actions/user_session\";\nimport Create from \"./Create\";\nimport Modal from \"./../layout/Modal\";\nimport { Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport NearestSpots from \"./../reports/surfline/NearestSpots\";\nimport Report from \"./../reports/stormglass/Report\";\nimport {\n  ReactiveBase,\n  MultiList,\n  SelectedFilters,\n  ReactiveList,\n  StateProvider,\n} from \"@appbaseio/reactivesearch\";\n\nconst DEFAULT_SORT = \"id_DESC\";\nconst DEFAULT_SHOW = 8;\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    sessions: state.user_sessions.data\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadSessions: (session, params) => dispatch(loadUserSessions(session, params)),\n    deleteSession: (session, id) => dispatch(deleteUserSession(session, id)),\n    clearSessions: () => dispatch(UserSessionsCleared()),\n  };\n};\n\nconst relations = {\n  user_session: [\"UserBoard\", \"Location\", \"SessionImage\", \"SessionData\"],\n};\n\nclass SessionIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,//whether modal is showing or not\n      selectedSortOrder: DEFAULT_SORT,\n      showAll: 0,//whether or not we are showing user + public sessiions\n      esFilters: []//an array of filters to be added to any ES queries\n    };\n    this.deleteSession = this.deleteSession.bind(this);\n    this.editSession = this.editSession.bind(this);\n    this.viewSession = this.viewSession.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  componentDidMount() {\n    //set the initial scope to private\n    this.setScope({nextValue : 0});\n  }\n\n  componentWillUnmount() {\n    this.props.clearSessions();\n  }\n\n  deleteSession(id) {\n    confirmAlert({\n      title: \"Confirm To Delete\",\n      message: \"Are you sure you want to delete this session?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.props.deleteSession(this.props.session, id);\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  editSession(sessionId) {\n    this.props.history.push(\"/session/edit/\" + sessionId);\n  }\n\n  viewSession(sessionId) {\n    this.props.history.push(\"/session/\" + sessionId);\n  }\n\n  showModal = () => {\n    console.log('modal launched');\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    this.setState({ show: false });\n  };\n\n  onSortUpdated = (prevQuery, nextQuery) => {\n    let sortString = \"\";\n    for (const [key, value] of Object.entries(nextQuery.sort[0])) {\n      sortString = `${key}_${value.order}`;\n    }\n    this.setState({ selectedSortOrder: sortString });\n  };\n\n  elasticResultHandler = (e) => {\n    const ids = [];\n    e.data.forEach((element) => {\n      ids.push(element.id);\n    });\n    if (ids.length) {\n      this.props.loadSessions(this.props.session, {\n        orderBy: this.state.selectedSortOrder,\n        wheres: { in: ids.join(\",\") },\n        withs: relations.user_session,\n        limit: DEFAULT_SHOW,\n      });\n    } else{\n      this.props.clearSessions();\n    }\n  };\n  \n  setScope = (e) => {\n    const scopes = [{ match: { user_id: this.props.session.user.id } }];\n    if (e.nextValue && parseInt(e.nextValue) === 1) {\n      const isPublic = { match: { is_public: 1 } };\n      scopes.push(isPublic);\n    }\n    this.setState({ esFilters: scopes, showAll: parseInt(e.nextValue) });\n  };\n\n  render() {\n    const showModal = this.showModal;\n\n    return (\n      <MainContainer>\n        <ReactiveBase app={elasticConfig.sessions_index} url={elasticConfig.host} credentials={elasticConfig.credentials}>\n          <div className=\"row\">\n            <div className=\"container card card-lg mx-auto\">\n              <div className=\"card-title\">\n                <h2>\n                  Sessions\n                  <Link\n                    to=\"#\"\n                    onClick={this.showModal}\n                    className=\"btn btn-sm btn-outline-secondary float-right\"\n                  >\n                    Create New Session\n                  </Link>\n                </h2>\n              </div>\n              <div className=\"card-text\">\n                <div className=\"container\">\n                  <div className=\"row col-12\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col-10\">\n                      <span className=\"float-right\"></span>\n                    </div>\n                  </div>\n\n                  <div className=\"row col-12\">\n                    <div className=\"col-12\">\n                      <div className=\"col-3\"></div>\n                      <div className=\"col-9\">\n                        <SelectedFilters />\n                      </div>\n                    </div>\n                    <div className=\"col-3\">\n                      <div className=\"detail-line is_public_radio\">\n                        <Form>\n                          <Radio\n                            name=\"is_public\"\n                            label=\"Mine\"\n                            value=\"0\"\n                            onChange={this.setScope}\n                            checked={parseInt(this.state.showAll) === 0}\n                          />\n                          <Radio\n                            className=\"is_public_radio\"\n                            name=\"is_public\"\n                            label=\"Mine + Public\"\n                            value=\"1\"\n                            onChange={this.setScope}\n                            checked={parseInt(this.state.showAll) === 1}\n                          />\n                        </Form>\n                      </div>\n                      <div className=\"filter-widgets\" id=\"sessions\">\n                        <MultiList\n                          componentId=\"board\"\n                          dataField=\"board\"\n                          innerClass={{\n                            label: \"elastic-facet-label\",\n                            input: \"form-control\",\n                          }}\n                          title=\"Boards\"\n                          react={{\n                            and: [\"locations\"],\n                          }}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                        />\n                        <MultiList\n                          componentId=\"locations\"\n                          dataField=\"location\"\n                          title=\"Locations\"\n                          innerClass={{\n                            label: \"elastic-facet-label\",\n                          }}\n                          react={{\n                            and: [\"board\"],\n                          }}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-7\">\n                      <div className=\"row\">\n                        <ReactiveList\n                          onData={this.elasticResultHandler}\n                          onQueryChange={this.onSortUpdated}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                          renderResultStats={function (stats) {\n                            return (\n                              <div className=\"elastic-meta\">\n                                {stats.numberOfResults + \" Results Sorted By\"}\n                              </div>\n                            );\n                          }}\n                          renderNoResults={function () {\n                            return (\n                              <div className=\"alert alert-primary text-center index-empty-resultset\">\n                                  <div>You Haven't Created Any Sessions Yet</div>\n                                  <div><button className=\"btn btn-sm btn-primary\"  onClick={showModal} >Get Started!</button></div>\n                              </div>\n                            );\n                          }}\n                          className=\"col-12\"\n                          componentId=\"results\"\n                          react={{\n                            and: [\"board\", \"locations\"],\n                          }}\n                          pagination\n                          size={DEFAULT_SHOW}\n                          infiniteScroll={true}\n                          innerClass={{\n                            pagination: \"elastic-paginate\",\n                            sortOptions: \"form-control elastic-sort\",\n                          }}\n                          sortOptions={[\n                            {\n                              dataField: \"id\",\n                              sortBy: \"desc\",\n                              label: \"Newest To Oldest\",\n                            },\n                            {\n                              dataField: \"id\",\n                              sortBy: \"asc\",\n                              label: \"Oldest To Newest\",\n                            },\n                            {\n                              dataField: \"title\",\n                              sortBy: \"asc\",\n                              label: \"Title A->Z\",\n                            },\n                            {\n                              dataField: \"title\",\n                              sortBy: \"desc\",\n                              label: \"Title Z->A\",\n                            },\n                            {\n                              dataField: \"rating\",\n                              sortBy: \"asc\",\n                              label: \"Rating 1-10\",\n                            },\n                            {\n                              dataField: \"rating\",\n                              sortBy: \"desc\",\n                              label: \"Rating 10-1\",\n                            },\n                          ]}\n                          paginationAt=\"both\"\n                          render={({ data }) =>\n                            this.props.sessions &&\n                            this.props.sessions.map((session) => (\n                              <div key={session.id} className=\"col-12\">\n                                <SessionCard\n                                  isOwner={session.user_id === this.props.session.user.id}\n                                  session={session}\n                                  key={session.id}\n                                  deleteSession={this.deleteSession}\n                                  viewSession={this.viewSession}\n                                  editSession={this.editSession}\n                                />\n                              </div>\n                            ))\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-2\">\n                    <div className=\"index-sidecard\">\n                      <img\n                        className=\"align-left\"\n                        src=\"/img/LogoMakr_4GvwRg.png\"\n                        alt=\"glazewave\"\n                      />\n\t\t\t\t\t\t\t      </div>\n                      <div className=\"index-sidecard\">\n                        <Report />\n                      </div>\n                      <div className=\"index-sidecard\">\n                        <NearestSpots />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row col-12\">\n                    <div className=\"col-6\"></div>\n                    <div className=\"col-6\">\n                      <span className=\"float-right\"></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ReactiveBase>\n        <Modal show={this.state.show}>\n          <Create\n            onSuccess={(e) => this.hideModal(e)}\n            onSubmissionComplete={this.viewSession}\n            close={this.hideModal}\n          />\n        </Modal>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex);\n\n","import React from \"react\";\nimport { createField, fieldPresets } from \"react-advanced-form\";\nimport Autosuggest from \"react-autosuggest\";\n\nclass TypeAheadInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || \"\",\n      suggestions: props.entity,\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    console.log(\"key\", newValue);\n    if (this.state.value !== newValue) {\n      this.setState({\n        value: newValue,\n      });\n    }\n  };\n\n  onBlur = (event) => {\n    if (this.state.value) console.log(\"blur\", event.target.value);\n    let vid = this.props.entity.find(\n      (x) => x[this.props.keyName] === event.target.value\n    );\n    this.props.setValue(this.props.name, vid ? vid.id : event.target.value);\n  };\n\n  getSuggestionValue = (suggestion) => suggestion[this.props.keyName];\n\n  renderSuggestion = (suggestion) => (\n    <div>{suggestion[this.props.keyName]}</div>\n  );\n\n  // Autosuggest will call this function every time we need to update suggestions.\n  onSuggestionsFetchRequested = ({ value, reason }) => {\n    this.setState({\n      suggestions: this.props.getSuggestions(value, reason),\n    });\n  };\n\n  // Autosuggest will call this function every time we need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  onSuggestionSelected = (\n    event,\n    { suggestion, /*suggestionValue, suggestionIndex, sectionIndex, method*/ }\n  ) => {\n    this.props.setValue(this.props.name, suggestion.id);\n  };\n\n  shouldRenderSuggestions = (value) => {\n    return true;\n  };\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props;\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState;\n\n    const inputClassNames = [\n      \"form-control\",\n      touched && \"is-touched\",\n      pristine && \"is-pristine\",\n      validating && \"is-validating\",\n      validatedSync && \"validated-sync\",\n      validatedAsync && \"validated-async\",\n      valid && \"is-valid\",\n      validSync && \"valid-sync\",\n      validAsync && \"valid-async\",\n      invalid && \"is-invalid\",\n      \"sc-EHOje fVJbnH\",\n    ]\n      .filter(Boolean)\n      .join(\" \");\n\n    const inputProps = {\n      ...fieldProps,\n      value,\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n      onFocus: () =>\n        this.onSuggestionsFetchRequested({\n          value: name,\n          reason: \"type_ahead_focused\",\n        }),\n      id: name,\n      name,\n      className: inputClassNames,\n      autoComplete: \"off\",\n    };\n\n    const wrapperClass = this.props.display\n      ? \"sc-bxivhb\"\n      : \"sc-bxivhb d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && \" *\"}\n          </label>\n        )}\n        <div\n          className=\"sc-ifAKCX fatWUN\"\n          style={{ maxHeight: 200, overflow: \"auto\" }}\n        >\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={this.onSuggestionSelected}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            shouldRenderSuggestions={this.shouldRenderSuggestions}\n            //focusInputOnSuggestionClick={false}\n            //alwaysRenderSuggestions={true}\n          />\n        </div>\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput);\n","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import { SHAPERS_LOADED } from \"./types\";\nimport ManufacturerRequests from './../requests/ManufacturerRequests';\n\n\nexport const ShapersLoaded = data => ({\n    type: SHAPERS_LOADED,\n    payload: data\n  });\n\n\n\n  export const loadShapers= ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return ShapersLoaded(data)} }}\n      dispatch(\n        new ManufacturerRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import { BOARDS_LOADED } from \"./types\";\nimport BoardRequests from './../requests/BoardRequests';\n\nexport const BoardsLoaded = data => ({\n    type: BOARDS_LOADED,\n    payload: data\n  });\n\n  export const loadBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return BoardsLoaded(data)} }}\n      dispatch(\n        new BoardRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport TypeAheadInput from \"./../../form/TypeAheadInput\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport ImageUploader from \"react-images-upload\";\nimport { loadShapers } from \"./../../../actions/shaper\";\nimport { loadBoards } from \"./../../../actions/board\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tboards: state.boards.data,\n\t\tshapers: state.shapers.data,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadShapers: (session, params) => dispatch(loadShapers(session, params)),\n\t\tloadBoards: (session, params) => dispatch(loadBoards(session, params)),\n\t};\n};\n\nconst relations = {\n\tshapers: [\"Board\"],\n\tboards: [\"Manufacturer\"],\n};\n\nclass UserBoardForm extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tboard_id: null,\n\t\t\tmanufacturer_id: null,\n\t\t};\n\t}\n\n\tonChange = (propertyName, newValue) => {\n\t\tconst data = [];\n\t\tdata[propertyName] = newValue;\n\t\tthis.setState({\n\t\t\t...data,\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tif (!this.props.boards.length)\n\t\t\t\tthis.props.loadBoards(this.props.session, {\n\t\t\t\t\tlimit: 1000,\n\t\t\t\t\twiths: relations.boards,\n\t\t\t\t});\n\t\t\tif (!this.props.shapers.length)\n\t\t\t\tthis.props.loadShapers(this.props.session, {\n\t\t\t\t\tlimit: 1000,\n\t\t\t\t\twiths: relations.shapers,\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.props.history.push(\"/\");\n\t\t}\n\t}\n\n\tgetBoardSuggestions = (value) => {\n\t\tif (!value) {\n\t\t\treturn this.props.boards.filter(\n\t\t\t\t(entity) => entity.manufacturer_id === this.state.manufacturer_id\n\t\t\t);\n\t\t}\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.boards.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.model.toLowerCase().slice(0, inputLength) === inputValue &&\n\t\t\t\t\t\tentity.manufacturer_id === this.state.manufacturer_id\n\t\t\t  );\n\t};\n\n\tgetShaperSuggestions = (value) => {\n\t\tif (!value) return this.props.shapers;\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.shapers.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.name.toLowerCase().slice(0, inputLength) === inputValue\n\t\t\t  );\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Form\n\t\t\t\t\taction={({ serialized, fields, form }) =>\n\t\t\t\t\t\tthis.props.processFormSubmission({\n\t\t\t\t\t\t\tsession: this.props.session,\n\t\t\t\t\t\t\tserialized,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\tform,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\trules={rules}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12 \">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\tentity={this.props.shapers}\n\t\t\t\t\t\t\t\tname=\"manufacturer_id\"\n\t\t\t\t\t\t\t\tkeyName=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"choose a shaper\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Unknown\"\n\t\t\t\t\t\t\t\tvalue={this.state.manufacturer_id}\n\t\t\t\t\t\t\t\tsetValue={this.onChange}\n\t\t\t\t\t\t\t\tgetSuggestions={this.getShaperSuggestions}\n\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\tentity={this.props.boards}\n\t\t\t\t\t\t\t\tname=\"board_id\"\n\t\t\t\t\t\t\t\tkeyName=\"model\"\n\t\t\t\t\t\t\t\tlabel=\"choose a model\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"choose a board\"\n\t\t\t\t\t\t\t\tvalue={this.state.board_id}\n\t\t\t\t\t\t\t\tsetValue={this.onChange}\n\t\t\t\t\t\t\t\tgetSuggestions={this.getBoardSuggestions}\n\t\t\t\t\t\t\t\tdisplay={this.state.manufacturer_id !== null}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ImageUploader\n\t\t\t\t\t\t\t\twithIcon={false}\n\t\t\t\t\t\t\t\tbuttonText=\"Choose images\"\n\t\t\t\t\t\t\t\tonChange={this.props.onDrop}\n\t\t\t\t\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n\t\t\t\t\t\t\t\tmaxFileSize={5242880}\n\t\t\t\t\t\t\t\twithPreview={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\tname=\"user_id\"\n\t\t\t\t\t\t\t\tvalue={this.props.session.user.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\t{this.props.edit ? \"Edit Board\" : \"Add Board\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(UserBoardForm);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormCard } from \"./../layout/FormCard\";\nimport UserBoardForm from \"./forms/UserBoardForm\";\nimport { withRouter } from \"react-router-dom\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\nimport {\n\tcreateUserBoard,\n\tUserBoardCreatedCleared,\n} from \"./../../actions/user_board\";\n\nconst TITLE = \"Create Board\";\n\nconst mapStateToProps = (state) => {\n\treturn { session: state.session, user_boards: state.user_boards };\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tcreateUserBoard: (session, params) => dispatch(createUserBoard(session, params)),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nclass CreateUserBoard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsubmitSuccess: false,\n\t\t\tsubmitFail: false,\n\t\t\terrorMessage: null,\n\t\t\timages: [],\n\t\t};\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\n\tonDrop(pictureFiles, pictureDataURLs) {\n\t\tthis.setState({\n\t\t\timages: this.state.images.concat(pictureFiles),\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (this.props.noUpdate) return;\n\t\tif (\n\t\t\tprevProps.user_boards.data.length !==\n\t\t\t\tthis.props.user_boards.data.length &&\n\t\t\tthis.props.user_boards.created\n\t\t) {\n\t\t\tthis.setState({ submitSuccess: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.props.onSubmissionComplete) {\n\t\t\t\t\tconst id = this.props.user_boards.created.id;\n\n\t\t\t\t\tthis.props.onSubmissionComplete(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.history.push(\"/board\");\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t}\n\t}\n\n\tprocessFormSubmission = ({ serialized, fields, form }) => {\n\t\tconst { session, createUserBoard } = this.props;\n\t\tconst { images } = this.state;\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (session.isLoggedIn) {\n\t\t\t\tconst formData = UserBoardRequests.createFormRequest(serialized);\n\t\t\t\timages.forEach((file, i) => {\n\t\t\t\t\tformData.append(\"photo\", file);\n\t\t\t\t});\n\t\t\t\tcreateUserBoard(session, { data: formData });\n\t\t\t\tresolve(formData);\n\t\t\t} else {\n\t\t\t\treject(\"user not logged in \");\n\t\t\t}\n\t\t});\n\t};\n\n\thandleInputChanges = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { submitSuccess, submitFail, loading, errorMessage } = this.state;\n\t\treturn (\n\t\t\t<FormCard returnToIndex={this.props.close}>\n\t\t\t\t<div className=\"col-md-12 \">\n\t\t\t\t\t<h2>{TITLE}</h2>\n\t\t\t\t\t{!submitSuccess && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\tFill the form below to create a new post\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{submitSuccess && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\tThe form was successfully submitted!\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{submitFail && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<UserBoardForm\n\t\t\t\t\t\tboard={this.state.board}\n\t\t\t\t\t\thandleInputChanges={this.handleInputChanges}\n\t\t\t\t\t\tprocessFormSubmission={this.processFormSubmission}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tonDrop={this.onDrop}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</FormCard>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispachToProps\n)(withRouter(CreateUserBoard));\n","import \"./../css/BoardPicker.css\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport InlineEdit, { InputType } from \"riec\";\nimport {\n\tloadUserBoard,\n\tUserBoardCreatedCleared,\n} from \"./../../../actions/user_board\";\nimport { s3Conf } from \"./../../../config/s3\";\nimport Modal from \"./../../layout/Modal\";\nimport CreateUserBoard from \"./../CreateUserBoard\";\nimport StarBar from \"./../../layout/StarBar\";\nimport { withRouter } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tcurrent_session: state.user_sessions.selected,\n\t\tboard_created: state.user_boards.created,\n\t\tuser_board: state.user_boards.selected,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nclass BoardPicker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselect: { id: 0, name: \"No Board Selected\" },\n\t\t\tselectOptions: [],\n\t\t\tdefaultImage:\"/img/board_default_lg.png\",\n\t\t\tboard_id: props.board_id,\n\t\t\tselectedBoard: {},\n\t\t\tshow: false,\n\t\t};\n\t\tthis.hideModal = this.hideModal.bind(this);\n\t\tthis.showModal = this.showModal.bind(this);\n\t}\n\n\tshowModal = () => {\n\t\tthis.setState({ show: true });\n\t};\n\n\thideModal = (e = false) => {\n\t\tthis.setState({ show: false });\n\t};\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tthis.setState({\n\t\t\t\tboard_id: this.props.board_id,\n\t\t\t\tselectedBoard: this.props.current_session.UserBoard,\n\t\t\t});\n\t\t\tif (this.props.current_session.board_id)\n\t\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\t\tid: this.props.current_session.board_id,\n\t\t\t\t\twiths: [\"UserBoardImage\"],\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (\n\t\t\tprevProps.current_session.board_id !== this.props.board_id ||\n\t\t\tthis.props.board_created !== false\n\t\t) {\n\t\t\tconst board_id = this.props.board_created\n\t\t\t\t? this.props.board_created.id\n\t\t\t\t: this.props.board_id;\n\t\t\tthis.props.clearCreatedBoard();\n\t\t\t//this.setState({ board_id : board_id})\n\t\t\tthis.props.onChange(board_id);\n\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\tid: board_id,\n\t\t\t\twiths: [\"UserBoardImage\"],\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst session = this.props.current_session;\n\t\tconst isOwner =\n\t\t\tthis.props.session.user.id === this.props.user_board.user_id;\n\t\tconst boardImage =\n\t\t\tthis.props.user_board &&\n\t\t\tthis.props.user_board.UserBoardImages &&\n\t\t\tthis.props.user_board.UserBoardImages.length\n\t\t\t\t? s3Conf.root + this.props.user_board.UserBoardImages[0].name\n\t\t\t\t: this.state.defaultImage;\n\t\treturn (\n\t\t\t<div className={this.props.wrapperClass + \" \"}>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<strong>Board:</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"col-5\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tthis.props.history.push(\"/board/\" + session.board_id)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsrc={boardImage}\n\t\t\t\t\t\t\t\talt={this.props.user_board.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tisOwner\n\t\t\t\t\t\t\t\t\t\t? \"board-select row\"\n\t\t\t\t\t\t\t\t\t\t: \"board-select-disabled row\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InlineEdit\n\t\t\t\t\t\t\t\t\ttype={InputType.Select}\n\t\t\t\t\t\t\t\t\tvalue={this.props.user_board.name || \"Select A Board\"}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.props.user_board.name}\n\t\t\t\t\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\t\t\t\t\toptions={this.props.boards}\n\t\t\t\t\t\t\t\t\tvalueKey=\"id\"\n\t\t\t\t\t\t\t\t\tlabelKey=\"name\"\n\t\t\t\t\t\t\t\t\teditClass=\"form-control\"\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{this.props.user_board && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\t<StarBar\n\t\t\t\t\t\t\t\t\t\tstars={this.props.user_board.rating}\n\t\t\t\t\t\t\t\t\t\tonClick={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\tstatic={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.props.user_board && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\tSize:{this.props.user_board.size}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isOwner && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.showModal}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNew Board\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Modal show={this.state.show}>\n\t\t\t\t\t\t\t<CreateUserBoard\n\t\t\t\t\t\t\t\tonSuccess={(e) => this.hideModal(e)}\n\t\t\t\t\t\t\t\tonSubmissionComplete={this.hideModal}\n\t\t\t\t\t\t\t\tclose={this.hideModal}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispachToProps\n)(withRouter(BoardPicker));\n","import React from 'react';\n\nconst Conditions = props =>{\n    const {session} = props;\n    return (\n        <div className=\"card conditions\">\n            <strong>Conditions</strong>\n            <div className=\"row\" >\n              <div className=\"col-6\">   \n              <div>Water Temp: { session.SessionDatum.water_temperature}F</div>  \n              <div>Swell Height: {session.SessionDatum.swell_height}ft</div>  \n              <div>Swell Period: {session.SessionDatum.swell_period }s</div>  \n              <div>Wave Height: {session.SessionDatum.wave_height }ft</div>  \n              </div>\n              <div className=\"col-6\">   \n              <div>Wave Period: {session.SessionDatum.wave_period }s</div>  \n              <div>Pressure: {session.SessionDatum.pressure }in</div>  \n              <div>Wind Speed: {session.SessionDatum.wind_speed }k</div>  \n            </div>\n          </div>\n    </div>\n    )\n}\nexport default Conditions;","import \"./css/Session.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { FormCard } from \"./../layout/FormCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { RIEInput, RIETextArea } from \"@attently/riek\";\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from \"react-images-upload\";\nimport ImageGallery from \"react-image-gallery\";\nimport Location from \"./../form/Location\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport StarBar from \"./../layout/StarBar\";\nimport SessionRequests from \"./../../requests/SessionRequests\";\nimport { loadUserBoards } from \"./../../actions/user_board\";\nimport {\n  UserSessionCleared,\n  loadUserSession,\n  updateUserSession,\n  loadUserSessionImages,\n  addUserSessionImages,\n  deleteUserSessionImage,\n} from \"./../../actions/user_session\";\nimport noaaForecaster from \"noaa-forecasts\";\nimport BoardPicker from \"./../board/forms/BoardPicker\";\nimport { Radio } from \"react-advanced-form-addons\";\nimport { FacebookProvider, Share, Comments, Page } from \"react-facebook\";\nimport fbConfig from \"./../../config/fb\";\nimport Conditions from \"./Conditions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    current_session: state.user_sessions.selected,\n    boards: state.user_boards.data,\n    session_images: state.session_images,\n    api: state.api,\n  };\n};\n\nconst withs = {\n  session: [\"Location\", \"UserBoard.UserBoardImage\", \"SessionData\"],\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadSession: (session, params) =>\n      dispatch(loadUserSession(session, params)),\n    loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n    clearSession: () => dispatch(UserSessionCleared()),\n    editUserSession: (session, params) =>\n      dispatch(updateUserSession(session, params)),\n    loadSessionImages: (session, params) =>\n      dispatch(loadUserSessionImages(session, params)),\n    addImages: (session, params) =>\n      dispatch(addUserSessionImages(session, params)),\n    deleteSessionImage: (session, id) =>\n      dispatch(deleteUserSessionImage(session, id)),\n  };\n};\n\nclass SessionView extends Component {\n  constructor(props) {\n    super(props);\n    this.UserSessionRequest = new SessionRequests(props.session);\n\n    this.state = {\n      boards: [], //array of user boards to pupulate board picker\n      select: { id: 0, name: \"No Board Selected\" }, //currently selected board\n      selectedImage: null, //the id of the currently selected image, used foor delete\n      selectOptions: [],\n      uploaderInstance: 1, //we need to increment the uploader instance each time to clear\n      imageIndex: 0, //the begining index of images\n      date: \"\", //initialize date\n      is_public: null, //internal prop to keep track of pribacy desires\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      this.props.loadBoards(this.props.session, {\n        orderBy: \"name_ASC\",\n        limit: 50,\n        wheres: { user_id: this.props.session.user.id },\n      });\n      this.props.loadSession(this.props.session, {\n        id: this.props.match.params.id,\n        withs: withs.session,\n      });\n      this.props.loadSessionImages(this.props.session, {\n        wheres: { session_id: this.props.match.params.id },\n      });\n    } else {\n      this.props.history.push(\"/session\");\n    }\n  }\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    if (!pictureFiles.length) return;\n    const formData = SessionRequests.createFormRequest({\n      session_id: this.props.current_session.id,\n      user_id: this.props.session.user.id,\n    });\n    pictureFiles.forEach((file, i) => {\n      formData.append(\"photo\", file);\n    });\n    this.props.addImages(this.props.session, { data: formData });\n    this.setState({ uploaderInstance: this.state.uploaderInstance + 1 });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //were going to use this to see if a new board was created, if so we have to add it to the availableboards and set it as selected\n    ((this.props.boards.length &&\n      !this.state.selectOptions.length &&\n      this.props.current_session.id) ||\n      prevProps.boards.length !== this.props.boards.length) &&\n      this.setSelectedBoard();\n  }\n\n  setSelectedBoard = () => {\n    const boardOptions = [{ id: 0, name: \"select\" }];\n    let select = this.state.select;\n    this.props.boards.map((obj) => {\n      let board = { id: obj.id, name: obj.name };\n      if (obj.id === this.props.current_session.board_id) select = board;\n      return boardOptions.push(board);\n    });\n    this.setState({ selectOptions: boardOptions, select: select });\n  };\n\n  componentWillUnmount() {\n    this.props.clearSession();\n  }\n\n  returnToIndex = (e) => {\n    this.props.history.length > 1\n      ? this.props.history.goBack()\n      : this.props.history.push(\"/user/dashboard\");\n  };\n\n  submitUpdate = (data) => {\n    this.props.editUserSession(this.props.session, {\n      id: this.props.match.params.id,\n      data: data,\n    });\n    this.setState(data);\n  };\n\n  onLocationChange = (propertyName, newValue) => {\n    if (!newValue) return;\n    const data = [];\n    data[propertyName] = newValue;\n    this.submitUpdate({ ...data });\n  };\n\n  onPrivacyChange = (e) => {\n    //@totdo this double submits without keeping track of state\n    if (e.nextValue !== this.state.is_public) {\n      this.setState({ is_public: e.nextValue });\n      this.submitUpdate({ is_public: e.nextValue });\n    }\n  };\n\n  onBoardChange = (id) => {\n    if (!id) return;\n    this.submitUpdate({ board_id: id });\n    const idInt = parseInt(id);\n    this.state.selectOptions.map((obj) => {\n      if (obj.id === idInt) this.setState({ select: obj });\n      return true;\n    });\n  };\n\n  onImageLoad = (e) => {\n    this.setState({ selectedImage: this.props.session_images[0] });\n  };\n\n  onImageSelected = (e) => {\n    this.setState({\n      selectedImage: this.props.session_images[e],\n      imageIndex: e,\n    });\n  };\n\n  deleteImage = (e) => {\n    new Promise((resolve, reject) => {\n      resolve(\n        this.props.deleteSessionImage(\n          this.props.session,\n          this.state.selectedImage.id\n        )\n      );\n    }).then((e) => {\n      const newIndex =\n        this.state.imageIndex === 0 ? 0 : this.state.imageIndex - 1;\n      this.setState({\n        imageIndex: newIndex,\n        selectedImage: this.props.session_images[newIndex],\n      });\n    });\n  };\n\n  onDateChange = (date) => {\n    let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n    this.submitUpdate({ session_date: formattedDate });\n    this.setState({ date: date });\n  };\n\n  render() {\n    const session = this.props.current_session;\n    const isOwner = this.props.session.user.id === session.user_id;\n    return (\n      <MainContainer>\n        <FacebookProvider appId={fbConfig.api_key}>\n          <FormCard returnToIndex={this.returnToIndex}>\n            <Form>\n              <div className={isOwner ? \"container owner\" : \"container\"}>\n                <div className=\"details row\">\n                  <div className=\"col-7 session-title\">\n                    <RIEInput\n                      required={false}\n                      value={session.title || \"\"}\n                      defaultValue={session.title}\n                      change={this.submitUpdate}\n                      propName=\"title\"\n                      editProps={{ disabled: !isOwner }}\n                      className=\"form-control\"\n                    />\n                  </div>\n                  <div className=\"col-5\" style={{textAlign: 'right'}} >\n                    <img src=\"/img/LogoMakr_4GvwRg.png\" style={{ height:'50px'}} />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-7\">\n                    <div className=\"row\">\n                      <div className=\"col-6 align-middle\">\n                        <StarBar\n                          stars={session.rating}\n                          onClick={this.submitUpdate}\n                          size=\"1x\"\n                          static={!isOwner}\n                        />\n                      </div>\n                      <div className=\"col-6\">\n                        {isOwner && (\n                          <div className=\"privacy text-right\">\n                            <Radio\n                              name=\"is_public\"\n                              label=\"Private\"\n                              value=\"0\"\n                              onChange={this.onPrivacyChange}\n                              checked={session.id && session.is_public !== true}\n                            />\n                            <Radio\n                              name=\"is_public\"\n                              label=\"Public\"\n                              value=\"1\"\n                              onChange={this.onPrivacyChange}\n                              checked={\n                                session.is_public && session.is_public === true\n                              }\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row preview\">\n                      <FontAwesomeIcon\n                        size=\"lg\"\n                        alt=\"delete user\"\n                        style={{\n                          marginLeft: \".5em\",\n                          float: \"left\",\n                          cursor: \"pointer\",\n                          position: \"absolute\",\n                          top: \"1em\",\n                          zIndex: \"999\",\n                          color: \"white\",\n                          left: \"1em\",\n                        }}\n                        icon={faTrash}\n                        onClick={this.deleteImage}\n                        value={this.state.imageIndex}\n                      />\n                      {isOwner && (\n                        <ImageUploader\n                          key={this.state.uploaderInstance}\n                          withIcon={false}\n                          buttonText=\"+\"\n                          onChange={this.onDrop}\n                          imgExtension={[\n                            \".jpg\",\n                            \".jpeg\",\n                            \".gif\",\n                            \".png\",\n                            \".gif\",\n                          ]}\n                          maxFileSize={5242880}\n                          withPreview={false}\n                          withLabel={false}\n                          buttonClassName=\"upload-btn\"\n                          style={{\n                            marginLeft: \".5em\",\n                            float: \"left\",\n                            cursor: \"pointer\",\n                            position: \"absolute\",\n                            top: \"0\",\n                            zIndex: \"999\",\n                            color: \"white\",\n                            left: \"3em\",\n                          }}\n                        />\n                      )}\n                      <div>\n                        <ImageGallery\n                          items={this.props.session_images}\n                          showBullets={true}\n                          showIndex={true}\n                          startIndex={this.state.imageIndex}\n                          onSlide={this.onImageSelected}\n                          onImageLoad={this.onImageLoad}\n                          thumbnailPosition={\"bottom\"}\n                        />\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"card-text\">\n                          <Page href={window.location.href} tabs=\"timeline\" />\n                          <Comments href={window.location.href} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"details col-5\">\n                    <div>\n                      <div className=\"card\">\n                        <div className=\"detail-line\">\n                          <DatePicker\n                            disabled={!isOwner}\n                            selected={this.state.date}\n                            className=\"date-picker-input form-control\"\n                            onChange={this.onDateChange} //only when value has changed\n                            showTimeSelect\n                            dateFormat={\"MMMM d yyyy h:mm a\"}\n                            placeholderText={moment(\n                              session.session_date\n                            ).format(\"MMMM D YYYY h:mm a\")}\n                          />\n                        </div>\n\n                        <div className=\"detail-line\">\n                          <Location\n                            disabled={!isOwner}\n                            id=\"location_id\"\n                            name=\"location_id\"\n                            className=\"form-control\"\n                            onChange={this.onLocationChange}\n                            onBlur={this.onLocationBlur}\n                            value={session.location_id}\n                            disable={!isOwner}\n                            placeholder={\n                              session.Location\n                                ? session.Location.formatted_address\n                                : \"No Location Specified\"\n                            }\n                          />\n                        </div>\n                      </div>\n                      {session.SessionDatum && (\n                        <div className=\"detail-line\">\n                          <Conditions session={session} />\n                        </div>\n                      )}\n                      <div className=\"card\">\n                          <BoardPicker\n                            onChange={this.onBoardChange}\n                            boards={this.state.selectOptions}\n                            board_id={session.board_id}\n                            wrapperClass=\"row detail-line\"\n                          />\n                        </div>\n                        <div className=\"card\">\n                        <div className=\"detail-line\">\n                          <div>\n                            <strong>Notes:</strong>\n                          </div>\n                          <RIETextArea\n                            value={\n                              session.notes ||\n                              \"You have no notes for this session\"\n                            }\n                            className=\"form-control text-area\"\n                            defaultValue={session.notes}\n                            change={this.submitUpdate}\n                            propName=\"notes\"\n                            validate={_.isString}\n                            editProps={{ disabled: !isOwner }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </FormCard>\n        </FacebookProvider>\n      </MainContainer>\n    );\n  }\n\n  loadNoaa = () => {\n    var inspect = require(\"util\").inspect;\n    var obj = {\n      listLatLon: \"38.99,-77.01 37.7833,-122.4167\",\n      //product: 'time-series', // this is a default, it's not actually required\n      begin: moment().format(\"YYYY-MM-DDTHH:mm:ss\"),\n      end: moment().add(3, \"days\").format(\"YYYY-MM-DDTHH:mm:ss\"),\n      qpf: \"qpf\", // first elementInputName - Liquid Precipitation Amount\n      pop12: \"pop12\", // another elementInputName - 12 hour probability of precipitation\n    };\n    var token = \"yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV\";\n    noaaForecaster.setToken(token);\n    noaaForecaster.getForecast(obj).then(function (results) {\n      console.log(inspect(results, { colors: true, depth: Infinity }));\n    });\n  };\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionView);\n","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"./../../css/Elastic.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport BoardCard from \"./../board/BoardCard\";\nimport {\n\tloadUserBoards,\n\tdeleteUserBoard,\n\tUserBoardsCleared,\n\tUserBoardCreatedCleared,\n} from \"./../../actions/user_board\";\nimport elasticConfig from './../../config/elastic';\nimport Modal from \"./../layout/Modal\";\nimport CreateUserBoard from \"./CreateUserBoard\";\nimport { Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport { hasSession } from \"./../../lib/utils/session\";\nimport NearestSpots from \"./../reports/surfline/NearestSpots\";\nimport Report from \"./../reports/stormglass/Report\";\nimport {\n\tReactiveBase,\n\tMultiList,\n\tSelectedFilters,\n\tReactiveList\n} from \"@appbaseio/reactivesearch\";\nimport { refresh } from './../../lib/utils/cognito';\n\n\nconst DEFAULT_SORT = \"created_at_DESC\";\nconst DEFAULT_SHOW = 12;\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserSession: state.session,\n\t\tboards: state.user_boards.data,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoards: (userSession, params) =>dispatch(loadUserBoards(userSession, params)),\n\t\tdeleteBoard: (userSession, id) =>dispatch(deleteUserBoard(userSession, id)),\n\t\tclearBoards: () => dispatch(UserBoardsCleared()),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nconst relations = {\n\tuser_board: [\"Board.Manufacturer\", \"UserBoardImage\"],\n};\n\nclass BoardIndex extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshow: false,//toggle for modal\n\t\t\tselectedSortOrder: DEFAULT_SORT,\n\t\t\tshowAll: 0,//whether we are are showing only user boards or all public boards\n\t\t\tfilters: [{ match: { user_id: props.userSession.user.id } }],//a set of default filters to be sent to elastic\n\t\t\tmlVal : []\n\t\t};\n\t\tthis.deleteBoard = this.deleteBoard.bind(this);\n\t\tthis.editBoard = this.editBoard.bind(this);\n\t\tthis.viewBoard = this.viewBoard.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\trefresh().then(data=>console.log('refresh data', data))\n\t\tif (this.props.userSession.isLoggedIn) {\n\t\t\t//this.props.loadBoards(this.props.userSession, { orderBy : DEFAULT_SORT , wheres : {user_id : this.props.userSession.user.id }, withs : relations.user_board} );\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t//lets get rid of the boards in Redux\n\t\tthis.props.clearBoards();\n\t}\n\n\tdeleteBoard(id) {\n\t\tconfirmAlert({\n\t\t\ttitle: \"Confirm To Delete\",\n\t\t\tmessage: \"Are you sure you want to delete this userSession?\",\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.props.deleteBoard(this.props.userSession, id);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tonClick: () => {},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\teditBoard(boardId) {\n\t\tthis.props.history.push(\"/board/edit/\" + boardId);\n\t}\n\n\tboardCreated = (id) => {\n\t\t//new board was created in modal so let's et rid of boards\n\t\tthis.props.clearCreatedBoard();\n\t\t//forward user to new board details page\n\t\tthis.viewBoard(id);\n\t};\n\n\t//forwards user to board detail page\n\tviewBoard(boardId) {\n\t\tthis.props.history.push(\"/board/\" + boardId);\n\t}\n\n\tshowModal = () => {\n\t\tthis.setState({ show: true });\n\t};\n\n\thideModal = (e = false) => {\n\t\tif (e) e.preventDefault();\n\t\tthis.setState({ show: false });\n\t};\n\n\t/**\n\t * Will set some additional filters on elaticsearch\n\t */\n\tsetScope = (e) => {\n\t\tconst scopes = [{ match: { user_id: this.props.userSession.user.id } }]; //we always want to match against user id\n\t\tif (parseInt(e.nextValue) === 1) {\n\t\t\tconst isPublic = { match: { is_public: 1 } }; //user also wants to see all public boards\n\t\t\tscopes.push(isPublic);\n\t\t}\n\t\tthis.setState({ filters: scopes, showAll: parseInt(e.nextValue), mlVal : [] });\n\t};\n\t/**\n\t * We need to keep track of sort order so that when we ask API to hydrrate items\n\t * it returns them in the proper order\n\t */\n\tonSortUpdated = (prevQuery, nextQuery) => {\n\t\tlet sortString = \"\";\n\t\tfor (const [key, value] of Object.entries(nextQuery.sort[0])) {\n\t\t\t//we'll only ever have one sort so we can take the first element and parse it\n\t\t\tsortString = `${key}_${value.order}`;\n\t\t}\n\t\tthis.setState({ selectedSortOrder: sortString });\n\t};\n\t/**\n\t * Gets called everytime elastic updates\n\t * we'll take the id's it has returned and ask the api to hydrate them\n\t */\n\telasticResultHandler = (e) => {\n\t\tconst ids = [];\n\t\te.data.forEach((element) => {\n\t\t\tids.push(element.id);\n\t\t});\n\t\tif (ids.length) {\n\t\t\tthis.props.loadBoards(this.props.userSession, {\n\t\t\t\torderBy: this.state.selectedSortOrder,\n\t\t\t\twheres: { in: ids.join(\",\") },\n\t\t\t\twiths: relations.user_board,\n\t\t\t\tlimit: DEFAULT_SHOW,\n\t\t\t});\n\t\t} else{\n\t\t\tthis.props.clearBoards();\n\t\t  }\n\t};\n\n\trender() {\n\t\tconst showModal = this.showModal;\n\t\treturn (\n\t\t\t<MainContainer>\n\t\t\t\t<ReactiveBase app={elasticConfig.user_boards_index} url={elasticConfig.host} credentials={elasticConfig.credentials}>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"container card card-lg mx-auto\">\n\t\t\t\t\t\t\t<div className=\"card-title\">\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tBoards\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={this.showModal}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCreate New Board\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-text\">\n\t\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-2\"></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-right\"></span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectedFilters\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbutton: \"btn btn-primary\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"detail-line is_public_radio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mine\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setScope}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={parseInt(this.state.showAll) === 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"is_public_radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mine + Public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setScope}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={parseInt(this.state.showAll) === 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"filter-widgets\" id=\"sessions\">\n\t\t\t\t\t\t\t\t\t\t\t\t<MultiList\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"manufacturers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataField=\"manufacturer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Manufacturers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"elastic-facet-label\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonError={this.setValues}\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"models\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tor:[\"board_list\"]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MultiList\n\t\t\t\t\t\t\t\t\t\t\t\t//value={this.state.mlVal}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"models\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataField=\"model\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"elastic-facet-label\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput: \"form-control\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Models\"\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"manufacturers\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tor: [\"board_list\"]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderNoResults={() => <p>No Results Found!</p>}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={console.log('query changed',  this.state.filters)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ReactiveList\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"board_list\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataField=\"id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonData={this.elasticResultHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonQueryChange={this.onSortUpdated}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderResultStats={function (stats) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"elastic-meta\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stats.numberOfResults + \" Results Sorted By\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"col-12\"\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"models\", \"manufacturers\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpagination\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={DEFAULT_SHOW}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinfiniteScroll={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpagination: \"elastic-paginate\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortOptions: \"form-control elastic-sort\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderNoResults={function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div className=\"alert alert-primary text-center index-empty-resultset\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div>You Haven't Created Any Boards Yet</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div><button className=\"btn btn-sm btn-primary\"  onClick={showModal} >Get Started!</button></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsortOptions={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Newest To Oldest\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Oldest To Newest\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Name A->Z\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Name Z->A\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"rating\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Rating 1-10\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"rating\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Rating 10-1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpaginationAt=\"both\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ data }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.boards &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.boards.map((board) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={board.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"col-md-12 col-sm-12\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<BoardCard\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteBoard={this.deleteBoard}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBoard={this.boardCreated}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teditBoard={this.editBoard}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOwner={board.user_id === this.props.userSession.user.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"align-left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/img/LogoMakr_4GvwRg.png\"\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"glazewave\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Report />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t\t\t\t\t<NearestSpots />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6\"></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-right\"></span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ReactiveBase>\n\t\t\t\t<Modal show={this.state.show} handleClose={(e) => this.hideModal(e)}>\n\t\t\t\t\t<CreateUserBoard\n\t\t\t\t\t\tonSuccess={(e) => this.hideModal(e)}\n\t\t\t\t\t\tonSubmissionComplete={this.viewBoard}\n\t\t\t\t\t\tclose={this.hideModal}\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t</MainContainer>\n\t\t);\n\t}\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex);\n","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import \"./css/Board.css\";\nimport _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FormCard } from \"./../layout/FormCard\";\nimport { Form } from \"react-advanced-form\";\nimport { RIEInput, RIETextArea } from \"@attently/riek\";\nimport SessionCard from \"./../session/SessionCard\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport StarBar from \"./../layout/StarBar\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\nimport ImageUploader from \"react-images-upload\";\nimport ImageGallery from \"react-image-gallery\";\nimport TypeAheadInput from \"./../form/TypeAheadInput\";\nimport { sizes } from \"./data/board_sizes\";\nimport InlineEdit, { InputType } from \"riec\";\nimport { loadBoards } from \"./../../actions/board\";\nimport { loadShapers } from \"./../../actions/shaper\";\nimport { loadUserSessions } from \"./../../actions/user_session\";\nimport {\n\tloadUserBoard,\n\tupdateUserBoard,\n\tloadUserBoardImages,\n\taddUserBoardImages,\n\tdeleteUserBoardImage,\n} from \"./../../actions/user_board\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tboard: state.user_boards.selected,\n\t\tboards: state.boards.data,\n\t\tshapers: state.shapers.data,\n\t\timages: state.user_board_images,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoard: (session, params) =>\n\t\t\tdispatch(loadUserBoard(session, params)),\n\t\tloadSessions: (session, params) =>\n\t\t\tdispatch(loadUserSessions(session, params)),\n\t\tloadShapers: (session, params) =>\n\t\t\tdispatch(loadShapers(session, params)),\n\t\tloadBoards: (session, params) => dispatch(loadBoards(session, params)),\n\t\teditUserBoard: (session, params) =>\n\t\t\tdispatch(updateUserBoard(session, params)),\n\t\tloadBoardImages: (session, params) =>\n\t\t\tdispatch(loadUserBoardImages(session, params)),\n\t\taddImages: (session, params) =>\n\t\t\tdispatch(addUserBoardImages(session, params)),\n\t\tdeleteBoardImage: (session, id) =>\n\t\t\tdispatch(deleteUserBoardImage(session, id)),\n\t};\n};\n\nconst relations = {\n\tuser_session: [\"Location\", \"SessionImage\"],\n\tselected_board: [\n\t\t\"Board.Manufacturer\",\n\t\t\"Session.SessionImage\",\n\t\t\"Session.UserBoard\",\n\t],\n\tshapers: [\"Board\"],\n\tboards: [\"Manufacturer\"],\n};\n\nclass BoardView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsession: [],\n\t\t\tboard_id: \"\",\n\t\t\tmanufacturer_id: \"\",\n\t\t\tuploaderInstance: 1,\n\t\t\timageIndex: 0,\n\t\t\tmodelPlaceholder: null,\n\t\t\tboardSizeOptions: this.prepBoardSizeOptions(sizes),\n\t\t\tisDisabled: true,\n\t\t};\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\tid: this.props.match.params.id,\n\t\t\t\twiths: relations.selected_board,\n\t\t\t});\n\t\t\tthis.props.loadSessions(this.props.session, {\n\t\t\t\twheres: { board_id: this.props.match.params.id },\n\t\t\t\twiths: relations.user_session,\n\t\t\t});\n\t\t\tthis.props.loadBoards(this.props.session, {\n\t\t\t\tlimit: 1000,\n\t\t\t\twiths: relations.boards,\n\t\t\t});\n\t\t\tthis.props.loadShapers(this.props.session, {\n\t\t\t\twiths: relations.shapers,\n\t\t\t});\n\t\t\tthis.props.loadBoardImages(this.props.session, {\n\t\t\t\twheres: { user_board_id: this.props.match.params.id },\n\t\t\t});\n\t\t} else this.props.history.push(\"/board\");\n\t}\n\n\tprepBoardSizeOptions = (sizes) => {\n\t\tconst filteredSizes = [];\n\t\tsizes.forEach((size) => filteredSizes.push({ id: size }));\n\t\treturn filteredSizes;\n\t};\n\n\tonTypeAheadSelected = (propertyName, newValue) => {\n\t\tconst data = [];\n\t\tdata[propertyName] = newValue;\n\t\t//here we have to make sure to clear out the model if not belong to shaper\n\t\tif (propertyName === \"manufacturer_id\") {\n\t\t\tconst boardId = !Number.isInteger(this.state.board_id)\n\t\t\t\t? this.props.board.id\n\t\t\t\t: this.state.board_id;\n\t\t\tconst board = this.props.boards.find(\n\t\t\t\t(board) => board.id === boardId\n\t\t\t);\n\t\t\tif (board && board.manufacturer_id !== newValue) {\n\t\t\t\tdata[\"board_id\"] = \"\";\n\t\t\t\tdata[\"modelPlaceholder\"] = \"Choose A Board\";\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\t...data,\n\t\t});\n\t};\n\n\tgetShaperSuggestions = (value, reason) => {\n\t\t//if its empty or just focused let's show everything\n\t\tif (!value || reason === \"type_ahead_focused\")\n\t\t\treturn this.props.shapers;\n\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.shapers.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.name.toLowerCase().slice(0, inputLength) ===\n\t\t\t\t\t\tinputValue\n\t\t\t  );\n\t};\n\n\tgetBoardSuggestions = (value, reason) => {\n\t\t//if its empty or just focused let's show everything\n\t\tif (!value || reason === \"type_ahead_focused\") {\n\t\t\tconst shaperId =\n\t\t\t\tthis.state.manufacturer_id === \"\"\n\t\t\t\t\t? this.props.board.Board.manufacturer_id\n\t\t\t\t\t: this.state.manufacturer_id;\n\t\t\treturn this.props.boards.filter(\n\t\t\t\t(entity) => entity.manufacturer_id === shaperId\n\t\t\t);\n\t\t}\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.boards.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.model.toLowerCase().slice(0, inputLength) ===\n\t\t\t\t\t\t\tinputValue &&\n\t\t\t\t\t\tentity.manufacturer_id === this.state.manufacturer_id\n\t\t\t  );\n\t};\n\n\tsubmitUpdate = (data) => {\n\t\tthis.props.editUserBoard(this.props.session, {\n\t\t\tid: this.props.match.params.id,\n\t\t\tdata: data,\n\t\t});\n\t\tthis.setState(data);\n\t};\n\n\treturnToIndex = (e) => {\n\t\tthis.props.history.length > 1\n\t\t\t? this.props.history.goBack()\n\t\t\t: this.props.history.push(\"/board\");\n\t};\n\n\tonDrop(pictureFiles, pictureDataURLs) {\n\t\tif (!pictureFiles.length) return;\n\t\tconst formData = UserBoardRequests.createFormRequest({\n\t\t\tuser_board_id: this.props.board.id,\n\t\t\tuser_id: this.props.session.user.id,\n\t\t});\n\t\tpictureFiles.forEach((file, i) => {\n\t\t\tformData.append(\"photo\", file);\n\t\t});\n\t\tthis.props.addImages(this.props.session, { data: formData });\n\t\tthis.setState({ uploaderInstance: this.state.uploaderInstance + 1 });\n\t}\n\n\tonImageLoad = (e) => {\n\t\tthis.setState({ selectedImage: this.props.images[0] });\n\t};\n\n\tonImageSelected = (e) => {\n\t\tthis.setState({ selectedImage: this.props.images[e], imageIndex: e });\n\t};\n\n\tdeleteImage = (e) => {\n\t\tnew Promise((resolve, reject) => {\n\t\t\tresolve(\n\t\t\t\tthis.props.deleteBoardImage(\n\t\t\t\t\tthis.props.session,\n\t\t\t\t\tthis.state.selectedImage.id\n\t\t\t\t)\n\t\t\t);\n\t\t}).then((e) => {\n\t\t\tconst newIndex =\n\t\t\t\tthis.state.imageIndex === 0 ? 0 : this.state.imageIndex - 1;\n\t\t\tthis.setState({\n\t\t\t\timageIndex: newIndex,\n\t\t\t\tselectedImage: this.props.images[newIndex],\n\t\t\t});\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { board } = this.props;\n\t\tlet isOwner = this.props.board.user_id === this.props.session.user.id;\n\t\tconsole.log(\"isOwner\", isOwner);\n\t\tconst modelPlaceholder = this.state.modelPlaceholder\n\t\t\t? this.state.modelPlaceholder\n\t\t\t: board.Board\n\t\t\t? board.Board.model\n\t\t\t: \"Choose A Model\";\n\t\treturn (\n\t\t\t<MainContainer>\n\t\t\t\t<FormCard returnToIndex={this.returnToIndex}>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"details row\">\n\t\t\t\t\t\t\t\t<div className=\"col-6 session-title\">\n\t\t\t\t\t\t\t\t\t<RIEInput\n\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\tvalue={board.name || \"\"}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={board.name}\n\t\t\t\t\t\t\t\t\t\tchange={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\tpropName=\"name\"\n\t\t\t\t\t\t\t\t\t\teditProps={{ disabled: !isOwner }}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-6\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"preview col-6\">\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\talt=\"delete user\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \".5em\",\n\t\t\t\t\t\t\t\t\t\t\tfloat: \"left\",\n\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\ttop: \"1em\",\n\t\t\t\t\t\t\t\t\t\t\tzIndex: \"999\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tleft: \"1em\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ticon={faTrash}\n\t\t\t\t\t\t\t\t\t\tonClick={this.deleteImage}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.imageIndex}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ImageUploader\n\t\t\t\t\t\t\t\t\t\tkey={this.state.uploaderInstance}\n\t\t\t\t\t\t\t\t\t\twithIcon={false}\n\t\t\t\t\t\t\t\t\t\tbuttonText=\"+\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.onDrop}\n\t\t\t\t\t\t\t\t\t\timgExtension={[\n\t\t\t\t\t\t\t\t\t\t\t\".jpg\",\n\t\t\t\t\t\t\t\t\t\t\t\".jpeg\",\n\t\t\t\t\t\t\t\t\t\t\t\".png\",\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tmaxFileSize={5242880}\n\t\t\t\t\t\t\t\t\t\twithPreview={false}\n\t\t\t\t\t\t\t\t\t\twithLabel={false}\n\t\t\t\t\t\t\t\t\t\tbuttonClassName=\"upload-btn\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \".5em\",\n\t\t\t\t\t\t\t\t\t\t\tfloat: \"left\",\n\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\ttop: \"0\",\n\t\t\t\t\t\t\t\t\t\t\tzIndex: \"999\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tleft: \"3em\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<ImageGallery\n\t\t\t\t\t\t\t\t\t\t\titems={this.props.images}\n\t\t\t\t\t\t\t\t\t\t\tshowBullets={true}\n\t\t\t\t\t\t\t\t\t\t\tshowIndex={true}\n\t\t\t\t\t\t\t\t\t\t\tstartIndex={this.state.imageIndex}\n\t\t\t\t\t\t\t\t\t\t\tonSlide={this.onImageSelected}\n\t\t\t\t\t\t\t\t\t\t\tshowNav={false}\n\t\t\t\t\t\t\t\t\t\t\tonImageLoad={this.onImageLoad}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"details col-md-6\">\n\t\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t\t<StarBar\n\t\t\t\t\t\t\t\t\t\t\tstars={board.rating}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"1x\"\n\t\t\t\t\t\t\t\t\t\t\tstatic={!isOwner}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t\t<strong>Size:</strong>\n\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t<InlineEdit\n\t\t\t\t\t\t\t\t\t\t\ttype={InputType.Select}\n\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\tboard.size || \"Select A Size\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(data) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.submitUpdate({\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize: data,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\toptions={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.boardSizeOptions\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalueKey=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tlabelKey=\"id\"\n\t\t\t\t\t\t\t\t\t\t\teditClass=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tisDisabled={0}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Shaper/Company:</strong>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\t\t\t\tentity={this.props.shapers}\n\t\t\t\t\t\t\t\t\t\t\tname=\"manufacturer_id\"\n\t\t\t\t\t\t\t\t\t\t\tkeyName=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\tboard.Board &&\n\t\t\t\t\t\t\t\t\t\t\t\tboard.Board.Manufacturer\n\t\t\t\t\t\t\t\t\t\t\t\t\t? board.Board.Manufacturer\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Choose A Shaper\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.manufacturer_id}\n\t\t\t\t\t\t\t\t\t\t\tsetValue={this.onTypeAheadSelected}\n\t\t\t\t\t\t\t\t\t\t\tgetSuggestions={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getShaperSuggestions\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!isOwner}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Model:</strong>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\t\t\t\tentity={this.props.boards}\n\t\t\t\t\t\t\t\t\t\t\tname=\"board_id\"\n\t\t\t\t\t\t\t\t\t\t\tkeyName=\"model\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={modelPlaceholder}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.board_id}\n\t\t\t\t\t\t\t\t\t\t\tsetValue={this.onTypeAheadSelected}\n\t\t\t\t\t\t\t\t\t\t\tgetSuggestions={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getBoardSuggestions\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!isOwner}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Notes:</strong>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<RIETextArea\n\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\tboard.notes ||\n\t\t\t\t\t\t\t\t\t\t\t\t\"You have no notes for this board\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={board.notes}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control text-area\"\n\t\t\t\t\t\t\t\t\t\t\tchange={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\t\tpropName=\"notes\"\n\t\t\t\t\t\t\t\t\t\t\tvalidate={_.isString}\n\t\t\t\t\t\t\t\t\t\t\teditProps={{ disabled: !isOwner }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"row col-12\"\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"1em\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5>Used In Sessions...</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t{board.Sessions &&\n\t\t\t\t\t\t\t\t\tboard.Sessions.reduce(\n\t\t\t\t\t\t\t\t\t\t(mappedArray, session, index) => {\n\t\t\t\t\t\t\t\t\t\t\tif (index < 3) {\n\t\t\t\t\t\t\t\t\t\t\t\tmappedArray.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"col-md-4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SessionCard\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsession={session}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={session.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn mappedArray;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{(!board.Sessions ||\n\t\t\t\t\t\t\t\t\tboard.Sessions.length === 0) && (\n\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t<h3>No Sessions found at the moment</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</FormCard>\n\t\t\t</MainContainer>\n\t\t);\n\t}\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView);\n","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\n\nimport SessionView from './components/session/View';\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport BoardView from './components/board/View';\n\nimport { withRouter } from \"react-router\";\nimport cognitoUtils from './lib/utils/cognito'\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, user : state.user, api : state.api }\n}  \n\nclass App extends React.Component{\n\n  componentWillUpdate(){\n    //listen for any unautorized api calls, if they happen log user out\n    if(!this.props.api.authorized) cognitoUtils.signOutCognitoSession();\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session} username={this.props.user.first_name} />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\n//export default connect(mapStateToProps)(App)\nexport default withRouter(connect(mapStateToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    api_key : process.env.REACT_APP_GOOGLE_API_KEY\n}","require('dotenv').config();\nmodule.exports = {\n    api_key : process.env.REACT_APP_FACEBOOK_APP_ID\n}","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_ELASTIC_HOST, \n    credentials : process.env.REACT_APP_ELASTIC_CREDS,\n    sessions_index : process.env.REACT_APP_ELASTIC_SESSIONS_INDEX,\n    user_boards_index : process.env.REACT_APP_ELASTIC_USER_BOARDS_INDEX\n}"],"sourceRoot":""}