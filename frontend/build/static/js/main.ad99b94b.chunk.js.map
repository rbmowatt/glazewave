{"version":3,"sources":["lib/utils/session.js","reducers/session.js","actions/types.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","config/cognito.js","requests/BaseRequest.js","requests/UserRequests.js","actions/user.js","lib/utils/cognito.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","components/layout/StarBar.js","components/session/SessionCard.js","components/user/BoardCard.js","requests/UserBoardRequests.js","requests/SessionRequests.js","actions/user_session.js","actions/user_board.js","components/user/ProfileCard.js","components/user/Dashboard.js","components/session/SessionIndex.js","components/layout/Modal.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","components/board/data/board_sizes.js","requests/ManufacturerRequests.js","actions/shaper.js","requests/BoardRequests.js","actions/board.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/session/Edit.js","lib/utils/worldweather.js","components/session/View.js","components/board/BoardIndex.js","components/board/forms/BoardForm.js","components/board/Edit.js","components/board/View.js","components/location/LocationRow.js","components/location/LocationIndex.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/location/LocationForm.js","components/location/Create.js","components/location/Edit.js","components/location/View.js","components/manufacturer/ManufacturerRow.js","components/manufacturer/ManufacturerIndex.js","components/manufacturer/ManufacturerForm.js","components/manufacturer/Create.js","components/manufacturer/Edit.js","components/manufacturer/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/worldweather.js"],"names":["clearSession","Cookie","get","remove","existingSession","session","JSON","parse","current_time","Date","now","expiration","hasSession","initialState","isLoggedIn","isAdmin","state","action","type","Object","assign","user_board","selected","data","user_boards","payload","concat","filteredBoards","filter","board","id","parseInt","user_session","user_sessions","filteredSessions","item","user","api","newState","boards","require","config","s3Conf","process","original","thumbnail","session_images","length","prepImages","setImages","img","images","formattedImages","forEach","push","name","shapers","combineReducers","user_board_images","apiMiddleware","dispatch","next","url","method","accessToken","onSuccess","onFailure","label","headers","dataOrParams","includes","axios","defaults","baseURL","apiConfig","host","port","common","apiStart","request","then","catch","error","console","log","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","cognitoConfig","apiUrl","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","querystring","BaseRequest","REQUEST_TYPE","wheres","withs","limit","page","orderBy","e","getEndpoint","apiAction","getWhereString","getWithString","getlabel","getOne","create_bk","hdrs","post","create","delete","update","getHost","endpoint","withString","element","slice","stringify","headersOverride","this","createFormRequest","formData","FormData","entries","key","value","append","UserRequests","updateProfileImage","args","UserLoaded","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","getCognitoSession","set","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","email","given_name","family_name","credentials","refreshToken","token","userName","jwtToken","groups","Array","indexOf","exp","getState","params","logInUser","signOut","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","apiStatus","Login","hash","search","MainContainer","loaded","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","history","uname","map","username","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","submitFail","errorMessage","role","EditUser","put","setValues","match","StarBar","content","rating","stars","i","faStar","withRouter","SessionImages","editSession","deleteSession","moment","createdAt","calendar","UserBoard","Location","UserBoardImages","editBoard","deleteBoard","Board","model","UserBoardRequests","getImages","createImages","deleteImage","SessionRequests","UserSessionsLoaded","loadUserSessions","UserBoardsLoaded","loadUserBoards","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","loadUser","pictureFiles","pictureDataURLs","user_id","file","addImages","image","profile_img","rel","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","format","aria-valuenow","aria-valuemin","aria-valuemax","sessions","UserDashboard","loadBoards","loadSessions","UserSessionRequests","reduce","mappedArray","locations","UserLocations","relations","SessionIndex","viewSession","sessionId","UserSessionDeleted","deleteUserSession","Modal","handleClose","show","showHideClassName","TypeAheadInput","event","newValue","onBlur","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","shouldRenderSuggestions","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","onFocus","autoComplete","wrapperClass","display","createField","fieldPresets","input","matches","generic","missing","rule","sizes","ManufacturerRequests","loadShapers","ShapersLoaded","BoardRequests","BoardsLoaded","UserBoardForm","propertyName","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","serialized","fields","form","rules","messages","prop","keys","CreateUserBoard","createUserBoard","prevProps","prevState","snapshot","noUpdate","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","handleNoResult","handleStatusUpdate","locRender","prediction","types","description","libraries","googleMaps","autocompletionRequest","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","SessionForm","showModal","hideModal","defaultName","pictures","initialValue","obj","Create","createSession","EditSession","sessionRequest","wwConfig","WWO","createClient","responseType","subscription","locale","SessionView","setSelectedBoard","boardOptions","select","current_session","selectOptions","goBack","submitUpdate","editUserSession","onLocationChange","onLocationBlur","d","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","setToken","getForecast","results","colors","depth","Infinity","loadWorldWeather","WWClient","marineWeatherApi","q","tide","UserSessionRequest","defaultImage","loadSession","loadSessionImages","session_id","boardImage","change","propName","items","showBullets","showIndex","startIndex","onSlide","showTimeSelect","dateFormat","placeholderText","InputType","Select","options","valueKey","labelKey","notes","validate","_","isString","UserSessionLoaded","loadUserSession","UserSessionUpdated","updateUserSession","UserSessionImagesLoaded","loadUserSessionImages","UserSessionImagesCreated","addUserSessionImages","UserSessionImageDeleted","deleteUserSessionImage","BoardIndex","viewBoard","boardId","UserBoardDeleted","deleteUserBoard","BoardForm","manufacturers","models","is_public","EditBoard","selected_board","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","loadBoard","loadBoardImages","user_board_id","s","showNav","Manufacturer","Sessions","UserBoardLoaded","loadUserBoard","UserBoardUpdated","updateUserBoard","UserBoardImagesLoaded","loadUserBoardImages","UserBoardImagesCreated","addUserBoardImages","UserBoardImageDeleted","deleteUserBoardImage","LocationRow","viewLocation","City","editLocation","deleteLocation","LocationIndex","locationId","isPublic","faBowlingBall","removeImage","public_id","URL","createObjectURL","multiple","accept","faImage","LocationForm","files","uploading","submitted_by","Spinner","Images","Buttons","EditLocation","LocationView","pic","picture","ManufacturerRow","manufacturer","viewManufacturer","editManufacturer","deleteManufacturer","ManufacturerIndex","manufacturerId","ManufacturerForm","EditManufacturer","ManufacturerView","App","path","exact","CreateSession","CreateLocation","CreateManufacturer","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","REACT_WORLD_WEATHER_KEY"],"mappings":"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","file":"static/js/main.ad99b94b.chunk.js","sourcesContent":["import Cookie from \"js-cookie\"\n\nexport function setSessionCookie(session)\n{\n  Cookie.set(\"x-token\", session);\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(Cookie.get(\"x-token\"))\n    {\n      const session = JSON.parse(Cookie.get(\"x-token\"));\n      var current_time = Date.now() / 1000;\n      if ( session.expiration > current_time) {\n        return session;\n      }\n      clearSession();\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(Cookie.get(\"x-token\"))\n  {\n    Cookie.remove(\"x-token\")\n  }\nreturn false;\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\nexport const SET_USER = \"SET_USER\";\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\nexport const USER_BOARD_DELETED=\"USER_BOARD_DELETED\";\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"\nexport const USER_SESSION_DELETED=\"USER_SESSION_DELETED\"\n\nexport const SHAPERS_LOADED=\"SHAPERS_LOADED\";\n\nexport const BOARDS_LOADED=\"BOARDS_LOADED\";\n\nexport const USER_BOARD_IMAGES_LOADED=\"USER_BOARD_IMAGES_LOADED\";\n\nexport const USER_BOARD_IMAGES_CREATED=\"USER_BOARD_IMAGES_CREATED\";\n\nexport const USER_BOARD_IMAGE_DELETED = \"USER_BOARD_IMAGE_DELETED\"\n\nexport const USER_SESSION_LOADED=\"USER_SESSION_LOADED\";\n\nexport const USER_SESSION_IMAGES_LOADED=\"USER_SESSION_IMAGES_LOADED\";\n\nexport const USER_SESSION_IMAGES_CREATED=\"USER_SESSION_IMAGES_CREATED\";\n\nexport const USER_SESSION_IMAGE_DELETED = \"USER_SESSION_IMAGE_DELETED\";\n\nexport const USER_LOGGED_IN=\"USER_LOGGED_IN\";\n\nexport const USER_LOADED=\"USER_LOADED\"","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED, USER_BOARD_DELETED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : []\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState  = state.concat(action.payload);\n      return newState;\n    case USER_BOARD_DELETED :\n      const filteredBoards  =  state.data.filter(board => { return board.id !== parseInt(action.payload)});\n      newState = {...state, ...{data : filteredBoards}}\n      return newState;\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {USER_SESSION_CLEARED, SET_USER_SESSIONS, SESSION_CREATED, DELETE_USER_SESSION, USER_SESSION_UPDATED, USER_SESSION_DELETED, USER_SESSION_LOADED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : []\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_LOADED:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_SESSION_DELETED :\n        const filteredSessions  =  state.data.filter(session => { return session.id !== parseInt(action.payload)});\n        newState = {...state, ...{data : filteredSessions}}\n        return newState;\n    case SESSION_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload)}}\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import {USER_LOADED} from './../actions/types';\n\n\nconst initialState = {};\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return action.payload;\n    default:\n      return state\n  }\n}\nexport default user","const initialState = 0;\nconst api = (state = initialState, action) => {\nlet newState = state;\n  switch (action.type) {\n    case 'API_START':\n        return newState +1;\n    case 'API_END':\n        newState = state-1;\n        return newState;  \n    default :\n        return newState;\n}}\nexport default api;","import {BOARDS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case BOARDS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\nimport {USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_IMAGES_LOADED:\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_SESSION_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_SESSION_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\nimport {USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_BOARD_IMAGES_LOADED :\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_BOARD_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_BOARD_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import {SHAPERS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case SHAPERS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default shapers;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd } from \"./../actions/api\";\nimport apiConfig from './../config/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n   const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n        console.log('error', error)\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n\n    \"email\"\n\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import axios from 'axios';\nimport apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        console.log('im getting', this.getEndpoint() )\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n\n    create_bk = (data, hdrs = {}) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return axios.post(this.getEndpoint() , data , headers)\n    }\n\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         //const headers = {...this.session.headers, ...hdrs};\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n\n       // return axios.put(this.getEndpoint() + `/` + entityId , data,  this.session.headers);\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n       \n    }\n\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = null,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n}\nexport default UserRequests;","import { USER_LOADED, USER_LOGGED_IN} from \"./types\";\nimport UserRequests from './../requests/UserRequests';\n\n\nexport const UserLoaded = data => ({\n    type: USER_LOADED,\n    payload: data\n  });\n\n  export const UserLoggedIn = data => ({\n    type: USER_LOGGED_IN,\n    payload: data\n  });\n\n\n  \n\n  export const logInUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      console.log('i should be loading user with ', args);\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).get(params)\n      )\n    }\n  }\n\n\n  export const loadUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getOne(params)\n      )\n    }\n  }","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nimport {logInUser} from './../../actions/user';\n\n\nconst axios = require('axios');\n\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession(dispatch)) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      axios.get( apiConfig.host + apiConfig.port + `/api/user/firstOrNew?username=` + result.idToken.payload['cognito:username'] \n      + '&email=' + result.idToken.payload.email + '&first_name=' + result.idToken.payload.given_name + '&last_name=' + result.idToken.payload.family_name\n        ).then(data => {\n        console.log('getting new session', data.data[0]);\n        const session = {\n          credentials: {\n            //accessToken: result.accessToken.jwtToken,\n            //idToken: result.idToken.jwtToken,\n            refreshToken: result.refreshToken.token\n          },\n          user: {\n            id : data.data.id,\n            userName: result.idToken.payload['cognito:username'],\n            email: result.idToken.payload.email\n          },\n          headers: `Authorization: Bearer ${result.accessToken.jwtToken}`,\n          groups : result.idToken.payload['cognito:groups'],\n          isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n          expiration : result.accessToken.payload.exp,\n          isLoggedIn : true\n        }\n        session.user = {...session.user, ...data.data[0]};\n        dispatch(logInUser(session, {wheres : {email : result.idToken.payload.email}}));\n        resolve(session);\n      });     \n\n     \n    })\n  })\n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          My Memo</Link>\n                      }\n \n                {props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.session.user.userName}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (false){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { apiStatus: 'Not called' }\n  }\n\n  componentDidMount () {\n    //this.props.initSession();\n    if (this.props.session.isLoggedIn) {\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n        <div className=\"intro container-fluid\">\n        Welcome to MySurfSesh\n          </div>\n          <img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={this.props.api === 0}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const onClick = (rating) =>\n    {\n        console.log(rating)\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className={props.className}>\n            <div className=\"col-md-12 session-card-title\"><h5><a onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</a></h5></div>\n            <div className=\"col-md-3\">\n                <img src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n            </div>\n            <div className=\"col-md-9\">\n                <div className=\"col-md-12\">\n                    { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                    { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteSession(props.session.id)} /> }\n                </div>\n                <div className=\"col-md-12\" >{moment(props.session.createdAt).calendar()}</div>\n                <div className=\"col-md-12\" ><StarBar stars={props.session.rating} /></div>\n                <div className=\"col-md-12\" >{props.session.UserBoard && props.session.UserBoard.name}</div>\n                <div className=\"col-md-12\" >{props.session.Location && props.session.Location.name}</div>\n        </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = props =>{\n    return (\n        <div className={props.className}>\n            <div className=\"col-md-12 board-card-title\"><h5><a onClick={()=>props.history.push(\"/board/\" + props.board.id)}>{props.board.name}</a></h5></div>\n            <div className=\"col-md-3\">\n            <img src={props.board.UserBoardImages && props.board.UserBoardImages.length ? s3Conf.root + props.board.UserBoardImages[0].name : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n          \n            </div>\n            <div className=\"col-md-9\">\n            <div className=\"col-md-12\">\n                { props.editBoard && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editBoard(props.board.id)} /> }\n                { props.deleteBoard && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteBoard(props.board.id)} /> }\n            </div>\n            <div><StarBar stars={props.board.rating} /></div>\n            <div>{props.board.size} {props.board.Board && props.board.Board.model}</div>\n               \n                \n            </div>\n        </div>\n    )\n}\nexport default withRouter(BoardCard);","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { SET_USER_SESSION, SET_USER_SESSIONS, USER_SESSION_UPDATED, USER_SESSION_CLEARED, USER_SESSION_DELETED, USER_SESSION_LOADED, USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED  } from \"./types\";\nimport SessionRequests from './../requests/SessionRequests';\n\n\nexport const UserSessionImagesLoaded = data => ({\n  type: USER_SESSION_IMAGES_LOADED,\n  payload: data\n});\n\nexport const UserSessionImagesCreated = data => ({\n  type: USER_SESSION_IMAGES_CREATED,\n  payload: data\n});\n\nconst UserSessionImageDeleted = data=> (\n  {\n    type: USER_SESSION_IMAGE_DELETED,\n    payload: data\n  }\n)\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n  export const UserSessionLoaded = data => ({\n    type: USER_SESSION_LOADED,\n    payload: data\n  });\n\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  const UserSessionDeleted = data=> (\n    {\n      type: USER_SESSION_DELETED,\n      payload: data\n    }\n  )\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n\nexport const loadUserSessions = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionsLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).get(params)\n    )\n  }\n}\n\nexport const loadUserSession = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getOne(params)\n    )\n  }\n}\n\n\nexport const deleteUserSession = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).delete(params)\n    )\n  }\n}\n\nexport const updateUserSession = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionUpdated(data)} }}\n    dispatch(\n      new SessionRequests(session).update(params)\n    )\n  }\n}\n\n\n\nexport const loadUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getImages(params)\n    )\n  }\n}\n\nexport const addUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).createImages(params)\n    )\n  }\n}\n\nexport const deleteUserSessionImage = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionImageDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).deleteImage(params)\n    )\n  }\n}\n","import { SET_USER_BOARDS, USER_BOARD_UPDATED, USER_BOARD_DELETED, SET_USER_BOARD, USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED } from \"./types\";\nimport UserBoardRequests from './../requests/UserBoardRequests';\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardImagesLoaded = data => ({\n    type: USER_BOARD_IMAGES_LOADED,\n    payload: data\n  });\n\n  export const UserBoardImagesCreated = data => ({\n    type: USER_BOARD_IMAGES_CREATED,\n    payload: data\n  });\n\n  export const UserBoardLoaded = data => ({\n    type: SET_USER_BOARD,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n  const UserBoardDeleted = data=> (\n    {\n      type: USER_BOARD_DELETED,\n      payload: data\n    }\n  )\n\n  const UserBoardImageDeleted = data=> (\n    {\n      type: USER_BOARD_IMAGE_DELETED,\n      payload: data\n    }\n  )\n\n\n  export const loadUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardsLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).get(params)\n      )\n    }\n  }\n\n  export const deleteUserBoard = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).delete(params)\n      )\n    }\n  }\n\n  export const updateUserBoard = (session, args) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardUpdated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).update(params)\n      )\n    }\n  }\n\n  export const loadUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getImages(params)\n      )\n    }\n  }\n\n  export const addUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).createImages(params)\n      )\n    }\n  }\n\n  export const deleteUserBoardImage = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardImageDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).deleteImage(params)\n      )\n    }\n  }\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\nimport {loadUser} from './../../actions/user';\n\nconst mapStateToProps = state => {\n    return { user : state.user, session : state.session }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      addImages : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}})),\n      loadUser : (session, params)=>dispatch(loadUser(session, params))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(this.props.session, {id : this.props.session.user.id} );\n        }\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        console.log('pic files', pictureFiles.length)\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(new UserRequests(this.props.session), formData);\n        //this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n        <div className=\"container\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n            <div className=\"team-single\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div className=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <h4 className=\"margin-10px-bottom font-size24 md-font-size22 sm-font-size20 font-weight-600\">{user.username}</h4>\n                            <div className=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </div>\n                            <div className=\"margin-20px-top team-single-icons\">\n                                <ul className=\"no-margin\">\n                                    <li><a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 col-md-7\">\n                        <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p className=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div className=\"contact-info-section margin-40px-tb\">\n                                <ul className=\"list-style9 no-margin\">\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong className=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-envelope text-pink\"></i>\n                                                <strong className=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p><a href=\"javascript:void(0)\">{user.email}</a></p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <h5 className=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div className=\"sm-no-margin\">\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Positive Behaviors</div>\n                                        <div className=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard)","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport  MainContainer  from './../layout/MainContainer';\nimport { Link } from 'react-router-dom';\nimport SessionCard from './../session/SessionCard';\nimport BoardCard from './BoardCard';\nimport UserRequests from './../../requests/UserRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport UserSessionRequests from './../../requests/SessionRequests';\nimport {UserSessionsLoaded} from './../../actions/user_session';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {loadUserd} from './../../actions/user';\nimport './css/Dashboard.css'\nimport ProfileCard from './ProfileCard';\n\n\nconst DASHBOARD_LIST_LIMIT = 3; \nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data, locations : state.user.UserLocations }\n  }\n\n  const withs = \n  {\n    user : [],\n    boards : ['Board', 'UserBoardImage'],\n    sessions : ['UserBoard', 'SessionImage', 'Location']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n       // loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n        loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, withs : withs.boards, onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n        loadSessions: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, withs : withs.sessions, onSuccess : (data)=>{return UserSessionsLoaded(data)}})),\n    };\n  };\n\nclass UserDashboard extends React.Component{\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            //this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSessions(new UserSessionRequests(this.props.session), this.props.session );\n        }\n    }\n     \n    render() {\n        const { user_sessions, boards } = this.props;\n        return (\n           <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text dashboard-boxes\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-2\">\n                                        <div><Link to={'/session/create'} className=\"btn btn-sm btn-outline-secondary\"> New Session</Link></div> \n                                        <div><Link to={'/board/create'} className=\"btn btn-sm btn-outline-secondary\">New Board</Link></div> \n                                        <div><a className=\"btn btn-sm btn-outline-secondary\" href=\"#\">dddddd</a></div> \n                                    </div>\n                                    <div className=\"col-md-10 row\">\n                                         <div className=\"col-md-12\"><ProfileCard /></div>\n                                        <div className=\"col-md-6\">\n                                            Sessions\n                                            {\n                                                user_sessions && user_sessions.reduce((mappedArray, session, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <div key={session.id} className=\"card row\">\n                                                                <SessionCard session={session} key={session.id} className=\"row col-md-12\" />\n                                                                </div>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            Boards\n                                            {\n                                                boards && boards.reduce((mappedArray, board, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <div key={board.id} className=\"card row\">\n                                                                    <BoardCard board={board} key={board.id} className=\"row col-md-12\" />\n                                                                </div>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }                              \n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps )(UserDashboard)\n","import 'react-confirm-alert/src/react-confirm-alert.css'; \nimport React, { Component } from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport  MainContainer  from './../layout/MainContainer';\nimport SessionCard from './SessionCard';\nimport {loadUserSessions, deleteUserSession} from './../../actions/user_session';\n\nconst mapStateToProps = state => {\n    return { session: state.session, sessions : state.user_sessions.data, api : state.api }\n}\n\nconst mapDispachToProps = dispatch => {\n    return {\n        loadSessions: (session, params) => dispatch( loadUserSessions(session, params)), \n        deleteSession: (session, id) => dispatch( deleteUserSession(session, id))\n    };\n};\n\nconst relations = {\n    user_session : ['UserBoard', 'Location', 'SessionImage']\n};\n\nclass SessionIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { sessions: [], headers : {}, isAdmin : false }\n        this.deleteSession = this.deleteSession.bind(this);\n        this.editSession = this.editSession.bind(this);\n        this.viewSession = this.viewSession.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            this.props.loadSessions(this.props.session, { orderBy : 'created_at_DESC',  wheres : {user_id : this.props.session.user.id }, withs : relations.user_session } );\n        }\n    }\n\n    deleteSession(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    this.props.deleteSession(this.props.session, id);\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editSession(sessionId) {\n        this.props.history.push('/session/edit/' + sessionId);\n    }\n\n    viewSession(sessionId) {\n        this.props.history.push('/session/' + sessionId);\n    }\n\n    render() {\n        const {sessions} = this.props;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Sessions\n                        { <Link to={'session/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Session</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row col-md-12\">\n                                {sessions && sessions.map(session =>                        \n                                    <SessionCard session={session} key={session.id}  className=\"col-md-3\" deleteSession={this.deleteSession} viewSession={this.viewSession} editSession={this.editSession}  />                              \n                                )}\n                                {\n                                    (!sessions  || sessions.length === 0) &&  <div className=\"col-12\"><h3>No sessionS found at the moment</h3></div>\n                                } \n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex)","import * as React from 'react';\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n          <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n        </section>\n      </div>\n    );\n  };\n\n  export default Modal;","import React from 'react'\nimport { createField, fieldPresets } from 'react-advanced-form'\nimport Autosuggest from 'react-autosuggest';\n\n\n\nclass TypeAheadInput extends React.Component {\n  \n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            value: props.value || '',\n            suggestions : props.entity\n          };\n    }\n  \n    onChange = (event, { newValue } ) => {\n      console.log('key', newValue)\n        if(this.state.value !== newValue)\n        {\n          this.setState({\n            value: newValue\n          });\n        }\n      };\n\n      onBlur = (event) => {\n        if(this.state.value)\n        console.log('blur', event.target.value)\n          let vid = this.props.entity.find(x => x[this.props.keyName] === event.target.value);\n          this.props.setValue(this.props.name, vid ? vid.id : event.target.value)\n        };\n  \n\n    getSuggestionValue = suggestion => suggestion[this.props.keyName];\n  \n    renderSuggestion = suggestion => (\n        <div>\n          {suggestion[this.props.keyName]}\n        </div>\n      );\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value, reason }) => {\n      this.setState({\n        suggestions: this.props.getSuggestions(value, reason)\n      });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) =>\n    {\n      console.log(event.target);\n      //let vid = this.props.entity.find(x => x[this.props.keyName] === newValue);\n      this.props.setValue(this.props.name, suggestion.id)\n    }\n\n    shouldRenderSuggestions = (value) => {\n      return true\n    }\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState\n\n    const inputClassNames = [\n      'form-control',\n      touched && 'is-touched',\n      pristine && 'is-pristine',\n      validating && 'is-validating',\n      validatedSync && 'validated-sync',\n      validatedAsync && 'validated-async',\n      valid && 'is-valid',\n      validSync && 'valid-sync',\n      validAsync && 'valid-async',\n      invalid && 'is-invalid',\n      'sc-EHOje fVJbnH'\n    ]\n      .filter(Boolean)\n      .join(' ')\n\n      const inputProps = {\n        ...fieldProps,\n        value,\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        onFocus : ()=>this.onSuggestionsFetchRequested({value : name , reason : 'type_ahead_focused'}),\n        id: name,\n        name,\n        className: inputClassNames,\n        autoComplete: \"off\"\n      };\n\n    const wrapperClass = this.props.display ? \"sc-bxivhb eTopIC\" : \"sc-bxivhb eTopIC d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && ' *'}\n          </label>\n        )}\n\n\n        <div className=\"sc-ifAKCX fatWUN\">\n        <Autosuggest \n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected={this.onSuggestionSelected}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                shouldRenderSuggestions={this.shouldRenderSuggestions}\n                //focusInputOnSuggestionClick={false}\n                //alwaysRenderSuggestions={true}\n            />\n       </div>\n\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import { SHAPERS_LOADED } from \"./types\";\nimport ManufacturerRequests from './../requests/ManufacturerRequests';\n\n\nexport const ShapersLoaded = data => ({\n    type: SHAPERS_LOADED,\n    payload: data\n  });\n\n\n\n  export const loadShapers= ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return ShapersLoaded(data)} }}\n      dispatch(\n        new ManufacturerRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import { BOARDS_LOADED } from \"./types\";\nimport BoardRequests from './../requests/BoardRequests';\n\nexport const BoardsLoaded = data => ({\n    type: BOARDS_LOADED,\n    payload: data\n  });\n\n  export const loadBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return BoardsLoaded(data)} }}\n      dispatch(\n        new BoardRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport { Input, Select, Textarea, Button } from 'react-advanced-form-addons';\nimport TypeAheadInput  from './../../form/TypeAheadInput';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport ImageUploader from 'react-images-upload';\nimport { sizes } from './../data/board_sizes';\nimport {loadShapers} from './../../../actions/shaper';\nimport {loadBoards} from './../../../actions/board';\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards: state.boards.data, shapers : state.shapers.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadShapers: (session, params) => dispatch( loadShapers(session, params)), \n        loadBoards: (session, params) => dispatch(loadBoards(session, params)), \n    };\n  };\n\n  const relations = {\n      shapers : ['Board'],\n      boards : ['Manufacturer']\n  }\n\nclass UserBoardForm extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null\n        };\n    }\n\n    onChange = (propertyName , newValue ) => {\n        console.log('new val', newValue);\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n        console.log('state', this.state)\n      };\n\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.length) this.props.loadBoards(this.props.session, {limit : 1000,   withs : relations.boards});\n            if(!this.props.shapers.length) this.props.loadShapers(this.props.session, {limit : 1000,   withs : relations.shapers});\n        } else {\n                this.props.history.push('/');\n        }\n    }\n\n    getBoardSuggestions = value => {\n        if(!value){\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === this.state.manufacturer_id\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n      getShaperSuggestions = value => {\n        if(!value) return this.props.shapers;\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n\n    render(){\n        return (\n            <div className=\"col-md-12\">\n                <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n                <div className=\"col-md-8 \">\n                    <Input name=\"name\" label=\"What do you like to call this board?\" className=\"form-control\" required />\n                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                        keyName=\"name\"\n                        label=\"choose a shaper\" \n                        className=\"form-control\" \n                        placeholder=\"Unknown\" \n                        value={this.state.manufacturer_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getShaperSuggestions} \n                        display={true} required \n                    />\n                    <TypeAheadInput  entity={this.props.boards} \n                        name=\"board_id\" \n                        keyName=\"model\"\n                        label=\"choose a model\" \n                        className=\"form-control\" \n                        placeholder=\"choose a board\" \n                        value={this.state.board_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getBoardSuggestions}\n                        display={this.state.manufacturer_id !== null }\n                         required \n                    />\n                    <Select name=\"size\" label=\"Choose A Size\" >\n                        <option value=''>No size Selected</option>\n                        {sizes.map((size) => {\n                                return <option key={size} prop={size} value={size}>{size}</option>\n                            })} \n                    </Select>\n                    <Select name=\"rating\" label=\"What would you rate this Board on a scale of 1-10?\" >\n                        {[...Array(11).keys()].map((value, index) => {\n                            if(value === 0) return;\n                                return  <option key={index} value={value}>{value}</option>\n                        })}\n                    </Select>\n                    <Select name=\"is_public\" label=\"Should this Board be Public to ALL logged-in Users?\" >\n                        <option value=\"0\">Private</option>\n                        <option value=\"1\">Public</option>\n                    </Select>\n                    <Textarea name=\"notes\" label=\"Notes\"  />\n                    {\n                        this.props.children \n                    }\n                </div>\n                <div className=\"col-md-4\">\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Choose images'\n                        onChange={this.props.onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n                <div className=\"col-md-12\">\n                    <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n                    <Button type='submit'>  {(this.props.edit) ? (\"Edit Board\") : ( \"Add Board\") }</Button>\n                </div>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps  )(UserBoardForm);","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport {FormCard} from './../layout/FormCard';\nimport  UserBoardForm  from './forms/UserBoardForm';\nimport { withRouter} from 'react-router-dom';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport {loadUserBoards} from './../../actions/user_board';\n\n\n\nconst TITLE=\"Create Board\";\n\nconst mapStateToProps = state => {\n    return { session: state.session, user_boards : state.user_boards }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createUserBoard : (request, data) => dispatch( request.create({label : 'CREATE_USER_BOARD', data: data , onSuccess : (data)=>{ return {type: \"USER_BOARD_CREATED\", payload: data}}})),\n        loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n    };\n  };\n\nclass CreateUserBoard extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : []\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.noUpdate) return;\n        if (prevProps.user_boards.length !== this.props.user_boards.length) {\n            this.setState({ submitSuccess : true })\n            this.props.loadBoards(this.props.session, {wheres : {user_id : this.props.session.user.id }, withs : ['Board.Manufacturer', 'UserBoardImage']});\n            setTimeout(() => {\n                this.props.history.push('/board');\n            }, 1500)\n        }\n    }\n\n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.history.push('/');\n        } \n    }\n    \n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createUserBoard} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = UserBoardRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createUserBoard(new UserBoardRequests(session), formData);\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.push('/board');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage} = this.state;\n        return (\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <UserBoardForm board={this.state.board} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading}  onDrop={this.onDrop} />\n                    </div>\n                </FormCard>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(withRouter(CreateUserBoard));\n","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\n\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n        const {search, value} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb eTopIC\" : \"sc-bxivhb eTopIC d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from 'react';\nimport Modal from './../../layout/Modal';\nimport { connect } from 'react-redux';\nimport CreateUserBoard from  './../../board/CreateUserBoard';\nimport { Form } from 'react-advanced-form';\nimport { Input, Select, Textarea, Button } from 'react-advanced-form-addons';\nimport Location from './../../form/Location';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment'\nimport {loadUserBoards} from './../../../actions/user_board';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n      };\n  };\n\n  const relations = {\n      user_boards : ['Board']\n  }\n\nclass SessionForm extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.defaultName = moment().format('MMMM D YYYY, h:mm a');\n        this.state = {show:false, pictures : props.pictures, location_id : ''}\n    }\n\n    onChange = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n      };\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.length)\n            this.props.loadBoards(this.props.session, {wheres : {user_id : this.props.session.user.id }} );\n        }\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n    };\n\n    hideModal = (e = false) => {\n        if(e) e.preventDefault();\n        this.setState({ show: false });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevProps.boards.length !== this.props.boards.length)) {\n            setTimeout(() => {\n                this.hideModal();\n            }, 1500)\n        }\n    }\n\n    render(){ \n        return (\n            <div className=\"col-md-12\">\n            <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n            <div className=\"col-md-8 \">\n           \n            <Input name=\"title\" \n                label=\"Session Name\" \n                className=\"form-control\" \n                initialValue={this.defaultName}\n                required \n            />\n            <Location \n                id=\"location_id\" \n                name=\"location_id\" \n                label=\"Where You paddling Out?\" \n                className=\"form-control\" \n                onChange={this.onChange} \n                value={this.state.location_id} />\n     \n            <Select name=\"board_id\" label=\"Which Board Did You Use?\" >\n                  {this.props.boards.map((obj) => {\n                        return <option key={obj.id} prop={obj.name} value={obj.id}>{obj.name}</option>\n                    })}\n            </Select>\n            \n            <Button type='button' onClick={this.showModal}>Add A Board</Button>\n            <Select name=\"rating\" label=\"What would you rate this Session on a scale of 1-10?\" >\n                {[...Array(11).keys()].map((value, index) => {\n                    if(value === 0) return;\n                        return  <option key={index} value={value}>{value}</option>\n                })}\n            </Select>\n            <Select name=\"is_public\" label=\"Should this Session be Public to ALL logged-in Users?\" >\n                <option value=\"0\">Private</option>\n                <option value=\"1\">Public</option>\n            </Select>\n            <Textarea name=\"notes\" label=\"Notes\"  />\n            {\n                this.props.children \n            }\n            </div>\n            <div className=\"col-md-4\">\n            <ImageUploader\n                withIcon={false}\n                buttonText='Choose images'\n                onChange={this.props.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n                withPreview={true}\n            />\n            </div>\n            <div className=\"col-md-12\">\n            <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n            <Button type='submit'>  {(this.props.edit) ? (\"Edit Session\") : ( \"Add Session\") }</Button>\n            </div>\n            </Form>\n            <Modal show={this.state.show} handleClose={(e) =>this.hideModal(e)}>\n                <CreateUserBoard onSuccess={(e) =>this.hideModal(e)} noUpdate={true} />\n            </Modal>\n            </div>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport  MainContainer  from './../layout/MainContainer';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession : (request, data) => dispatch( request.create({label : 'LOAD_USER', data: data , onSuccess : (data)=>{ return {type: \"SESSION_CREATED\", payload: data}}}))};\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.user_sessions.length !== this.props.user_sessions.length) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                this.props.history.push('/user/dashboard');\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ serialized, fields, form})=> {\n        console.log(serialized, fields, form)\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createSession(new SessionRequests(session), formData);\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        console.log('initial images = ', images)\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                <div className=\"col-md-12 row \">\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new session\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}    \n                        </div>\n                         <div className=\"col-md-12\">           \n                        <SessionForm session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop}>\n                   \n                        </SessionForm>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\n\nconst TITLE = \"Edit Session\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditSession extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n        this.sessionRequest = new SessionRequests(this.props.session);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            axios.get(apiConfig.host + apiConfig.port + `/api/session/${this.state.id}`, this.props.session.headers).then(data => {\n                const session = data.data;\n                this.setState({ session});\n            })\n            .catch(error=>this.props.history.push('/session'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.sessionRequest.update(this.state.id, this.state.values).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/session');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.push('/user/dashboard');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Session details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <SessionForm session={this.state.session} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditSession)\n","import WWO from 'worldweatheronline-api';\nimport  wwConfig  from './../../config/worldweather';\n\nconsole.log('ww comf', wwConfig);\nexport default WWO.createClient({\n    //key: wwConfig.key,\n    key : 'd83ea85d7b8b4e4aa71161416200506',\n    responseType: 'json',\n    subscription: 'premium',\n    locale: 'EN'\n});","import './Session.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport {FormCard} from './../layout/FormCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport InlineEdit, { InputType } from 'riec';\nimport Location from './../form/Location';\nimport MainContainer from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {loadUserBoards} from './../../actions/user_board';\nimport {UserSessionCleared,loadUserSession, updateUserSession, loadUserSessionImages, addUserSessionImages, deleteUserSessionImage} from './../../actions/user_session';\nimport WWClient from './../../lib/utils/worldweather'\nimport noaaForecaster from 'noaa-forecasts';\nimport { s3Conf } from './../../config/s3';\n\n\nconst mapStateToProps = state => {\n    return { \n        session: state.session, \n        current_session : state.user_sessions.selected, \n        boards : state.user_boards.data, \n        session_images : state.session_images, \n        api:state.api \n    }\n  }\n\n  const withs = {\n    session : ['Location', 'UserBoard.UserBoardImage']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadSession : (session, params)=>dispatch(loadUserSession(session, params)),\n      loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n      clearSession : ()=>dispatch(UserSessionCleared()),\n      editUserSession: (session, params) => dispatch(updateUserSession(session, params)), \n      loadSessionImages: (session, params) => dispatch(loadUserSessionImages(session, params)), \n      addImages : (session, params) => dispatch(addUserSessionImages(session, params)), \n      deleteSessionImage: (session, id) => dispatch( deleteUserSessionImage (session, id))\n    };\n  };\n\nclass SessionView extends Component {\n\n    \n    constructor(props)\n    {\n        super(props)\n        this.UserSessionRequest = new SessionRequests(props.session);\n        \n        this.state = { \n            boards : [], \n            select: {id : 0, name : 'No Board Selected'},\n            selectedImage : null,\n            selectOptions: [],\n            uploaderInstance : 1,\n            imageIndex : 0,\n            date: '',\n            defaultImage : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\"\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoards(this.props.session, {wheres : {user_id : this.props.session.user.id }} );\n            this.props.loadSession(this.props.session, {id : this.props.match.params.id,  withs : withs.session});\n            this.props.loadSessionImages(this.props.session, {wheres : {session_id : this.props.match.params.id }} );\n        }\n       else{\n            this.props.history.push('/session');\n       }\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = SessionRequests.createFormRequest({session_id : this.props.current_session.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n      \n    }\n\n    componentWillUpdate()\n    {\n        (this.props.boards.length && !this.state.selectOptions.length && this.props.current_session.id) && this.setSelectedBoard();\n    }\n\n    setSelectedBoard = () =>\n    {\n        const boardOptions = [];\n        let select = this.state.select\n        this.props.boards.map((obj) => {\n            let board = { id : obj.id , name : obj.name};\n            if(obj.id === this.props.current_session.board_id) select = board;\n            boardOptions.push(board) \n        })\n        this.setState({selectOptions: boardOptions, select : select})\n    }\n\n    componentWillUnmount(){\n        this.props.clearSession();\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/user/dashboard');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserSession(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    onLocationChange = (propertyName , newValue ) => {\n        if(!newValue) return;\n        const data = [];\n        data[propertyName] = newValue;\n        this.submitUpdate({ ...data});\n      };\n\n    onLocationBlur = (e, a, d) =>\n    {\n        console.log('blur', e, a, d)\n    }\n\n    onBoardChange = (id) =>\n    {\n        this.submitUpdate({ board_id : id});\n        const idInt = parseInt(id);\n        this.state.selectOptions.map((obj) => {\n            if(obj.id === idInt ) this.setState({select : obj});\n            return true;\n        })\n        \n    }\n\n    onImageLoad = (e) =>\n    {\n        console.log('imger loaded', this.props.session_images.length, e.target)\n        this.setState({selectedImage : this.props.session_images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteSessionImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.session_images[newIndex]})\n        });\n    }\n\n    onDateChange = date => {\n        let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        console.log(formattedDate )\n        this.submitUpdate({session_date : formattedDate})\n        this.setState({date : date})\n       \n      };\n\n    render() {\n        const session = this.props.current_session;\n        const boardImage = this.props.current_session.UserBoard && this.props.current_session.UserBoard.UserBoardImages && this.props.current_session.UserBoard.UserBoardImages.length ? \n        s3Conf.root + this.props.current_session.UserBoard.UserBoardImages[0].name : this.state.defaultImage;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <Form>\n                        <div className=\"container\">\n                            <div className=\"wrapper row\">\n                                <div className=\"details col-md-12\">\n                                    <h3 className=\"session-title\"> \n                                    <RIEInput\n                                        required={false}\n                                        value={session.title || ''}\n                                        defaultValue={session.title}\n                                        change={this.submitUpdate}\n                                        propName='title'\n                                        /></h3>\n                                </div>\n                                <div className=\"preview col-md-7\">\n                                    <div className=\"card\" >\n                                    <ImageGallery \n                                            items={this.props.session_images} \n                                            showBullets={true} \n                                            showIndex={true}\n                                            startIndex={this.state.imageIndex}\n                                            onSlide={this.onImageSelected} \n                                            onImageLoad={this.onImageLoad}/>\n                                    <div className=\"card-body\">\n                                        <div className=\"card-text\">\n                                            <ImageUploader\n                                                key={this.state.uploaderInstance}\n                                                withIcon={true}\n                                                buttonText='Add Images!'\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                withPreview={false}\n                                            />\n                                            <FontAwesomeIcon  \n                                                size=\"lg\"  \n                                                alt=\"delete user\" \n                                                style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  \n                                                icon={faTrash} \n                                                onClick={this.deleteImage} value={this.state.imageIndex}/> \n                                            </div>\n                                    </div>\n                                </div>\n                                </div>\n                                <div className=\"details col-md-5\">\n                                    <div className=\"container\">\n                                    <div className=\"detail-line\">\n                                        <StarBar stars={session.rating} onClick={this.submitUpdate } size=\"md\" />\n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <Location \n                                            id=\"location_id\" \n                                            name=\"location_id\" \n                                            className=\"form-control\" \n                                            onChange={this.onLocationChange} \n                                            onBlur={this.onLocationBlur}\n                                            value={session.location_id} \n                                            placeholder={(session.Location) ? session.Location.formatted_address : 'No Location Specified'} \n                                        />\n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <div><strong>Date:</strong></div>\n                                        <DatePicker\n                                            selected={this.state.date}\n                                            className=\"date-picker-input form-control\"\n                                            onChange={this.onDateChange} //only when value has changed\n                                            showTimeSelect\n                                            dateFormat={'MMMM d yyyy h:mm a'}\n                                            placeholderText={moment(session.session_date).format('MMMM D YYYY h:mm a')}\n                                            />\n        \n                                    </div>                                    \n                                    <div className=\"row detail-line\"> \n                                    <div className=\"col-md-12\"><strong>Board:</strong></div>\n                                        <div className=\"col-md-4\">\n                                            <img style={{cursor : 'pointer'}} onClick={()=>this.props.history.push('/board/' + session.board_id)}\n                                            src={boardImage}/>      \n                                        </div>  \n                                        <div className=\"col-md-8 board-select\">\n                                            <div className=\"row col-md-12\">\n                                                <strong>\n                                            <InlineEdit\n                                                type={InputType.Select}\n                                                value={this.state.select.name}\n                                                onChange={this.onBoardChange}\n                                                options={this.state.selectOptions}\n                                                valueKey=\"id\"\n                                                labelKey=\"name\"\n                                                /> \n                                                { session.UserBoard && <div><strong>Size:</strong> {session.UserBoard.size }</div> }\n                                                </strong>\n                                            </div> \n                                        </div>\n                                                          \n                                    </div>\n                                    <div className=\"detail-line\">\n                                        <div><strong>Notes:</strong></div>\n                                        <RIETextArea\n                                            value={session.notes || 'You have no notes for this session'}\n                                            className=\"form-control text-area\"\n                                            defaultValue={session.notes}\n                                            change={this.submitUpdate }\n                                            propName='notes'\n                                            validate={_.isString} \n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n                    </Form> \n                </FormCard>\n            </MainContainer>\n        )\n    }\n\n    loadNoaa = () =>\n    {\n        var inspect = require('util').inspect;\n        var obj = {\n            listLatLon: '38.99,-77.01 37.7833,-122.4167',\n            //product: 'time-series', // this is a default, it's not actually required\n            begin: moment().format('YYYY-MM-DDTHH:mm:ss'),\n            end: moment().add(3, 'days').format('YYYY-MM-DDTHH:mm:ss'),\n            qpf: 'qpf', // first elementInputName - Liquid Precipitation Amount\n            pop12: 'pop12' // another elementInputName - 12 hour probability of precipitation    \n            };\n            var token = 'yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV';\n            noaaForecaster.setToken(token);\n            noaaForecaster.getForecast(obj)\n            .then(function(results) {\n                console.log(inspect(results, { colors: true, depth: Infinity }));\n            });\n    }\n\n    loadWorldWeather = () =>\n    {\n        WWClient.marineWeatherApi({\n            q: \"39.6439329,-74.18136799999999\",\n            tide : \"yes\"\n        }, function(err, result) {\n            if (!err) {\n                console.log(result);\n            } else {\n                console.log(err);\n            }\n        });\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps )(SessionView)","import 'react-confirm-alert/src/react-confirm-alert.css'; \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport  MainContainer  from './../layout/MainContainer';\nimport { confirmAlert } from 'react-confirm-alert';\nimport BoardCard from './../user/BoardCard';\nimport {loadUserBoards, deleteUserBoard} from './../../actions/user_board';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n        deleteBoard: (session, id) => dispatch( deleteUserBoard(session, id) )        \n    };\n  };\n \nconst relations = {\n    user_board : ['Board.Manufacturer', 'UserBoardImage']\n};\n\nclass BoardIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteBoard = this.deleteBoard.bind(this);\n        this.editBoard = this.editBoard.bind(this);\n        this.viewBoard = this.viewBoard.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoards(this.props.session, { wheres : {user_id : this.props.session.user.id }, withs : relations.user_board} );\n        }\n    }\n\n    deleteBoard(id) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    this.props.deleteBoard(this.props.session, id);\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editBoard(boardId) {\n        this.props.history.push('/board/edit/' + boardId);\n    }\n\n    viewBoard(boardId) {\n        this.props.history.push('/board/' + boardId);\n    }\n\n    render() {\n        const { boards } = this.props;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Boards\n                        <Link to={'board/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Board</Link>\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row col-md-12\">\n                                    {boards && boards.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).map(board =>  \n                                        <BoardCard board={board} key={board.id}  className=\"col-md-3\" deleteBoard={this.deleteBoard} viewBoard={this.viewBoard} editBoard={this.editBoard}  />                              \n                                        )\n                                    }\n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex)","import React from 'react';\n\nexport const BoardForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\">Name</label>\n            <input type=\"text\" id=\"model\" defaultValue={props.board.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Give your Board a Nickname\" />\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Manufacturer/Shaper\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.manufacturers.map((obj) => {\n                     return <option prop={obj.name} value={obj.id}>{obj.name}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Model\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.models.map((obj) => {\n                     return <option prop={obj.model} value={obj.id}>{obj.model}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Board on a scale of 1-10?\n            <select value={props.board.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Board be Public to ALL logged-in Users?\n            <select value={props.board.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Board\") : ( \"Add Board\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { BoardForm } from './forms/BoardForm';\n\nconst TITLE = \"Edit Board\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditBoard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            board : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.props.session.headers).then(data => {\n                const board = data.data;\n                this.setState({ board });\n            })\n            .catch(error=>this.props.history.push('/board'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/board');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/board');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Board details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <BoardForm board={this.state.board} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditBoard)\n","\nimport './Board.css'\n\nimport _ from 'lodash';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport {FormCard} from './../layout/FormCard';\nimport { Form } from 'react-advanced-form';\nimport { RIEInput, RIETextArea} from '@attently/riek';\n\nimport SessionCard from './../session/SessionCard';\nimport  MainContainer  from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\n\n\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport TypeAheadInput  from './../form/TypeAheadInput';\nimport { sizes } from './data/board_sizes';\nimport InlineEdit, { InputType } from 'riec';\n\nimport {loadBoards} from './../../actions/board';\nimport {loadShapers} from './../../actions/shaper';\nimport {loadUserSessions} from './../../actions/user_session';\nimport {loadUserBoard, updateUserBoard, loadUserBoardImages, addUserBoardImages, deleteUserBoardImage  } from './../../actions/user_board';\n\n\n\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, board : state.user_boards.selected , boards: state.boards.data, shapers : state.shapers.data , images : state.user_board_images}\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadBoard: (session, params) => dispatch( loadUserBoard(session, params)), \n      loadSessions: (session, params) => dispatch( loadUserSessions(session, params)), \n      loadShapers: (session, params) => dispatch( loadShapers(session, params)), \n      loadBoards: (session, params) => dispatch(loadBoards(session, params)), \n      editUserBoard: (session, params) => dispatch(updateUserBoard(session, params)), \n      loadBoardImages: (session, params) => dispatch(loadUserBoardImages(session, params)), \n      addImages : (session, params) => dispatch(addUserBoardImages(session, params)), \n      deleteBoardImage: (session, id) => dispatch( deleteUserBoardImage (session, id))\n    };\n  };\n\nconst relations = {\n    user_session : ['Location', 'SessionImage'],\n    selected_board : ['Board.Manufacturer', 'Session.SessionImage'],\n    shapers : ['Board'],\n    boards : ['Manufacturer']\n};\n\nclass BoardView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [],\n            board_id: '',\n            manufacturer_id : '',\n            uploaderInstance : 1,\n            imageIndex : 0,\n            modelPlaceholder : null,\n            boardSizeOptions : this.prepBoardSizeOptions(sizes)\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoard(this.props.session, { id : this.props.match.params.id,  withs : relations.selected_board} );\n            this.props.loadSessions(this.props.session, { wheres : {board_id : this.props.match.params.id}, withs : relations.user_session} );\n            this.props.loadBoards(this.props.session, { limit:1000, withs : relations.boards} );\n            this.props.loadShapers(this.props.session, {withs : relations.shapers});\n            this.props.loadBoardImages(this.props.session, {wheres : {user_board_id : this.props.match.params.id }} );\n        }\n        else this.props.history.push('/board');\n    }\n\n    prepBoardSizeOptions = (sizes)=>\n    {\n        const filteredSizes = [];\n        sizes.forEach(size=> filteredSizes.push({id : size }))\n        return filteredSizes;\n    }\n\n    onTypeAheadSelected = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        //here we have to make sure to clear out the model if not belong to shaper\n        if(propertyName === 'manufacturer_id'){\n            const boardId = (!Number.isInteger(this.state.board_id)) ? this.props.board.id :this.state.board_id;\n            const board = this.props.boards.find(board=> board.id === boardId); \n            console.log('boards', boardId, board)\n            if( board && (board.manufacturer_id !== newValue))\n            {\n                data['board_id'] = ''\n                data['modelPlaceholder'] = 'Choose A Board'\n                console.log('board does not match manufactiure', newValue);\n            }\n        }\n      \n        this.setState({\n            ...data\n        });\n        console.log('state', this.state)\n      };\n\n      getShaperSuggestions = (value, reason)  => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused') return this.props.shapers;\n \n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n      getBoardSuggestions = (value, reason) => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused'){\n            const shaperId = (this.state.manufacturer_id === '') ? this.props.board.Board.manufacturer_id : this.state.manufacturer_id;\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === shaperId\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserBoard(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/board');\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = UserBoardRequests.createFormRequest({user_board_id : this.props.board.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\n    onImageLoad = (e) =>\n    {\n        console.log('imger loaded', this.props.images.length, e.target)\n        this.setState({selectedImage : this.props.images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteBoardImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.images[newIndex]})\n        });\n    }\n\n    renderLeftNav() {\n        return (\n          <button\n            className='image-gallery-custom-left-nav btn btn-primary'>hello\n            </button>\n        )\n      }\n\n    render() {\n        const { board } = this.props;\n        const modelPlaceholder = (this.state.modelPlaceholder) ? this.state.modelPlaceholder : board.Board ? board.Board.model : 'Choose A Model';\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <Form>\n\t\t\t\t        <div className=\"wrapper row col-md-12 container\">\n                            <h2 className=\"details col-md-12\">\n                                <RIEInput\n                                    required={false}\n                                    value={board.name || ''}s\n                                    defaultValue={board.name}\n                                    change={this.submitUpdate}\n                                    propName='name'\n                                />\n                            </h2>\n                            <div className=\"preview col-md-6\">\n                                <div className=\"card\" >\n                                    <ImageGallery \n                                            items={this.props.images} \n                                            showBullets={true} \n                                            showIndex={true}\n                                            startIndex={this.state.imageIndex}\n                                            onSlide={this.onImageSelected} \n                                            showNav={false}\n                                            //renderCustomControls={this.renderLeftNav}\n                                            onImageLoad={this.onImageLoad}\n                                            className=\"card-img-top\" />\n                                    <div className=\"card-body\">\n                                        <div className=\"card-text\"><ImageUploader\n                                                key={this.state.uploaderInstance}\n                                                withIcon={false}\n                                                buttonText='Add Images!'\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                label=''\n                                                withPreview={false}/>\n                                                <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} \n                                                onClick={this.deleteImage} value={this.state.imageIndex}/> \n                                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <div className=\"detail-line\">\n                                    <StarBar stars={board.rating} onClick={this.submitUpdate } size=\"1x\"/>\n                                </div>\n                                <div className=\"detail-line\">\n                                    <strong>Size:</strong>\n                                   &nbsp; \n                                   <InlineEdit\n                                        type={InputType.Select}\n                                        value={board.size}\n                                        onChange={(data)=>{this.submitUpdate({size : data})}}\n                                        options={this.state.boardSizeOptions}\n                                        valueKey=\"id\"\n                                        labelKey=\"id\"\n                                    /> \n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Shaper/Company:</strong></div>\n                                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                                        keyName=\"name\"\n                                        className=\"form-control\" \n                                        placeholder={board.Board && board.Board.Manufacturer ? board.Board.Manufacturer.name : 'Choose A Shaper'}\n                                        value={this.state.manufacturer_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getShaperSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Model:</strong></div>\n                                    <TypeAheadInput  entity={this.props.boards} name=\"board_id\" \n                                        keyName=\"model\"\n                                        className=\"form-control\" \n                                        placeholder={modelPlaceholder}\n                                        value={this.state.board_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getBoardSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                <div><strong>Notes:</strong></div>\n                               \n                                        <RIETextArea\n                                            value={board.notes || 'You have no notes for this session'}\n                                            defaultValue={board.notes}\n                                            className=\"form-control text-area\"\n                                            change={this.submitUpdate }\n                                            propName='notes'\n                                            validate={_.isString} \n                                        />\n                                       \n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"card\">\n                            <div className=\"row col-md-12 card-title\"><h5>Used In Sessions...</h5></div>\n                                <div className=\"card-text\">\n                                    <div className=\"table-container\" >\n                                        <div className=\"row\">\n                                            {board.Sessions && \n                                            board.Sessions.reduce((mappedArray, session, index) => {                           \n                                                                    if (index < 3) { \n                                                                        mappedArray.push(\n                                                                            <div className=\"col-md-4\" key={index}>\n                                                                            <div key={session.id} className=\"card row\">\n                                                                            <SessionCard session={session} key={session.id} className=\"row col-md-12\" />\n                                                                            </div>\n                                                                            </div>\n                                                                        );\n                                                                    }                                                  \n                                                                    return mappedArray;\n                                                                }, \n                                                            [])\n                                            }\n                                            {\n                                                (!board.Sessions || board.Sessions.length === 0) &&  <div className=\"col-12\"><h3>No Sessions found at the moment</h3></div>\n                                            } \n                                        </div>\n                                     </div>\n                                </div>\n                        </div>\n                  \n                    </Form>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass LocationRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.location.id}>\n                <div className=\"col-6\">\n                <div><a href=\"#\" onClick={() => this.props.viewLocation(this.props.location.id)}>{this.props.location.name}</a></div>\n                <div>{this.props.location.City.name}</div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.location.createdAt}\n                </div>\n                <div className=\"col-3 location-details\">\n                    <div>{!this.props.location.is_public || this.props.location.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.location.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editLocation(this.props.location.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteLocation(this.props.location.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default LocationRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport LocationRow from './LocationRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { locations: [], headers : {}, isAdmin : false }\n        this.deleteLocation = this.deleteLocation.bind(this);\n        this.editLocation = this.editLocation.bind(this);\n        this.viewLocation = this.viewLocation.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ locations: data.data })\n            });\n        }\n    }\n\n    deleteLocation(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/location/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.locations.findIndex(location => location.id === id);\n                        this.state.locations.splice(index, 1);\n                        this.props.history.push('/location');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editLocation(locationId) {\n        this.props.history.push('/location/edit/' + locationId);\n    }\n\n    viewLocation(locationId) {\n        this.props.history.push('/location/' + locationId);\n    }\n\n    render() {\n        const locations = this.state.locations;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg  mx-auto\">\n                        <div className=\"card-title\"><h2>Locations\n                        { this.state.isAdmin &&  <Link to={'location/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Location</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Location\n                                    </div>\n                                </div>\n                                {locations && locations.map(location =>\n                                (this.state.isAdmin || location.isPublic) &&\n                                    <LocationRow location={location} deleteLocation={this.deleteLocation} viewLocation={this.viewLocation} editLocation={this.editLocation} isAdmin={this.state.isAdmin} key={ location.id }/>\n                                )\n                                }\n                                {\n                                    (!locations  || locations.length === 0) &&  <div className=\"col-12\"><h3>No locations found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationIndex)","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div onClick={() => props.removeImage(image.public_id)}  className='delete'>\n        <FontAwesomeIcon icon={faTimesCircle}  />\n      </div>\n      <img className=\"preview\" src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n    <div className=''>\n      <label className=\"fileContainer\">\n        Upload An Image!\n          <input type='file' multiple id='multi' onChange={props.onChange} accept=\".jpg,.jpeg,.gif,.png\" /> \n      </label>\n      <FontAwesomeIcon icon={faImage} color='#3B5998' size='3x' />\n    </div>\n","import React from 'react';\n\nexport const LocationForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Location on a scale of 1-10?\n            <select value={props.location.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Location be Public to ALL logged-in Users?\n            <select value={props.location.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Model </label>\n            <input type=\"text\" id=\"model\" defaultValue={props.location.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Location Model\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Location\") : ( \"Add Location\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\n\nconst TITLE=\"Create Location\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            location : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n           // const headers = { headers: { \n               // Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n               // 'content-type': 'multipart/form-data'\n         //   }};\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/location`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/location');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/location');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <LocationForm location={this.state.location} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </LocationForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\nconst TITLE = \"Edit Location\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditLocation extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            location : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.props.session.headers).then(data => {\n                const location = data.data;\n                this.setState({ location });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/location');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Location details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <LocationForm location={this.state.location} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditLocation)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Location.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/location') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/location');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Location:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass ManufacturerRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.manufacturer.id}>\n                <div className=\"col-6\">\n                <div><a href=\"#\" onClick={() => this.props.viewManufacturer(this.props.manufacturer.id)}>{this.props.manufacturer.name}</a></div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.manufacturer.createdAt}\n                </div>\n                <div className=\"col-3 manufacturer-details\">\n                    <div>{!this.props.manufacturer.is_public || this.props.manufacturer.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.manufacturer.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editManufacturer(this.props.manufacturer.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteManufacturer(this.props.manufacturer.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default ManufacturerRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport ManufacturerRow from './ManufacturerRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { manufacturers: [], headers : {}, isAdmin : false }\n        this.deleteManufacturer = this.deleteManufacturer.bind(this);\n        this.editManufacturer = this.editManufacturer.bind(this);\n        this.viewManufacturer = this.viewManufacturer.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ manufacturers: data.data })\n            });\n        }\n    }\n\n    deleteManufacturer(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/manufacturer/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.manufacturers.findIndex(manufacturer => manufacturer.id === id);\n                        this.state.manufacturers.splice(index, 1);\n                        this.props.history.push('/manufacturer');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/edit/' + manufacturerId);\n    }\n\n    viewManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/' + manufacturerId);\n    }\n\n    render() {\n        const manufacturers = this.state.manufacturers;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Manufacturers\n                        { this.state.isAdmin &&  <Link to={'manufacturer/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Manufacturer</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Manufacturer\n                                    </div>\n                                </div>\n                                {manufacturers && manufacturers.map(manufacturer =>\n                                (this.state.isAdmin || manufacturer.isPublic) &&\n                                    <ManufacturerRow manufacturer={manufacturer} deleteManufacturer={this.deleteManufacturer} viewManufacturer={this.viewManufacturer} editManufacturer={this.editManufacturer} isAdmin={this.state.isAdmin} key={ manufacturer.id }/>\n                                )\n                                }\n                                {\n                                    (!manufacturers  || manufacturers.length === 0) &&  <div className=\"col-12\"><h3>No manufacturers found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerIndex)","import React from 'react';\n\nexport const ManufacturerForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Name </label>\n            <input type=\"text\" id=\"name\" defaultValue={props.manufacturer.name} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Manufacturer Name\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Manufacturer\") : ( \"Add Manufacturer\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\n\nconst TITLE=\"Create Manufacturer\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            manufacturer : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/manufacturer`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/manufacturer');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/manufacturer');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <ManufacturerForm manufacturer={this.state.manufacturer} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </ManufacturerForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\nconst TITLE = \"Edit Manufacturer\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditManufacturer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            manufacturer : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.props.session.headers).then(data => {\n                const manufacturer = data.data;\n                this.setState({ manufacturer });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/manufacturer');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Manufacturer details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <ManufacturerForm manufacturer={this.state.manufacturer} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditManufacturer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Manufacturer.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/manufacturer') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/manufacturer');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Manufacturer:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerView)","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\nimport EditSession from './components/session/Edit';\nimport SessionView from './components/session/View';\n\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport EditBoard from './components/board/Edit';\nimport BoardView from './components/board/View';\n\nimport LocationIndex from './components/location/LocationIndex';\nimport CreateLocation from './components/location/Create';\nimport EditLocation from './components/location/Edit';\nimport LocationView from './components/location/View';\n\nimport ManufacturerIndex from './components/manufacturer/ManufacturerIndex';\nimport CreateManufacturer from './components/manufacturer/Create';\nimport EditManufacturer from './components/manufacturer/Edit';\nimport ManufacturerView from './components/manufacturer/View';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session}  />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <PrivateRoute path={'/session/edit/:id'} exact component={EditSession} session={this.props.session}  />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <PrivateRoute path={'/board/edit/:id'} exact component={EditBoard} session={this.props.session}  />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n          <Route  path={'/location'} exact component={LocationIndex } />\n          <PrivateRoute path={'/location/create'} exact component={CreateLocation} session={this.props.session} />\n          <PrivateRoute path={'/location/edit/:id'} exact component={EditLocation} session={this.props.session}  />\n          <Route  path={'/location/:id'} exact component={LocationView }/>\n\n          <Route  path={'/manufacturer'} exact component={ManufacturerIndex } />\n          <PrivateRoute path={'/manufacturer/create'} exact component={CreateManufacturer} session={this.props.session} />\n          <PrivateRoute path={'/manufacturer/edit/:id'} exact component={EditManufacturer} session={this.props.session}  />\n          <Route  path={'/manufacturer/:id'} exact component={ManufacturerView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    key : process.env.REACT_WORLD_WEATHER_KEY\n}"],"sourceRoot":""}