{"version":3,"sources":["config/cognito.js","requests/BaseRequest.js","requests/UserRequests.js","actions/user.js","actions/types.js","lib/utils/cognito.js","lib/utils/session.js","reducers/session.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","components/layout/StarBar.js","components/session/SessionCard.js","components/user/BoardCard.js","requests/UserBoardRequests.js","requests/SessionRequests.js","actions/user_session.js","actions/user_board.js","components/user/ProfileCard.js","components/user/Dashboard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/layout/Modal.js","lib/utils/algolia.js","components/layout/SearchResults.js","components/session/Facets.js","components/layout/SortBy.js","lib/utils/geolocator.js","lib/utils/geo.js","components/session/SessionIndex.js","components/session/Edit.js","lib/utils/worldweather.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","components/board/data/board_sizes.js","requests/ManufacturerRequests.js","actions/shaper.js","requests/BoardRequests.js","actions/board.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/board/forms/BoardPicker.js","components/session/View.js","components/layout/Paginate.js","components/board/Facets.js","components/board/BoardIndex.js","components/board/forms/BoardForm.js","components/board/Edit.js","components/board/View.js","components/location/LocationRow.js","components/location/LocationIndex.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/location/LocationForm.js","components/location/Create.js","components/location/Edit.js","components/location/View.js","components/manufacturer/ManufacturerRow.js","components/manufacturer/ManufacturerIndex.js","components/manufacturer/ManufacturerForm.js","components/manufacturer/Create.js","components/manufacturer/Edit.js","components/manufacturer/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/worldweather.js","config/fb.js"],"names":["require","config","cognitoConfig","apiUrl","process","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","querystring","BaseRequest","session","REQUEST_TYPE","get","wheres","withs","limit","page","label","orderBy","onSuccess","onFailure","e","apiAction","url","getEndpoint","getWhereString","getWithString","getlabel","getOne","id","create_bk","data","hdrs","headers","axios","post","create","method","delete","update","getHost","apiConfig","host","port","endpoint","withString","forEach","element","slice","length","stringify","error","console","log","type","accessToken","jwt","headersOverride","payload","this","createFormRequest","formData","FormData","Object","entries","key","value","append","UserRequests","updateProfileImage","args","UserLoaded","loadUser","dispatch","getState","params","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","then","getCognitoSession","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","email","given_name","family_name","formatSessionObject","user","userName","jwtToken","groups","isAdmin","Array","indexOf","expiration","exp","isLoggedIn","refresh","store","clearSession","signOut","localStorage","setItem","JSON","hasSession","getItem","parse","expTime","moment","unix","valueOf","current_time","updateTime","subtract","format","catch","removeItem","existingSession","initialState","state","action","assign","user_board","selected","loaded","created","user_boards","concat","filteredBoards","filter","board","parseInt","user_session","user_sessions","filteredSessions","item","newState","profile_img","api","boards","s3Conf","original","thumbnail","session_images","prepImages","setImages","img","images","formattedImages","push","name","shapers","combineReducers","user_board_images","apiMiddleware","next","dataOrParams","includes","defaults","baseURL","common","apiStart","request","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","compose","createStore","rootReducer","applyMiddleware","thunk","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","username","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","history","Login","hash","search","MainContainer","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","uname","map","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","submitFail","errorMessage","role","EditUser","put","setValues","match","StarBar","content","rating","stars","i","faStar","withRouter","SessionImages","textAlign","marginTop","editSession","deleteSession","createdAt","calendar","UserBoard","Location","UserBoardImages","editBoard","deleteBoard","Board","model","UserBoardRequests","getImages","createImages","deleteImage","SessionRequests","UserSessionsLoaded","loadUserSessions","UserBoardsLoaded","UserBoardsCleared","loadUserBoard","UserBoardLoaded","loadUserBoards","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","pictureFiles","pictureDataURLs","user_id","file","updateImage","image","rel","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","aria-valuenow","aria-valuemin","aria-valuemax","UserImageUpdated","updateUserImage","sessions","UserDashboard","loadBoards","loadSessions","UserSessionRequests","reduce","mappedArray","locations","UserLocations","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","handleNoResult","handleStatusUpdate","onBlur","locRender","prediction","types","description","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","autoComplete","wrapperClass","display","libraries","googleMaps","autocompletionRequest","input","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","createField","fieldPresets","matches","generic","missing","rule","SessionForm","propertyName","newValue","defaultName","show","pictures","clearBoards","serialized","fields","form","rules","messages","initialValue","Create","createSession","onSubmissionComplete","prevProps","prevState","snapshot","noUpdate","clearCreatedSession","close","UserSessionCreated","createUserSession","Modal","handleClose","showHideClassName","algoliaClient","algoliasearch","responsesCache","createInMemoryCache","requestsCache","serializable","searchClient","requests","some","query","results","hits","searchForFacetValues","StateResults","searchState","searchResults","allSearchResults","searching","searchingForFacetValues","isSearchStalled","ids","hit","SearchResults","connectStateResults","Facets","filters","showAll","RefinementList","container","attribute","showMore","showMoreLimit","Configure","hitsPerPage","onSelect","SB","items","refine","createURL","currentRefinement","onSortUpdated","event","nextValue","SortBy","connectSortBy","geolocator","language","google","version","locator","initIndex","getSpots","lat","lon","aroundLatLng","aroundRadius","relations","SessionIndex","showModal","hideModal","sortOrder","selectedSortOrder","setScope","searchResultHandler","isNew","currentHits","in","currentPage","onSearch","paginatedSessions","viewSession","locate","enableHighAccuracy","timeout","maximumWait","maximumAge","desiredAccuracy","fallbackToIP","addressLookup","coords","latitude","longitude","clearSessions","sessionId","InstantSearch","indexName","Index","defaultRefinement","Pagination","ClearRefinements","CurrentRefinements","checked","HitsPerPage","UserSessionDeleted","deleteUserSession","EditSession","sessionRequest","WWO","createClient","wwConfig","responseType","subscription","locale","TypeAheadInput","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","shouldRenderSuggestions","onFocus","overflow","sizes","ManufacturerRequests","loadShapers","ShapersLoaded","BoardRequests","BoardsLoaded","UserBoardForm","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","CreateUserBoard","createUserBoard","UserBoardCreated","clearCreatedBoard","BoardPicker","select","selectOptions","defaultImage","selectedBoard","current_session","loadBoard","board_created","boardImage","InputType","Select","options","valueKey","labelKey","submitUpdate","SessionView","setSelectedBoard","boardOptions","obj","goBack","editUserSession","onLocationChange","onPrivacyChange","is_public","onLocationBlur","d","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","setToken","getForecast","colors","depth","Infinity","loadWorldWeather","WWClient","marineWeatherApi","q","tide","UserSessionRequest","loadSession","loadSessionImages","session_id","addImages","appId","fbConfig","api_key","change","propName","showBullets","showIndex","startIndex","onSlide","thumbnailPosition","withLabel","handleClick","tabs","showTimeSelect","dateFormat","placeholderText","notes","validate","_","isString","UserSessionLoaded","loadUserSession","UserSessionUpdated","updateUserSession","UserSessionImagesLoaded","loadUserSessionImages","UserSessionImagesCreated","addUserSessionImages","UserSessionImageDeleted","deleteUserSessionImage","Paginate","handlePageClick","selectedPage","offset","perPage","setElementsForCurrentPage","elements","pageCount","Math","ceil","updatePaginationElements","previousLabel","nextLabel","breakLabel","onPageChange","forcePage","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","maxValuesPerFacet","maxFacetHits","BoardIndex","boardCreated","viewBoard","sortBoards","userSession","boardId","pagination","UserBoardDeleted","deleteUserBoard","BoardForm","manufacturers","prop","models","EditBoard","selected_board","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","loadBoardImages","user_board_id","s","showNav","Manufacturer","Sessions","UserBoardUpdated","updateUserBoard","UserBoardImagesLoaded","loadUserBoardImages","UserBoardImagesCreated","addUserBoardImages","UserBoardImageDeleted","deleteUserBoardImage","LocationRow","viewLocation","City","editLocation","deleteLocation","LocationIndex","locationId","isPublic","faBowlingBall","removeImage","public_id","URL","createObjectURL","multiple","accept","faImage","LocationForm","files","uploading","submitted_by","Spinner","Images","Buttons","EditLocation","LocationView","pic","picture","ManufacturerRow","manufacturer","viewManufacturer","editManufacturer","deleteManufacturer","ManufacturerIndex","manufacturerId","ManufacturerForm","EditManufacturer","ManufacturerView","App","path","exact","CreateSession","CreateLocation","CreateManufacturer","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cad259de.chunk.js","sourcesContent":["\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n\n    \"email\"\n\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import axios from 'axios';\nimport apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy + `&page=` + page,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n\n    create_bk = (data, hdrs = {}) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return axios.post(this.getEndpoint() , data , headers)\n    }\n\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         //const headers = {...this.session.headers, ...hdrs};\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n\n       // return axios.put(this.getEndpoint() + `/` + entityId , data,  this.session.headers);\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n       \n    }\n\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = this.session.jwt,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n}\nexport default UserRequests;","import { USER_LOADED, USER_LOGGED_IN, USER_IMAGE_UPDATED} from \"./types\";\nimport UserRequests from './../requests/UserRequests';\n\n\nexport const UserLoaded = data => ({\n    type: USER_LOADED,\n    payload: data\n  });\n\n  export const UserLoggedIn = data => ({\n    type: USER_LOGGED_IN,\n    payload: data\n  });\n\n  export const UserImageUpdated = data => ({\n    type: USER_IMAGE_UPDATED,\n    payload: data\n  });\n\n\n  \n\n  export const logInUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).get(params)\n      )\n    }\n  }\n\n\n  export const loadUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const updateUserImage = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserImageUpdated(data)} }}\n      dispatch(\n        new UserRequests(session).updateProfileImage(params)\n      )\n    }\n  }","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\nexport const SET_USER = \"SET_USER\";\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\n\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\nexport const USER_BOARD_DELETED=\"USER_BOARD_DELETED\";\nexport const USER_BOARD_IMAGES_LOADED=\"USER_BOARD_IMAGES_LOADED\";\nexport const USER_BOARD_IMAGES_CREATED=\"USER_BOARD_IMAGES_CREATED\";\nexport const USER_BOARD_IMAGE_DELETED = \"USER_BOARD_IMAGE_DELETED\";\nexport const USER_BOARDS_CLEARED = \"USER_BOARDS_CLEARED\"\n\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CREATED=\"USER_SESSION_CREATED\";\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"\nexport const USER_SESSION_DELETED=\"USER_SESSION_DELETED\"\nexport const USER_SESSION_LOADED=\"USER_SESSION_LOADED\";\nexport const USER_SESSION_IMAGES_LOADED=\"USER_SESSION_IMAGES_LOADED\";\nexport const USER_SESSION_IMAGES_CREATED=\"USER_SESSION_IMAGES_CREATED\";\nexport const USER_SESSION_IMAGE_DELETED = \"USER_SESSION_IMAGE_DELETED\";\nexport const USER_SESSION_CREATED_CLEARED=\"USER_SESSION_CREATED_CLEARED\";\nexport const USER_SESSIONS_CLEARED=\"USER_SESSIONS_CLEARED\";\n\nexport const SHAPERS_LOADED=\"SHAPERS_LOADED\";\nexport const BOARDS_LOADED=\"BOARDS_LOADED\";\n\n\nexport const USER_BOARD_CREATED_CLEARED=\"USER_BOARD_CREATED_CLEARED\";\n\nexport const USER_LOGGED_IN=\"USER_LOGGED_IN\";\n\nexport const USER_LOADED=\"USER_LOADED\";\n\nexport const USER_IMAGE_UPDATED=\"USER_IMAGE_UPDATED\";\n\n\n","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nimport {logInUser, loadUser} from './../../actions/user';\nimport store from './../../store/index'\nconst axios = require('axios');\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession(dispatch)) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      axios.get( apiConfig.host + apiConfig.port + `/api/user/firstOrNew?username=` + result.idToken.payload['cognito:username'] \n      + '&email=' + result.idToken.payload.email + '&first_name=' + result.idToken.payload.given_name + '&last_name=' + result.idToken.payload.family_name\n        ).then(data => {\n        const session = formatSessionObject(data.data.id, result);\n        session.user = {...session.user, ...data.data[0]};\n        dispatch(loadUser(session, {wheres : {email : result.idToken.payload.email}}));\n        resolve(session);\n      });     \n    })\n  })\n}\n\n\nconst formatSessionObject = (id, result) =>\n{\n  const session = {\n    user: {\n      id : id,\n      userName: result.idToken.payload['cognito:username'],\n      email: result.idToken.payload.email\n    },\n    //headers: `Authorization: Bearer ${result.accessToken.jwtToken}`,\n    jwt : result.accessToken.jwtToken,\n    groups : result.idToken.payload['cognito:groups'],\n    isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n    expiration : result.accessToken.payload.exp,\n    isLoggedIn : true\n  }\n  session.user = {...session.user};\n  return session;\n}\n\nexport const refresh = (id = null) =>\n{\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth();\n    auth.userhandler = {\n      onSuccess: function (result) {\n        let session = formatSessionObject(store.getState().session.user.id, result);\n        setSessionCookie(session);\n        store.dispatch({ type: SET_SESSION, session });\n        resolve(session)\n      },\n      onFailure: function (err) {\n        console.log('cognito refresh error', err)\n        reject(err)\n      }\n    }\n    //auth.refreshSession(auth.getSession());\n    auth.getSession();\n    //let user = auth.getCachedSession();\n    //auth.refreshSession(auth.getCachedSession());\n/** \n  const auth = createCognitoAuth();\n  auth.userhandler = {\n    onSuccess: function (result) {\n      let session = formatSessionObject(store.getState().session.user.id, result);\n      setSessionCookie(session);\n      store.dispatch({ type: SET_SESSION, session });\n      resolve(session)\n    },\n    onFailure: function (err) {\n      console.log('whateves', err)\n      reject(err)\n    }\n  }\n  auth.getSession()  \n  */\n})    \n  //let user = auth.getCachedSession();\n  //auth.refreshSession(user.getSession())\n  //console.log('cached session', user)\n  }\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import Cookie from \"js-cookie\";\nimport moment from \"moment\";\nimport { refresh } from './cognito'\n\nexport function setSessionCookie(session)\n{\n  //Cookie.set(\"x-token\", session);\n  localStorage.setItem('x-token', JSON.stringify(session))\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(localStorage.getItem('x-token'))\n    {\n      const session = JSON.parse(localStorage.getItem('x-token'));\n      const expTime = moment.unix(session.expiration).valueOf();\n      const current_time = moment().valueOf();\n      const updateTime =  moment.unix(session.expiration).subtract(5, \"minutes\").valueOf();\n      console.log('token expires @', moment.unix(session.expiration).format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('current time is', moment().format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('update time is', moment.unix(session.expiration).subtract(5, \"minutes\").format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('cookie expues',  current_time, expTime, updateTime);\n      if(current_time > updateTime){\n        refresh().then(data=> {return true})\n        .catch(e=>clearSession())\n        return session;\n      }\n      if ( expTime > current_time) {\n        return session;\n      }\n      else {\n        refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(localStorage.getItem('x-token'))\n  {\n    localStorage.removeItem(\"x-token\")\n  }\nreturn false;\n}\n\nexport function update()\n{\n  if(!hasSession())\n  {\n    refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n  }\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED, USER_BOARD_DELETED, USER_BOARDS_CLEARED, USER_BOARD_CREATED_CLEARED } from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  loaded : false,\n  created : false\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload, loaded : true}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case USER_BOARD_DELETED :\n      const filteredBoards  =  state.data.filter(board => { return board.id !== parseInt(action.payload)});\n      newState = {...state, ...{data : filteredBoards}}\n      return newState;\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    case USER_BOARDS_CLEARED :\n      return initialState;\n    case USER_BOARD_CREATED_CLEARED :\n        newState = {...state, ...{created : false}}\n        return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {USER_SESSION_CLEARED,\n  USER_SESSIONS_CLEARED, \n  USER_SESSION_CREATED_CLEARED,  \n  USER_SESSION_CREATED, \n  SET_USER_SESSIONS, \n  SESSION_CREATED, \n  DELETE_USER_SESSION, \n  USER_SESSION_UPDATED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  created : false\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_LOADED:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_SESSION_DELETED :\n        const filteredSessions  =  state.data.filter(session => { return session.id !== parseInt(action.payload)});\n        newState = {...state, ...{data : filteredSessions}}\n        return newState;\n    case USER_SESSION_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    case USER_SESSION_CREATED_CLEARED :\n      newState = {...state, ...{created : false}}\n      return newState;\n    case USER_SESSIONS_CLEARED :\n      return initialState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import {USER_LOADED, USER_IMAGE_UPDATED} from './../actions/types';\n\n\nconst initialState = {};\nconst user = (state = initialState, action) => {\n  let newState = state;\n  switch (action.type) {\n    case USER_LOADED:\n      return action.payload;\n      case USER_IMAGE_UPDATED:\n      newState.profile_img = action.payload.data;\n      return newState;\n    default:\n      return state\n  }\n}\nexport default user","const initialState = 0;\nconst api = (state = initialState, action) => {\nlet newState = state;\n  switch (action.type) {\n    case 'API_START':\n        return newState +1;\n    case 'API_END':\n        newState = state-1;\n        return newState;  \n    default :\n        return newState;\n}}\nexport default api;","import {BOARDS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case BOARDS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\nimport {USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_IMAGES_LOADED:\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_SESSION_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_SESSION_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\nimport {USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_BOARD_IMAGES_LOADED :\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_BOARD_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_BOARD_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import {SHAPERS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case SHAPERS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default shapers;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd } from \"./../actions/api\";\nimport apiConfig from './../config/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n   const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n        console.log('error', error)\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\nimport './css/Nav.css'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          My Memo</Link>\n                      }\n \n                {false && props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.username}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (false){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\nimport { s3Conf } from './../../config/s3';\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n\n  componentDidMount () {\n    if (this.props.session.isLoggedIn) {\n      this.props.history.push('/user/dashboard');\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n            <div className=\"container container-home\">\n              <div className=\"row align-items-center my-5\">\n                  <div className=\"col-lg-7\">\n                    <img className=\"img-fluid rounded mb-4 mb-lg-0\" src=\"https://surfzonemovie.com/wp-content/uploads/2016/01/Bill-Stewart-gets-barrelled-at-famous-break-Cloudbreak-Fiji-900x400.jpg\" alt=\"\" />\n                  </div>\n                  <div className=\"col-lg-5\">\n                    <h1 className=\"font-weight-light\">My Surf Sesh</h1>\n                    <p>A Free online journal to track your surfing sessions and gain analytics into your performance!</p>\n                    <a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a>\n                  </div>\n              </div>\n              <div className=\"card text-white bg-secondary my-5 py-4 text-center\">\n                  <div className=\"card-body\">\n                    <p className=\"text-white m-0\">This call to action card is a great place to showcase some important information or display a clever tagline!</p>\n                  </div>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Track Sessions</h2>\n                          <img src={s3Conf.root + 'site/session_example.png'} />\n                          <p className=\"card-text\">Track and rate your session then use the stats to decide the best board and location for the swell.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Showcase Boards</h2>\n                          <img src={s3Conf.root + 'site/board_example.png'} />\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod tenetur ex natus at dolorem enim! Nesciunt pariatur voluptatem sunt quam eaque, vel, non in id dolore voluptates quos eligendi labore.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Store Photos</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                          <h2 className=\"card-title\">Get Reports</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n/*\n<img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n*/","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/user/dashboard\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={true}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer) ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const onClick = (rating) =>\n    {\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className=\"star-disabled\" icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\">\n            <div className=\"row\">\n                <div className=\"col-12 session-card-title\"><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</button></div>\n                <div className=\"col-4\">\n                <div>\n                    <img className=\"img-responsive img-thumbnail img-card\" \n                        src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name \n                        : \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\" }/>\n                </div>\n                    <div style={{textAlign : 'center', marginTop : '0.3em'}}>\n                        { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                        { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteSession(props.session.id)} /> }\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card-date\" >{moment(props.session.createdAt).calendar()}</div>\n                    <div className=\"card-rating\" ><StarBar stars={props.session.rating} /></div>\n                    <div >{props.session.UserBoard && props.session.UserBoard.name ? props.session.UserBoard.name : \"No Board Selected\"}</div>\n                    <div >{props.session.Location && props.session.Location.name ? props.session.Location.name : \"No Location Specified\"}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\">\n            <div className=\"row\">\n                <div className=\"col-12 board-card-title\"><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/board/\" + props.board.id)}>{props.board.name}</button></div>\n                <div className=\"col-4\">\n                <img className=\"img-responsive img-thumbnail img-card\" \n                    src={props.board.UserBoardImages && props.board.UserBoardImages.length ? s3Conf.root + props.board.UserBoardImages[0].name \n                    : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\" }/>\n                </div>\n                <div className=\"col-8\">\n                <div >\n                    { props.editBoard && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editBoard(props.board.id)} /> }\n                    { props.deleteBoard && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => props.deleteBoard(props.board.id)} /> }\n                </div>\n                <div className=\"card-rating\">\n                    <StarBar stars={props.board.rating} />\n                </div>\n                <div className=\"board-card-model\">{props.board.size} {props.board.Board && props.board.Board.model}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(BoardCard);","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { USER_SESSION_CREATED, \n  SET_USER_SESSION, \n  SET_USER_SESSIONS, \n  USER_SESSION_UPDATED, \n  USER_SESSION_CLEARED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED, \n  USER_SESSION_IMAGES_LOADED, \n  USER_SESSION_IMAGES_CREATED, \n  USER_SESSION_IMAGE_DELETED,\n  USER_SESSION_CREATED_CLEARED,\n  USER_SESSIONS_CLEARED  } from \"./types\";\nimport SessionRequests from './../requests/SessionRequests';\n\n\nexport const UserSessionImagesLoaded = data => ({\n  type: USER_SESSION_IMAGES_LOADED,\n  payload: data\n});\n\nexport const UserSessionImagesCreated = data => ({\n  type: USER_SESSION_IMAGES_CREATED,\n  payload: data\n});\n\nexport const UserSessionCreatedCleared = () => ({\n  type: USER_SESSION_CREATED_CLEARED\n});\n\nexport const UserSessionsCleared = () => ({\n  type: USER_SESSIONS_CLEARED\n});\n\nconst UserSessionImageDeleted = data=> (\n  {\n    type: USER_SESSION_IMAGE_DELETED,\n    payload: data\n  }\n)\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n\nexport const UserSessionCreated = data => ({\n  type: USER_SESSION_CREATED,\n  payload: data\n});\n\n  export const UserSessionLoaded = data => ({\n    type: USER_SESSION_LOADED,\n    payload: data\n  });\n\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  const UserSessionDeleted = data=> (\n    {\n      type: USER_SESSION_DELETED,\n      payload: data\n    }\n  )\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n\nexport const createUserSession= ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).create(params)\n    )\n  }\n}\n\nexport const loadUserSessions = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionsLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).get(params)\n    )\n  }\n}\n\nexport const loadUserSession = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getOne(params)\n    )\n  }\n}\n\n\nexport const deleteUserSession = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).delete(params)\n    )\n  }\n}\n\nexport const updateUserSession = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionUpdated(data)} }}\n    dispatch(\n      new SessionRequests(session).update(params)\n    )\n  }\n}\n\nexport const loadUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getImages(params)\n    )\n  }\n}\n\nexport const addUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).createImages(params)\n    )\n  }\n}\n\nexport const deleteUserSessionImage = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionImageDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).deleteImage(params)\n    )\n  }\n}\n","import { USER_BOARDS_CLEARED,  USER_BOARD_CREATED_CLEARED, SET_USER_BOARDS, USER_BOARD_UPDATED, USER_BOARD_DELETED, SET_USER_BOARD, USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED, USER_BOARD_CREATED } from \"./types\";\nimport UserBoardRequests from './../requests/UserBoardRequests';\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardImagesLoaded = data => ({\n    type: USER_BOARD_IMAGES_LOADED,\n    payload: data\n  });\n\n  export const UserBoardsCleared = data => ({\n    type: USER_BOARDS_CLEARED,\n    payload: data\n  });\n\n  export const UserBoardCreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n\n  export const UserBoardImagesCreated = data => ({\n    type: USER_BOARD_IMAGES_CREATED,\n    payload: data\n  });\n\n  export const UserBoardLoaded = data => ({\n    type: SET_USER_BOARD,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n  const UserBoardDeleted = data=> (\n    {\n      type: USER_BOARD_DELETED,\n      payload: data\n    }\n  )\n\n  const UserBoardCreated = data=> (\n    {\n      type: USER_BOARD_CREATED,\n      payload: data\n    }\n  )\n\n  export const UserBoardreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n  \n\n  const UserBoardImageDeleted = data=> (\n    {\n      type: USER_BOARD_IMAGE_DELETED,\n      payload: data\n    }\n  )\n\n  export const createUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).create(params)\n      )\n    }\n  }\n\n\n  export const clearUserBoards = ( )=>\n  {\n    return function(dispatch, getState)\n    {\n      dispatch(\n        UserBoardsCleared(null)\n      )\n    }\n  }\n\n  export const loadUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardsLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).get(params)\n      )\n    }\n  }\n\n  export const deleteUserBoard = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).delete(params)\n      )\n    }\n  }\n\n  export const updateUserBoard = (session, args) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardUpdated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).update(params)\n      )\n    }\n  }\n\n  export const loadUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getImages(params)\n      )\n    }\n  }\n\n  export const addUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).createImages(params)\n      )\n    }\n  }\n\n  export const deleteUserBoardImage = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardImageDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).deleteImage(params)\n      )\n    }\n  }\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\nimport {loadUser, updateUserImage} from './../../actions/user';\n\nconst mapStateToProps = state => {\n    return { user : state.user, session : state.session }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      //updateImage : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}})),\n      updateImage : (session, params)=>dispatch(updateUserImage(session, params)),\n      loadUser : (session, params)=>dispatch(loadUser(session, params))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(this.props.session, {id : this.props.session.user.id} );\n        }\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.updateImage(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n            <div className=\"team-single\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div className=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <div className=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Profile Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 col-md-7\">\n                        <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p className=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div className=\"contact-info-section margin-40px-tb\">\n                                <ul className=\"list-style9 no-margin\">\n                                <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">username:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.username}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"MM-DD-YYYY\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong className=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-envelope text-pink\"></i>\n                                                <strong className=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.email}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <h5 className=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div className=\"sm-no-margin\">\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Positive Behaviors</div>\n                                        <div className=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard);\n\n/**\n *                             <div className=\"margin-20px-top team-single-icons\">\n                                <ul className=\"no-margin\">\n                                    <li><a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n */","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport  MainContainer  from './../layout/MainContainer';\nimport { Link } from 'react-router-dom';\nimport SessionCard from './../session/SessionCard';\nimport BoardCard from './BoardCard';\nimport UserRequests from './../../requests/UserRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport UserSessionRequests from './../../requests/SessionRequests';\nimport {UserSessionsLoaded} from './../../actions/user_session';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {loadUserd} from './../../actions/user';\nimport './css/Dashboard.css'\nimport ProfileCard from './ProfileCard';\n\n\nconst DASHBOARD_LIST_LIMIT = 3; \nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data, locations : state.user.UserLocations }\n  }\n\n  const withs = \n  {\n    user : [],\n    boards : ['Board', 'UserBoardImage'],\n    sessions : ['UserBoard', 'SessionImage', 'Location']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n       // loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n        loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.boards, onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n        loadSessions: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.sessions, onSuccess : (data)=>{return UserSessionsLoaded(data)}})),\n    };\n  };\n\nclass UserDashboard extends React.Component{\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            //this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSessions(new UserSessionRequests(this.props.session), this.props.session );\n        }\n    }\n     \n    render() {\n        const { user_sessions, boards } = this.props;\n        return (\n           <MainContainer>\n                <div className=\"row\">\n                    <div className=\"container card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                        </div>\n                        <div className=\"card-text dashboard-boxes\">\n                                <div className=\"container row\">\n                                    \n                                    <div className=\"col-md-10 row\">\n                                        <div className=\"col-md-12\"><ProfileCard /></div>\n                                        <div className=\"col-md-6\">\n                                            <h5>Latest Sessions</h5>\n                                            {\n                                                user_sessions && user_sessions.reduce((mappedArray, session, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                       \n                                                                <SessionCard session={session} key={session.id} />\n                                                              \n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                        <h5>Newest Boards</h5>\n                                            {\n                                                boards && boards.reduce((mappedArray, board, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <BoardCard board={board} key={board.id}/>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }                              \n                                        </div>\n                                </div>\n                                <div className=\"col-md-2\">\n                                    \n                                 </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps )(UserDashboard)\n\n// <link href=\"//www.surf-forecast.com/stylesheets/feed.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div id=\"wf-weatherfeed\"><iframe  allowtransparency=\"true\" height=\"272\" width=\"469\" src=\"//www.surf-forecast.com/breaks/Hollyoake/forecasts/feed/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"><p>Your browser does not support iframes.</p></iframe><div id=\"wf-link\"><a href=\"https://www.surf-forecast.com/\"><img alt=\"Surf Forecast\" src=\"//www.surf-forecast.com/images/feed/surflogo-150.jpg\"/></a><p id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">Hollyoake</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</p><div></div></div></div>\n                                  ","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\n\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n        const {search, value} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb\" : \"sc-bxivhb eTopIC d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport { Input, Button } from 'react-advanced-form-addons';\nimport Location from './../../form/Location';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport moment from 'moment'\nimport {loadUserBoards, clearUserBoards} from './../../../actions/user_board';\nimport {refresh} from './../../../lib/utils/cognito'\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards, user_sessions : state.user_sessions }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n        clearBoards : ()=>dispatch(clearUserBoards())\n      };\n  };\n\nclass SessionForm extends React.Component{\n    constructor(props)\n    {\n        refresh(props.session.user.id)\n        super(props);\n        this.defaultName = moment().format('MMMM D YYYY, h:mm a');\n        this.state = {show:false, pictures : props.pictures, location_id : ''}\n    }\n\n    onChange = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n      };\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.loaded)\n            this.props.loadBoards(this.props.session, {wheres : {user_id : this.props.session.user.id }} );\n        }\n    }\n\n    componentWillUnmount()\n    {\n        this.props.clearBoards();\n    }\n\n    render(){ \n        return (\n            <div className=\"col-md-12\">\n            <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n            <div className=\"col-md-8 \">\n           \n            <Input name=\"title\" \n                label=\"Session Name\" \n                className=\"form-control\" \n                initialValue={this.defaultName}\n                required \n            />\n            <Location \n                id=\"location_id\" \n                name=\"location_id\" \n                label=\"Where You paddling Out?\" \n                className=\"form-control\" \n                onChange={this.onChange} \n                value={this.state.location_id} />\n            </div>\n            <div className=\"col-md-12\">\n            <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n            <Button type='submit'>  {(this.props.edit) ? (\"Edit Session\") : ( \"Add Session\") }</Button>\n            </div>\n            </Form>\n\n            </div>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {createUserSession, UserSessionCreatedCleared } from './../../actions/user_session';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession :  (session, params) => dispatch(createUserSession(session, params)),\n        clearCreatedSession : ()=> dispatch( UserSessionCreatedCleared() )\n    }\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.onSubmissionComplete()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(this.props.noUpdate) return;\n        if ((prevProps.user_sessions.data.length !== this.props.user_sessions.data.length)\n        && this.props.user_sessions.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_sessions.created.id;\n                    this.props.clearCreatedSession();\n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createSession(session, {data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 row \">\n                        <div className=\"col-md-12 \">\n                            <h2>{TITLE}</h2>\n                            {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new session\n                            </div>\n                            )}\n                            {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                            </div>\n                            )}\n                            {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                            )}    \n                        </div>\n                        <div className=\"col-md-12\">           \n                            <SessionForm key=\"session_form\" session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop} />\n                        </div>\n                    </div>\n                </FormCard>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport './css/Modal.css'\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n\n        </section>\n      </div>\n    );\n  };\n  export default Modal;\n\n  /**\n   *           <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n   */","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n  \nconst searchClient = {\n      search(requests) {\n        const shouldSearch = requests.some(({ params: { query }}) => query !== '');\n        if (shouldSearch) {\n          return algoliaClient.search(requests);\n        }\n        return Promise.resolve({\n          results: [{ hits: [] }],\n        });\n      },\n      searchForFacetValues: algoliaClient.searchForFacetValues,\n    };\n\nexport default searchClient;\n  ","import React from 'react';\nimport { connectStateResults } from 'react-instantsearch-dom';\n\nclass StateResults extends React.Component{\n  constructor({\n    searchState,\n    searchResults,\n    allSearchResults,\n    error,\n    searching,\n    searchingForFacetValues,\n    isSearchStalled,\n    onChange\n  })\n  {\n    super();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(!this.props.searching && this.props.searchResults)\n    {\n      const ids =[];\n      this.props.searchResults.hits.forEach(hit=> ids.push(hit.id))\n      if(this.props.onChange)\n      {\n          this.props.onChange(ids)\n      }\n    }\n  }\n  render(args)\n  {\n    //just push something out here to satisfy render\n    return ''\n  }\n}\n\n  const SearchResults = connectStateResults(StateResults);\n  export default SearchResults;","import './css/Facets.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { InstantSearch, RefinementList , Configure, ClearRefinements,  CurrentRefinements } from 'react-instantsearch-dom';\nimport searchClient from './../../lib/utils/algolia'\nimport SearchResults from './../layout/SearchResults'\n\n\n\nfunction mapStateToProps(state) {\n    return { api: state.api, session : state.session };\n} \n\nclass Facets extends React.Component{\n    render()\n    {\n        const filters = this.props.showAll === '1' ? \"user_id=\" + this.props.session.user.id + \" OR is_public=1\"  : \"user_id=\" + this.props.session.user.id;\n        return (\n            <div>\n            <h6>Boards</h6>\n            <div>\n            <RefinementList \n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"board\"\n            />\n            </div>\n            <h6>Locations</h6>\n            <div>\n            <RefinementList \n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"location\"\n            />\n            </div>\n            <h6>Rating</h6>\n            <div>\n            <RefinementList \n            key=\"rl2\"\n            container=\"#sessions\"\n            attribute=\"rating\"\n            limit={10}\n            showMore={true}\n            showMoreLimit={3}\n            //searchable={true}\n            //searchableIsAlwaysActive={true} \n            />\n            </div>\n            <Configure hitsPerPage={this.props.hitsPerPage} \n                filters={filters} \n            />\n            <SearchResults onChange={this.props.onSelect} key=\"sr1\" />\n           \n            </div>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(Facets) ","import React from 'react';\nimport { connectSortBy } from 'react-instantsearch-dom';\nimport { Select, Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\n\nclass SB extends React.Component{\n  constructor({ items, refine, createURL })\n  {\n    super();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n      if(prevProps.currentRefinement !== this.props.currentRefinement){\n          this.props.onSortUpdated(this.props.currentRefinement);\n      }\n   \n  }\n\n  render()\n  {    \n\n    return <Form><Select  onChange={event => {\n       // event.preventDefault();\n       // console.log(event)\n        this.props.refine(event.nextValue);\n      }}>\n       {this.props.items.map(item => (\n      <option key={item.value} value={item.value}>\n\n          {item.label}\n     \n      </option>\n    ))}\n    </Select></Form>\n\n    return <ul >\n    {this.props.items.map(item => (\n      <li key={item.value} >\n        <a\n          href={this.props.createURL(item.value)}\n          style={{ fontWeight: item.isRefined ? 'bold' : '' }}\n          onClick={event => {\n            event.preventDefault();\n            this.props.refine(item.value);\n          }}\n        >\n          {item.label}\n        </a>\n      </li>\n    ))}\n  </ul>\n  }\n}\n\nconst SortBy = connectSortBy(SB);\nexport default SortBy","window.geolocator.config({\n    language: \"en\",\n    google: {\n      version: \"3\",\n      key: \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\",\n    },\n  });\n\n  var options = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumWait: 10000, // max wait time for desired accuracy\n    maximumAge: 0, // disable cache\n    desiredAccuracy: 30, // meters\n    fallbackToIP: true, // fallback to IP if Geolocation fails or rejected\n    addressLookup: true, // requires Google API key if true\n    //timezone: true,         // requires Google API key if true\n    //  map: \"map-canvas\",      // interactive map element id (or options object)\n    //  staticMap: true         // get a static map image URL (boolean or options object)\n  };\n  \n  const locator = window.geolocator;\n  export default locator;","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n\nconst index = algoliaClient.initIndex('surfline_spots');\n\n\n\nconst getSpots = (lat, lon)=>\n{\n    return index.search('', {\n        aroundLatLng: `${lat}, ${lon}`,\n        aroundRadius: 10000 // 1000 km\n      })\n}\n\nexport default getSpots;\n  \n","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport React, { Component } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport SessionCard from \"./SessionCard\";\nimport {\n  loadUserSessions,\n  deleteUserSession,\n  UserSessionsCleared,\n} from \"./../../actions/user_session\";\nimport Create from \"./Create\";\nimport Modal from \"./../layout/Modal\";\nimport { Select, Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport Facets from \"./Facets\";\nimport {\n  InstantSearch,\n  CurrentRefinements,\n  ClearRefinements,\n  Index,\n  Pagination,\n  HitsPerPage,\n} from \"react-instantsearch-dom\";\nimport searchClient from \"./../../lib/utils/algolia\";\nimport SortBy from \"./../layout/SortBy\"  \nimport locator from './../../lib/utils/geolocator'\nimport getSpots from './../../lib/utils/geo'\n\n\nconst DEFAULT_SORT = \"created_at_DESC\";\nconst DEFAULT_SHOW = 12;\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    sessions: state.user_sessions.data,\n    api: state.api,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadSessions: (session, params) => dispatch(loadUserSessions(session, params)),\n    deleteSession: (session, id) => dispatch(deleteUserSession(session, id)),\n    clearSessions: () => dispatch(UserSessionsCleared()),\n  };\n};\n\nconst relations = {\n  user_session: [\"UserBoard\", \"Location\", \"SessionImage\"],\n};\n\nclass SessionIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sessions: [],\n      //this will recieve the paginated sessions from the child\n      paginatedSessions: [],\n      currentPage: 0,\n      show: false,\n      selectedSortOrder: DEFAULT_SORT,\n      currentHits: [],\n      showAll: 0,\n    };\n    this.deleteSession = this.deleteSession.bind(this);\n    this.editSession = this.editSession.bind(this);\n    this.viewSession = this.viewSession.bind(this);\n  }\n\n \n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n        var options = {\n            enableHighAccuracy: false,\n            timeout: 5000,\n            maximumWait: 10000, // max wait time for desired accuracy\n            maximumAge: 0, // disable cache\n            desiredAccuracy: 30, // meters\n            fallbackToIP: true, // fallback to IP if Geolocation fails or rejected\n            addressLookup: true, // requires Google API key if true\n          };\n        locator.locate(options, function (err, location) {\n        if (err) return console.log(\"location err\", err);\n        console.log(\"location\", location.coords.latitude,location.coords.longitude );\n        getSpots(location.coords.latitude,location.coords.longitude).then(data=>console.log(data)).catch(e=>console.log(e))\n     \n      });\n      //this.props.loadSessions(this.props.session, { orderBy : DEFAULT_SORT ,  wheres : {user_id : this.props.session.user.id }, withs : relations.user_session } );\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearSessions();\n  }\n\n  deleteSession(id) {\n    confirmAlert({\n      title: \"Confirm To Delete\",\n      message: \"Are you sure you want to delete this session?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.props.deleteSession(this.props.session, id);\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  editSession(sessionId) {\n    this.props.history.push(\"/session/edit/\" + sessionId);\n  }\n\n  viewSession(sessionId) {\n    this.props.history.push(\"/session/\" + sessionId);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    this.setState({ show: false });\n  };\n\n  onSortUpdated = (sortOrder)=>{\n    let sort = sortOrder.replace('sessions_', '');\n    if(sort === 'sessions') sort= 'id_desc';\n    this.setState({ selectedSortOrder: sort });\n  }\n\n  setScope = (e) => {\n    if (e.nextValue) {\n      this.setState({ showAll: e.nextValue });\n    }\n  };\n\n  searchResultHandler = (e) => {\n    var isNew = JSON.stringify(e) !== JSON.stringify(this.state.currentHits);\n    if (e.length && isNew) {\n      this.props.loadSessions(this.props.session, {\n        orderBy: this.state.selectedSortOrder,\n        wheres: { in: e.join(\",\") },\n        withs: relations.user_session,\n        page: this.setState.currentPage,\n        limit: DEFAULT_SHOW,\n      });\n      this.setState({ currentHits: e });\n    }\n  };\n\n  onSearch = (e) => {\n    console.log(\"onSearch\", e);\n  };\n\n  render() {\n    const { sessions } = this.props;\n    return (\n      <MainContainer>\n        <InstantSearch\n          key=\"is1\"\n          indexName=\"sessions\"\n          searchClient={searchClient}\n        >\n          <Index indexName=\"sessions\">\n            <div className=\"row\">\n              <div className=\"container card card-lg mx-auto\">\n                <div className=\"card-title\">\n                  <h2>\n                    Sessions\n                    <Link\n                      to=\"#\"\n                      onClick={this.showModal}\n                      className=\"btn btn-sm btn-outline-secondary float-right\"\n                    >\n                      Create New Session\n                    </Link>\n                  </h2>\n                </div>\n                <div className=\"card-text\">\n                  <div className=\"container\">\n                    <div className=\"row col-12\">\n                      <div className=\"col-2\">\n                        <SortBy\n                          defaultRefinement=\"sessions\"\n                          items={[\n                            { value: \"sessions\", label: \"Newest To Oldest\" },\n                            { value: \"sessions_id_asc\", label: \"Oldest To Newest\" },\n                            { value: \"sessions_rating_desc\", label: \"Best To Worst\" },\n                            { value: \"sessions_rating_asc\", label: \"Worst To Best\" }\n                          ]}\n                          onSortUpdated={this.onSortUpdated}\n                        />\n                      </div>\n                      <div className=\"col-10\">\n                        <span className=\"float-right\"><Pagination /></span>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <ClearRefinements />\n                      </div>\n                      <div className=\"col-9\">\n                        <CurrentRefinements />\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-3\">\n                        <div className=\"detail-line is_public_radio\">\n                      \n                          <Form>\n                            <Radio\n                              name=\"is_public\"\n                              label=\"Mine\"\n                              value=\"0\"\n                              onChange={this.setScope}\n                              checked={parseInt(this.state.showAll) === 0}\n                            />\n                            <Radio\n                             className=\"is_public_radio\"\n                              name=\"is_public\"\n                              label=\"Mine + Public\"\n                              value=\"1\"\n                              onChange={this.setScope}\n                              checked={parseInt(this.state.showAll) === 1}\n                            />\n                          </Form>\n                    \n                        </div>\n                        <div className=\"filter-widgets\" id=\"sessions\">\n                          <Facets\n                            onSelect={this.searchResultHandler}\n                            showAll={this.state.showAll}\n                            key=\"sr1\"\n                            hitsPerPage={DEFAULT_SHOW}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col-7\">\n                        <div className=\"row\">\n                          {this.props.sessions &&\n                            this.props.sessions.map((session) => (\n                              <div key={session.id} className=\"col-12 col-lg-6\">\n                                <SessionCard\n                                  session={session}\n                                  key={session.id}\n                                  deleteSession={this.deleteSession}\n                                  viewSession={this.viewSession}\n                                  editSession={this.editSession}\n                                />\n                              </div>\n                            ))}\n                          {(!sessions || sessions.length === 0) && (\n                            <div className=\"col-12\">\n                              <h3>No Sessions found at the moment</h3>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-2\">\n                        <div className=\"col-12 filter-widgets\" id=\"sessions\">\n                          <div className=\"slwd_btv\">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row col-12\">\n                      <div className=\"col-6\"></div>\n                      <div className=\"col-6\">\n                        <span className=\"float-right\">\n                          <HitsPerPage\n                            defaultRefinement={DEFAULT_SHOW}\n                            items={[{value:12}, {value:20}, {value:50}]}\n                          />\n                          <Pagination />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Index>\n        </InstantSearch>\n        <Modal show={this.state.show} handleClose={(e) => this.hideModal(e)}>\n          <Create\n            onSuccess={(e) => this.hideModal(e)}\n            onSubmissionComplete={this.viewSession}\n            close={this.hideModal}\n          />\n        </Modal>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex);\n\n/**\n *        <div className=\"row col-12 filter-widgets\" id=\"sessions\">\n                                <InstantSearch\n                                        indexName=\"dev_sessions\"\n                                        searchClient={searchClient}\n                                        >\n                                        <RefinementList \n                                        container=\"#sessions\"\n                                        attribute=\"rating\"\n                                        searchableIsAlwaysActive={true} />\n                                        <Configure hitsPerPage={8} />\n                                    </InstantSearch>\n                                </div>\n */\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\n//import SessionForm from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\n\nconst TITLE = \"Edit Session\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditSession extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n        this.sessionRequest = new SessionRequests(this.props.session);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            axios.get(apiConfig.host + apiConfig.port + `/api/session/${this.state.id}`, this.props.session.headers).then(data => {\n                const session = data.data;\n                this.setState({ session});\n            })\n            .catch(error=>this.props.history.push('/session'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.sessionRequest.update(this.state.id, this.state.values).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/session');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.push('/user/dashboard');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Session details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                 </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditSession)\n","import WWO from 'worldweatheronline-api';\nimport  wwConfig  from './../../config/worldweather';\n\nexport default WWO.createClient({\n    key : wwConfig.key,\n    responseType: 'json',\n    subscription: 'premium',\n    locale: 'EN'\n});","import React from 'react'\nimport { createField, fieldPresets } from 'react-advanced-form'\nimport Autosuggest from 'react-autosuggest';\n\n\n\nclass TypeAheadInput extends React.Component {\n  \n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            value: props.value || '',\n            suggestions : props.entity\n          };\n    }\n  \n    onChange = (event, { newValue } ) => {\n      console.log('key', newValue)\n        if(this.state.value !== newValue)\n        {\n          this.setState({\n            value: newValue\n          });\n        }\n      };\n\n      onBlur = (event) => {\n        if(this.state.value)\n        console.log('blur', event.target.value)\n          let vid = this.props.entity.find(x => x[this.props.keyName] === event.target.value);\n          this.props.setValue(this.props.name, vid ? vid.id : event.target.value)\n        };\n  \n\n    getSuggestionValue = suggestion => suggestion[this.props.keyName];\n  \n    renderSuggestion = suggestion => (\n        <div>\n          {suggestion[this.props.keyName]}\n        </div>\n      );\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value, reason }) => {\n      this.setState({\n        suggestions: this.props.getSuggestions(value, reason)\n      });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) =>\n    {\n      console.log(event.target);\n      //let vid = this.props.entity.find(x => x[this.props.keyName] === newValue);\n      this.props.setValue(this.props.name, suggestion.id)\n    }\n\n    shouldRenderSuggestions = (value) => {\n      return true\n    }\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState\n\n    const inputClassNames = [\n      'form-control',\n      touched && 'is-touched',\n      pristine && 'is-pristine',\n      validating && 'is-validating',\n      validatedSync && 'validated-sync',\n      validatedAsync && 'validated-async',\n      valid && 'is-valid',\n      validSync && 'valid-sync',\n      validAsync && 'valid-async',\n      invalid && 'is-invalid',\n      'sc-EHOje fVJbnH'\n    ]\n      .filter(Boolean)\n      .join(' ')\n\n      const inputProps = {\n        ...fieldProps,\n        value,\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        onFocus : ()=>this.onSuggestionsFetchRequested({value : name , reason : 'type_ahead_focused'}),\n        id: name,\n        name,\n        className: inputClassNames,\n        autoComplete: \"off\"\n      };\n\n    const wrapperClass = this.props.display ? \"sc-bxivhb eTopIC\" : \"sc-bxivhb eTopIC d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && ' *'}\n          </label>\n        )}\n\n\n        <div className=\"sc-ifAKCX fatWUN\" style={{'maxHeight':200, overflow:'auto'}}>\n        <Autosuggest \n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n                onSuggestionSelected={this.onSuggestionSelected}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                shouldRenderSuggestions={this.shouldRenderSuggestions}\n                //focusInputOnSuggestionClick={false}\n                //alwaysRenderSuggestions={true}\n            />\n       </div>\n\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import { SHAPERS_LOADED } from \"./types\";\nimport ManufacturerRequests from './../requests/ManufacturerRequests';\n\n\nexport const ShapersLoaded = data => ({\n    type: SHAPERS_LOADED,\n    payload: data\n  });\n\n\n\n  export const loadShapers= ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return ShapersLoaded(data)} }}\n      dispatch(\n        new ManufacturerRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import { BOARDS_LOADED } from \"./types\";\nimport BoardRequests from './../requests/BoardRequests';\n\nexport const BoardsLoaded = data => ({\n    type: BOARDS_LOADED,\n    payload: data\n  });\n\n  export const loadBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return BoardsLoaded(data)} }}\n      dispatch(\n        new BoardRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport { Input, Select, Textarea, Button } from 'react-advanced-form-addons';\nimport TypeAheadInput  from './../../form/TypeAheadInput';\nimport rules from './validation-rules'\nimport messages from './validation-messages'\nimport ImageUploader from 'react-images-upload';\nimport { sizes } from './../data/board_sizes';\nimport {loadShapers} from './../../../actions/shaper';\nimport {loadBoards} from './../../../actions/board';\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards: state.boards.data, shapers : state.shapers.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadShapers: (session, params) => dispatch( loadShapers(session, params)), \n        loadBoards: (session, params) => dispatch(loadBoards(session, params)), \n    };\n  };\n\n  const relations = {\n      shapers : ['Board'],\n      boards : ['Manufacturer']\n  }\n\nclass UserBoardForm extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null\n        };\n    }\n\n    onChange = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        this.setState({\n            ...data\n        });\n      };\n\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            if(!this.props.boards.length) this.props.loadBoards(this.props.session, {limit : 1000,   withs : relations.boards});\n            if(!this.props.shapers.length) this.props.loadShapers(this.props.session, {limit : 1000,   withs : relations.shapers});\n        } else {\n                this.props.history.push('/');\n        }\n    }\n\n    getBoardSuggestions = value => {\n        if(!value){\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === this.state.manufacturer_id\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n      getShaperSuggestions = value => {\n        if(!value) return this.props.shapers;\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n\n    render(){\n        return (\n            <div className=\"col-md-12\">\n                <Form action={({ serialized, fields, form}) => this.props.processFormSubmission({session : this.props.session, serialized, fields, form})} rules={rules} messages={messages} className=\"col-md-12 row\">\n                <div className=\"col-md-12 \">\n                    <Input name=\"name\" label=\"Nickname\" className=\"form-control\" required />\n                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                        keyName=\"name\"\n                        label=\"choose a shaper\" \n                        className=\"form-control\" \n                        placeholder=\"Unknown\" \n                        value={this.state.manufacturer_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getShaperSuggestions} \n                        display={true} \n                        required \n                    />\n                    <TypeAheadInput  entity={this.props.boards} \n                        name=\"board_id\" \n                        keyName=\"model\"\n                        label=\"choose a model\" \n                        className=\"form-control\" \n                        placeholder=\"choose a board\" \n                        value={this.state.board_id} \n                        setValue={this.onChange} \n                        getSuggestions={this.getBoardSuggestions}\n                        display={this.state.manufacturer_id !== null }\n                        required \n                    />\n                    {\n                        this.props.children \n                    }\n                      <ImageUploader\n                        withIcon={false}\n                        buttonText='Choose images'\n                        onChange={this.props.onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                    />\n                </div>\n      \n                <div className=\"col-md-12\">\n                    <Input type=\"hidden\" name=\"user_id\" value={this.props.session.user.id} />\n                    <Button type='submit'>  {(this.props.edit) ? (\"Edit Board\") : ( \"Add Board\") }</Button>\n                </div>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps  )(UserBoardForm);","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport {FormCard} from './../layout/FormCard';\nimport  UserBoardForm  from './forms/UserBoardForm';\nimport { withRouter} from 'react-router-dom';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport {createUserBoard, UserBoardCreatedCleared} from './../../actions/user_board';\n\n\n\nconst TITLE=\"Create Board\";\n\nconst mapStateToProps = state => {\n    return { session: state.session, user_boards : state.user_boards}\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createUserBoard : (session, params) => dispatch(createUserBoard(session, params)), \n        clearCreatedBoard : ()=>dispatch( UserBoardCreatedCleared())\n    };\n  };\n\nclass CreateUserBoard extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : []\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        \n        if(this.props.noUpdate) return;\n        if ((prevProps.user_boards.data.length !== this.props.user_boards.data.length) && this.props.user_boards.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_boards.created.id;\n                  \n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n    \n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createUserBoard} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = UserBoardRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createUserBoard(session, { data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <UserBoardForm board={this.state.board} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading}  onDrop={this.onDrop} />\n                    </div>\n                </FormCard>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(withRouter(CreateUserBoard));\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport InlineEdit, { InputType } from 'riec';\nimport {loadUserBoard, UserBoardCreatedCleared} from './../../../actions/user_board';\nimport { s3Conf } from './../../../config/s3';\nimport Modal from './../../layout/Modal';\nimport CreateUserBoard from  './../CreateUserBoard';\nimport {Button } from 'react-advanced-form-addons';\nimport StarBar from './../../layout/StarBar';\n\nimport { withRouter} from 'react-router-dom';\n\nconst mapStateToProps = state => {\n    return { session: state.session, \n        current_session : state.user_sessions.selected,\n        board_created : state.user_boards.created,\n        user_board : state.user_boards.selected\n    }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n      clearCreatedBoard : ()=>dispatch( UserBoardCreatedCleared())     \n    };\n  };\n\nclass BoardPicker extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = { \n            select: {id : 0, name : 'No Board Selected'},\n            selectOptions: [],\n            defaultImage : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\",\n            board_id : props.board_id,\n            selectedBoard : {},\n            show:false\n        };\n        this.hideModal = this.hideModal.bind(this);\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n    };\n\n    hideModal = (e = false) => {\n        this.setState({ show: false });\n    };\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ board_id : this.props.board_id, selectedBoard : this.props.current_session.UserBoard})\n            if(this.props.current_session.board_id) this.props.loadBoard(this.props.session, {id : this.props.current_session.board_id, withs : ['UserBoardImage']} );\n            \n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if((prevProps.current_session.board_id !== this.props.board_id)|| this.props.board_created !== false)\n        {\n            const board_id = this.props.board_created ? this.props.board_created.id : this.props.board_id;\n            this.props.clearCreatedBoard();\n            //this.setState({ board_id : board_id})\n            this.props.onChange(board_id);\n            this.props.loadBoard(this.props.session, {id : board_id, withs : ['UserBoardImage']} );\n        }\n    }\n\n    render() {\n        const session = this.props.current_session;\n        const boardImage = this.props.user_board && this.props.user_board.UserBoardImages && this.props.user_board.UserBoardImages.length ? \n        s3Conf.root + this.props.user_board.UserBoardImages[0].name : this.state.defaultImage;\n        return (\n            <div className={this.props.wrapperClass + \" \"}> \n                <div className=\"col-md-12\"><strong>Board:</strong></div>\n\n                    <div className=\"col-md-4\">\n                        <img className=\"img-responsive\" style={{cursor : 'pointer'}} onClick={()=>this.props.history.push('/board/' + session.board_id)}\n                        src={boardImage}/>      \n                    </div>  \n                    <div className=\"col-md-8 board-select\">\n                        <div className=\"row col-md-12\">\n                        <strong>\n                        <InlineEdit\n                            type={InputType.Select}\n                            value={this.props.user_board.name || \"Select A Board\"}\n                            defaultValue={this.props.user_board.name}\n                            onChange={this.props.onChange}\n                            options={this.props.boards}\n                            valueKey=\"id\"\n                            labelKey=\"name\"\n                            /> \n                            { this.props.user_board  && <div>Size:{this.props.user_board.size }</div> }\n                             { this.props.user_board  &&<div><StarBar stars={this.props.user_board.rating} onClick={this.submitUpdate } size=\"xs\" /></div> }\n                            <div><button type='button' className=\"btn btn-outline-primary btn-sm\" onClick={this.showModal}>New Board</button></div>\n                            </strong>\n                        </div> \n                    </div>       \n                    \n                    <Modal show={this.state.show} handleClose={(e) =>this.hideModal(e)}>\n                        <CreateUserBoard onSuccess={(e) =>this.hideModal(e)} onSubmissionComplete={this.hideModal} />\n                    </Modal>        \n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(withRouter(BoardPicker));\n","import './Session.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport {FormCard} from './../layout/FormCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport Location from './../form/Location';\nimport MainContainer from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {loadUserBoards} from './../../actions/user_board';\nimport {UserSessionCleared,loadUserSession, updateUserSession, loadUserSessionImages, addUserSessionImages, deleteUserSessionImage} from './../../actions/user_session';\nimport WWClient from './../../lib/utils/worldweather'\nimport noaaForecaster from 'noaa-forecasts';\nimport BoardPicker from './../board/forms/BoardPicker';\nimport { Radio} from 'react-advanced-form-addons';\nimport { FacebookProvider, Share, Comments, Page } from 'react-facebook';\nimport fbConfig from './../../config/fb'\nrequire('dotenv').config();\n\nconst mapStateToProps = state => {\n    return { \n        session: state.session, \n        current_session : state.user_sessions.selected, \n        boards : state.user_boards.data, \n        session_images : state.session_images, \n        api:state.api \n    }\n  }\n\n  const withs = {\n    session : ['Location', 'UserBoard.UserBoardImage']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadSession : (session, params)=>dispatch(loadUserSession(session, params)),\n      loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n      clearSession : ()=>dispatch(UserSessionCleared()),\n      editUserSession: (session, params) => dispatch(updateUserSession(session, params)), \n      loadSessionImages: (session, params) => dispatch(loadUserSessionImages(session, params)), \n      addImages : (session, params) => dispatch(addUserSessionImages(session, params)), \n      deleteSessionImage: (session, id) => dispatch( deleteUserSessionImage (session, id))\n    };\n  };\n\nclass SessionView extends Component {\n\n    \n    constructor(props)\n    {\n        super(props)\n        this.UserSessionRequest = new SessionRequests(props.session);\n        \n        this.state = { \n            boards : [], \n            select: {id : 0, name : 'No Board Selected'},\n            selectedImage : null,\n            selectOptions: [],\n            uploaderInstance : 1,\n            imageIndex : 0,\n            date: '',\n            is_public : null,\n            defaultImage : \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\"\n        };\n        this.onDrop = this.onDrop.bind(this);\n    \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.loadWorldWeather();\n            this.props.loadBoards(this.props.session, {orderBy: 'name_ASC', limit:50, wheres : {user_id : this.props.session.user.id }} );\n            this.props.loadSession(this.props.session, {id : this.props.match.params.id,  withs : withs.session});\n            this.props.loadSessionImages(this.props.session, {wheres : {session_id : this.props.match.params.id }} );\n        }\n       else{\n            this.props.history.push('/session');\n       }\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = SessionRequests.createFormRequest({session_id : this.props.current_session.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n      \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n            ((this.props.boards.length && !this.state.selectOptions.length && this.props.current_session.id)\n            || (prevProps.boards.length !== this.props.boards.length)) && this.setSelectedBoard();\n    }\n\n    setSelectedBoard = () =>\n    {\n        const boardOptions = [{id : 0, name : 'select'}];\n        let select = this.state.select\n        this.props.boards.map((obj) => {\n            let board = { id : obj.id , name : obj.name};\n            if(obj.id === this.props.current_session.board_id) select = board;\n            return boardOptions.push(board) \n        })\n        this.setState({selectOptions: boardOptions, select : select})\n    }\n\n    componentWillUnmount(){\n        this.props.clearSession();\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/user/dashboard');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserSession(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    onLocationChange = (propertyName , newValue ) => {\n        if(!newValue) return;\n        const data = [];\n        data[propertyName] = newValue;\n        this.submitUpdate({ ...data});\n      };\n\n\n    onPrivacyChange = (e)=>\n    {\n        //@totdo this double submits without keeping track of state\n        if(e.nextValue !== this.state.is_public){\n            this.setState({is_public : e.nextValue});\n            this.submitUpdate({is_public :e.nextValue })\n        }\n    }\n    \n      onLocationBlur = (e, a, d) =>\n    {\n\n    }\n\n    onBoardChange = (id) =>\n    {\n        if(!id) return;\n        this.submitUpdate({ board_id : id});\n        const idInt = parseInt(id);\n        this.state.selectOptions.map((obj) => {\n            if(obj.id === idInt ) this.setState({select : obj});\n            return true;\n        })\n    }\n\n    onImageLoad = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteSessionImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.session_images[newIndex]})\n        });\n    }\n\n    onDateChange = date => {\n        let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        this.submitUpdate({session_date : formattedDate})\n        this.setState({date : date})\n      };\n\n    render() {\n        const session = this.props.current_session;\n        return (\n            <MainContainer>\n              <FacebookProvider appId={fbConfig.api_key}>\n                <FormCard returnToIndex={this.returnToIndex}>\n                  <Form>\n                    <div className=\"container\">\n                      <div className=\"details row\">\n                        <h3 className=\"col-12 session-title\">\n                          <RIEInput\n                            required={false}\n                            value={session.title || \"\"}\n                            defaultValue={session.title}\n                            change={this.submitUpdate}\n                            propName=\"title\"\n                          />\n                        </h3>\n                        <div className=\"col-12\">\n                          <StarBar\n                            stars={session.rating}\n                            onClick={this.submitUpdate}\n                            size=\"1x\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"preview col-7\">\n                          <ImageGallery\n                            items={this.props.session_images}\n                            showBullets={true}\n                            showIndex={true}\n                            startIndex={this.state.imageIndex}\n                            onSlide={this.onImageSelected}\n                            onImageLoad={this.onImageLoad}\n                            thumbnailPosition={\"bottom\"}\n                          />\n                          <div className=\"card-body\">\n                            <div className=\"card-text\">\n                              <ImageUploader\n                                key={this.state.uploaderInstance}\n                                withIcon={false}\n                                buttonText=\"Add Images!\"\n                                onChange={this.onDrop}\n                                imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n                                maxFileSize={5242880}\n                                withPreview={false}\n                                withLabel={false}\n                              />\n                              <FontAwesomeIcon\n                                size=\"lg\"\n                                alt=\"delete user\"\n                                style={{\n                                  marginLeft: \".5em\",\n                                  cursor: \"pointer\",\n                                  color: \"red\",\n                                }}\n                                icon={faTrash}\n                                onClick={this.deleteImage}\n                                value={this.state.imageIndex}\n                              />\n                              <Share href={window.location.href}>\n                                {({ handleClick, loading }) => (\n                                  <button\n                                    type=\"button\"\n                                    disabled={loading}\n                                    onClick={handleClick}\n                                  >\n                                    Share\n                                  </button>\n                                )}\n                              </Share>\n                              <Page href={window.location.href} tabs=\"timeline\" />\n                              <Comments href={window.location.href} />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"details col-5\">\n                          <div className=\"container\">\n                            <div className=\"detail-line\">\n                              <div className=\"detail-line\">\n                                <div>\n                                  <strong>Privacy:</strong>\n                                </div>\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Private\"\n                                  value=\"0\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.id && session.is_public !== true}\n                                />\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Public\"\n                                  value=\"1\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.is_public && session.is_public === true}\n                                />\n                              </div>\n                              <div>\n                                <strong>Location:</strong>\n                              </div>\n                              <Location\n                                id=\"location_id\"\n                                name=\"location_id\"\n                                className=\"form-control\"\n                                onChange={this.onLocationChange}\n                                onBlur={this.onLocationBlur}\n                                value={session.location_id}\n                                placeholder={\n                                  session.Location\n                                    ? session.Location.formatted_address\n                                    : \"No Location Specified\"\n                                }\n                              />\n                            </div>\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Date:</strong>\n                              </div>\n                              <DatePicker\n                                selected={this.state.date}\n                                className=\"date-picker-input form-control\"\n                                onChange={this.onDateChange} //only when value has changed\n                                showTimeSelect\n                                dateFormat={\"MMMM d yyyy h:mm a\"}\n                                placeholderText={moment(session.session_date).format(\n                                  \"MMMM D YYYY h:mm a\"\n                                )}\n                              />\n                            </div>\n                            <BoardPicker\n                              onChange={this.onBoardChange}\n                              boards={this.state.selectOptions}\n                              board_id={session.board_id}\n                              wrapperClass=\"row detail-line\"\n                            />\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Notes:</strong>\n                              </div>\n                              <RIETextArea\n                                value={\n                                  session.notes || \"You have no notes for this session\"\n                                }\n                                className=\"form-control text-area\"\n                                defaultValue={session.notes}\n                                change={this.submitUpdate}\n                                propName=\"notes\"\n                                validate={_.isString}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Form>\n                </FormCard>\n              </FacebookProvider>\n            </MainContainer>\n          );\n          \n    }\n\n    loadNoaa = () =>\n    {\n        var inspect = require('util').inspect;\n        var obj = {\n            listLatLon: '38.99,-77.01 37.7833,-122.4167',\n            //product: 'time-series', // this is a default, it's not actually required\n            begin: moment().format('YYYY-MM-DDTHH:mm:ss'),\n            end: moment().add(3, 'days').format('YYYY-MM-DDTHH:mm:ss'),\n            qpf: 'qpf', // first elementInputName - Liquid Precipitation Amount\n            pop12: 'pop12' // another elementInputName - 12 hour probability of precipitation    \n            };\n            var token = 'yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV';\n            noaaForecaster.setToken(token);\n            noaaForecaster.getForecast(obj)\n            .then(function(results) {\n                console.log(inspect(results, { colors: true, depth: Infinity }));\n            });\n    }\n\n    loadWorldWeather = () =>\n    {\n        WWClient.marineWeatherApi({\n            q: \" 39.6655908,-74.23336239999999\",\n            tide : \"yes\"\n        }, function(err, result) {\n            if (!err) {\n                console.log(result);\n            } else {\n                console.log(err);\n            }\n        });\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps )(SessionView)","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport ReactPaginate from 'react-paginate';\nimport './css/Paginate.css';\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Paginate extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            offset: 0,\n            elements: [],\n            perPage: props.perPage || 4,\n            currentPage: 0,\n            pageCount : 0\n          };\n    }\n\n    componentDidMount()\n    {\n        (this.props.data.length && !this.state.elements.length) && this.setElementsForCurrentPage(this.props.data);\n    }\n    \n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if(JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data))\n        {\n          this.setState({ currentPage:0}, () =>{this.setElementsForCurrentPage(this.props.data)});\n        }\n    }\n\n    setElementsForCurrentPage(boards) {\n        let elements = boards\n        .slice(this.state.offset, this.state.offset + this.state.perPage);\n        const pageCount = Math.ceil(boards.length/this.state.perPage);\n        this.setState({ pageCount : pageCount, elements : elements });\n        this.props.updatePaginationElements(elements, this.state.currentPage)\n      }\n\n      handlePageClick = (data) => {\n        const selectedPage = data.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({ currentPage: selectedPage, offset: offset }, () => {\n          this.setElementsForCurrentPage(this.props.data);\n        });\n      }\n\n    render() {\n        return <ReactPaginate\n        previousLabel={\"← Previous\"}\n        nextLabel={\"Next →\"}\n        breakLabel={<span className=\"gap\">...</span>}\n        pageCount={this.state.pageCount}\n        onPageChange={this.handlePageClick}\n        forcePage={this.props.currentPage}\n        containerClassName={\"pagination\"}\n        previousLinkClassName={\"previous_page\"}\n        nextLinkClassName={\"next_page\"}\n        disabledClassName={\"disabled\"}\n        activeClassName={\"active\"}\n        />\n    }\n}\n\nexport default connect(mapStateToProps)(Paginate);\n","import './css/Facets.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { RefinementList , Configure, ClearRefinements,  CurrentRefinements } from 'react-instantsearch-dom';\nimport SearchResults from './../layout/SearchResults'\n\n\n\nfunction mapStateToProps(state) {\n    return { api: state.api, session : state.session };\n} \n\nclass Facets extends React.Component{\n    render()\n    {\n        return (\n        <div>\n            <h6>Manufacturers</h6>\n            <div>\n            <RefinementList \n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"manufacturer\"\n            />\n            </div>\n            <h6>Models</h6>\n            <div>\n            <RefinementList \n            key=\"rl1\"\n            container=\"#sessions\"\n            attribute=\"model\"\n            showMoreLimit={3}\n            />\n            </div>\n           \n            <Configure hitsPerPage={2000} \n                filters={\"user_id:\" + this.props.session.user.id } \n                maxValuesPerFacet={20}\n                maxFacetHits={20}\n            />\n            <SearchResults onChange={this.props.onSelect} key=\"sr1\" />\n           \n            </div>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(Facets) ","import 'react-confirm-alert/src/react-confirm-alert.css'; \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport  MainContainer  from './../layout/MainContainer';\nimport { confirmAlert } from 'react-confirm-alert';\nimport BoardCard from './../user/BoardCard';\nimport {loadUserBoards, deleteUserBoard, UserBoardsCleared, UserBoardCreatedCleared} from './../../actions/user_board';\nimport Paginate from './../layout/Paginate';\nimport Modal from './../layout/Modal';\nimport CreateUserBoard from  './CreateUserBoard';\nimport { Select} from 'react-advanced-form-addons';\nimport { Form } from 'react-advanced-form';\nimport { InstantSearch, SearchBox, CurrentRefinements, ClearRefinements} from 'react-instantsearch-dom';\nimport searchClient from './../../lib/utils/algolia'\nimport Facets from './Facets';\nimport { hasSession } from './../../lib/utils/session';\n\nconst DEFAULT_SORT = \"created_at_DESC\";\n\nconst mapStateToProps = state => {\n    return { userSession: state.session, boards : state.user_boards.data }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        loadBoards: (userSession, params) => dispatch(loadUserBoards(userSession, params)),\n        deleteBoard: (userSession, id) => dispatch( deleteUserBoard(userSession, id) ) ,\n        clearBoards : ()=>dispatch(UserBoardsCleared()),\n        clearCreatedBoard : ()=>dispatch( UserBoardCreatedCleared())       \n    };\n  };\n \nconst relations = {\n    user_board : ['Board.Manufacturer', 'UserBoardImage']\n};\n\nclass BoardIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteBoard = this.deleteBoard.bind(this);\n        this.editBoard = this.editBoard.bind(this);\n        this.viewBoard = this.viewBoard.bind(this);\n        this.state = {\n            elements: [],\n            currentPage: 0,\n            show : false,\n            selectedSortOrder : DEFAULT_SORT,\n            currentHits : []   \n          };\n    }\n\n    componentDidMount(){\n        hasSession();\n        if (this.props.userSession.isLoggedIn) {\n            //this.props.loadBoards(this.props.userSession, { orderBy : DEFAULT_SORT , wheres : {user_id : this.props.userSession.user.id }, withs : relations.user_board} );\n        }\n    }\n\n    componentWillUnmount(){\n        this.props.clearBoards();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n       // ((prevProps.boards.length !== this.props.boards.length) || (this.props.boards.length && !this.state.elements.length)) && this.setElementsForCurrentPage(this.props.boards);\n    }\n\n    updatePaginationElements = (elements, currentPage)=>\n    {\n        this.setState({ elements: elements, currentPage : currentPage});\n    }\n    \n    deleteBoard(id) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this userSession?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    this.props.deleteBoard(this.props.userSession, id);\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editBoard(boardId) {\n        this.props.history.push('/board/edit/' + boardId);\n    }\n\n    boardCreated = (id)=>\n    {\n        this.props.clearCreatedBoard();\n        this.viewBoard(id);\n    }\n\n    viewBoard(boardId) {\n        this.props.history.push('/board/' + boardId);\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n      \n    };\n\n    hideModal = (e = false) => {\n        if(e) e.preventDefault();\n        this.setState({ show: false });\n    };\n\n    sortBoards = (e) =>{\n        if(e.nextValue)\n        {\n         this.props.loadBoards(this.props.userSession,  { orderBy : e.nextValue, wheres : {user_id : this.props.userSession.user.id }, withs : relations.user_board})\n         this.setState({ selectedSortOrder: e.nextValue});\n        }\n     }\n\n     hit = ({hit}) => {\n        return <div className = \"hit\">\n                    <div className = \"hitImage\" onClick={()=>this.viewBoard(hit.id)}>\n                        {hit.name}\n                    </div>\n                </div> \n       }\n\n       searchResultHandler = (e)=>\n       {\n            var isNew  = JSON.stringify(e) !== JSON.stringify(this.state.currentHits)\n            if(e.length && isNew) \n            {\n                const sort = e.nextValue ? e.nextValue : DEFAULT_SORT;\n                this.props.loadBoards(this.props.userSession,  { orderBy : sort, wheres : {in : e.join(',') }, withs : relations.user_board})\n                this.setState({currentHits : e})\n            } \n       }\n   \n    render() {\n        const { boards } = this.props;\n        let pagination =  <Paginate updatePaginationElements={this.updatePaginationElements} data={this.props.boards } currentPage={this.state.currentPage} perPage={8}/>\n        return (\n            <MainContainer>\n                 <InstantSearch\n                    indexName=\"user_boards\"\n                    searchClient={searchClient}\n            >\n                <div className=\"row\">\n                    <div className=\"container card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Boards\n                        <button onClick={this.showModal} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Board</button>\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"container\" >\n                                <div className=\"row col-12\">\n                                    <div className=\"col-2\">\n                                        <Form>\n                                            <Select name=\"board_id\" value={this.state.selectedSortOrder}  onChange={this.sortBoards}>\n                                                <option value=\"created_at_DESC\"  >Newest</option>\n                                                <option value=\"created_at_ASC\">Oldest</option>\n                                                <option value=\"name_DESC\">Name A-Z</option>\n                                                <option value=\"name_ASC\" >Name Z-A</option>\n                                                <option value=\"rating_DESC\">Rating Best to Worst</option>\n                                                <option value=\"rating_ASC\">Rating Worst To Best</option>\n                                            </Select>\n                                        </Form>\n                                    </div>\n                                    <div className=\"col-10\">\n                                        <span className=\"float-right\"> \n                                            {pagination}\n                                        </span>\n                                    </div> \n                                </div>\n                                <div className=\"row col-12\">\n                                    <div className=\"col-3\">\n                                        <ClearRefinements />\n                                    </div>\n                                    <div className=\"col-9\">\n                                        <CurrentRefinements />\n                                    </div>\n                                </div>\n                                <div className=\"row col-12\">\n                                    <div className=\"col-3\">\n                                        <div className=\"filter-widgets\" id=\"sessions\">\n                                            <Facets onSelect={this.searchResultHandler} key=\"sr1\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-7\">\n                                        <div className=\"row col-12\">\n                                            {this.state.elements && this.state.elements.map(board =>  \n                                            <div  key={board.id} className=\"col-md-6 col-sm-12\" >\n                                                <BoardCard board={board}  deleteBoard={this.deleteBoard} viewBoard={this.boardCreated} editBoard={this.editBoard}  />\n                                            </div>                          \n                                            )\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"col-2\">\n                                        <div className=\"col-12 filter-widgets\" id=\"sessions\">\n                                    </div>\n                                </div>\n                                </div>\n                            <div className=\"row col-12\">\n                                <div className=\"col-6\">\n                                </div> \n                                <div className=\"col-6\">\n                                    <span className=\"float-right\">\n                                        {pagination}\n                                    </span>\n                                </div> \n                            </div> \n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n            </InstantSearch>\n            <Modal show={this.state.show} handleClose={(e) =>this.hideModal(e)}>\n                    <CreateUserBoard onSuccess={(e) =>this.hideModal(e)} onSubmissionComplete={this.viewBoard} close={this.hideModal} />\n            </Modal>  \n        </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex)","import React from 'react';\n\nexport const BoardForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\">Name</label>\n            <input type=\"text\" id=\"model\" defaultValue={props.board.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Give your Board a Nickname\" />\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Manufacturer/Shaper\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.manufacturers.map((obj) => {\n                     return <option prop={obj.name} value={obj.id}>{obj.name}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> Model\n            <select  onChange={(e) => props.handleInputChanges(e)} id=\"manufacturer_id\" name=\"manufacturer_id\" className=\"form-control\">\n                {props.models.map((obj) => {\n                     return <option prop={obj.model} value={obj.id}>{obj.model}</option>\n                 })}\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Board on a scale of 1-10?\n            <select value={props.board.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Board be Public to ALL logged-in Users?\n            <select value={props.board.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Board\") : ( \"Add Board\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { BoardForm } from './forms/BoardForm';\n\nconst TITLE = \"Edit Board\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditBoard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            board : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.props.session.headers).then(data => {\n                const board = data.data;\n                this.setState({ board });\n            })\n            .catch(error=>this.props.history.push('/board'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/board/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/board');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/board');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Board details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <BoardForm board={this.state.board} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditBoard)\n","\nimport './Board.css'\n\nimport _ from 'lodash';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport {FormCard} from './../layout/FormCard';\nimport { Form } from 'react-advanced-form';\nimport { RIEInput, RIETextArea} from '@attently/riek';\n\nimport SessionCard from './../session/SessionCard';\nimport  MainContainer  from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\n\n\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport TypeAheadInput  from './../form/TypeAheadInput';\nimport { sizes } from './data/board_sizes';\nimport InlineEdit, { InputType } from 'riec';\n\nimport {loadBoards} from './../../actions/board';\nimport {loadShapers} from './../../actions/shaper';\nimport {loadUserSessions} from './../../actions/user_session';\nimport {loadUserBoard, updateUserBoard, loadUserBoardImages, addUserBoardImages, deleteUserBoardImage  } from './../../actions/user_board';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, board : state.user_boards.selected , boards: state.boards.data, shapers : state.shapers.data , images : state.user_board_images}\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadBoard: (session, params) => dispatch( loadUserBoard(session, params)), \n      loadSessions: (session, params) => dispatch( loadUserSessions(session, params)), \n      loadShapers: (session, params) => dispatch( loadShapers(session, params)), \n      loadBoards: (session, params) => dispatch(loadBoards(session, params)), \n      editUserBoard: (session, params) => dispatch(updateUserBoard(session, params)), \n      loadBoardImages: (session, params) => dispatch(loadUserBoardImages(session, params)), \n      addImages : (session, params) => dispatch(addUserBoardImages(session, params)), \n      deleteBoardImage: (session, id) => dispatch( deleteUserBoardImage (session, id))\n    };\n  };\n\nconst relations = {\n    user_session : ['Location', 'SessionImage'],\n    selected_board : ['Board.Manufacturer', 'Session.SessionImage', 'Session.UserBoard'],\n    shapers : ['Board'],\n    boards : ['Manufacturer']\n};\n\nclass BoardView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [],\n            board_id: '',\n            manufacturer_id : '',\n            uploaderInstance : 1,\n            imageIndex : 0,\n            modelPlaceholder : null,\n            boardSizeOptions : this.prepBoardSizeOptions(sizes)\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoard(this.props.session, { id : this.props.match.params.id,  withs : relations.selected_board} );\n            this.props.loadSessions(this.props.session, { wheres : {board_id : this.props.match.params.id}, withs : relations.user_session} );\n            this.props.loadBoards(this.props.session, { limit:1000, withs : relations.boards} );\n            this.props.loadShapers(this.props.session, {withs : relations.shapers});\n            this.props.loadBoardImages(this.props.session, {wheres : {user_board_id : this.props.match.params.id }} );\n        }\n        else this.props.history.push('/board');\n    }\n\n    prepBoardSizeOptions = (sizes)=>\n    {\n        const filteredSizes = [];\n        sizes.forEach(size=> filteredSizes.push({id : size }))\n        return filteredSizes;\n    }\n\n    onTypeAheadSelected = (propertyName , newValue ) => {\n        const data = [];\n        data[propertyName] = newValue;\n        //here we have to make sure to clear out the model if not belong to shaper\n        if(propertyName === 'manufacturer_id'){\n            const boardId = (!Number.isInteger(this.state.board_id)) ? this.props.board.id :this.state.board_id;\n            const board = this.props.boards.find(board=> board.id === boardId); \n            if( board && (board.manufacturer_id !== newValue))\n            {\n                data['board_id'] = ''\n                data['modelPlaceholder'] = 'Choose A Board'\n            }\n        }\n        this.setState({\n            ...data\n        });\n      };\n\n      getShaperSuggestions = (value, reason)  => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused') return this.props.shapers;\n \n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.shapers.filter(entity=>\n            entity.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n      };\n\n      getBoardSuggestions = (value, reason) => {\n        //if its empty or just focused let's show everything\n        if(!value || reason === 'type_ahead_focused'){\n            const shaperId = (this.state.manufacturer_id === '') ? this.props.board.Board.manufacturer_id : this.state.manufacturer_id;\n            return this.props.boards.filter(entity=>\n                entity.manufacturer_id === shaperId\n            );\n        }\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        return inputLength === 0 ? [] : this.props.boards.filter(entity=>\n            entity.model.toLowerCase().slice(0, inputLength) === inputValue && entity.manufacturer_id === this.state.manufacturer_id\n        );\n      };\n\n\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserBoard(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/board');\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = UserBoardRequests.createFormRequest({user_board_id : this.props.board.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\n    onImageLoad = (e) =>\n    {\n        this.setState({selectedImage : this.props.images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteBoardImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.images[newIndex]})\n        });\n    }\n\n    renderLeftNav() {\n        return (\n          <button\n            className='image-gallery-custom-left-nav btn btn-primary'>hello\n            </button>\n        )\n      }\n\n    render() {\n        const { board } = this.props;\n        const modelPlaceholder = (this.state.modelPlaceholder) ? this.state.modelPlaceholder : board.Board ? board.Board.model : 'Choose A Model';\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <Form>\n\t\t\t\t        <div className=\"row col-md-12 container\">\n                            <h2 className=\"details col-md-12\">\n                                <RIEInput\n                                    required={false}\n                                    value={board.name || ''}s\n                                    defaultValue={board.name}\n                                    change={this.submitUpdate}\n                                    propName='name'\n                                />\n                            </h2>\n                            <div className=\"preview col-md-6\">\n                                <div className=\"card\" >\n                                    <ImageGallery \n                                            items={this.props.images} \n                                            showBullets={true} \n                                            showIndex={true}\n                                            startIndex={this.state.imageIndex}\n                                            onSlide={this.onImageSelected} \n                                            showNav={false}\n                                            //renderCustomControls={this.renderLeftNav}\n                                            onImageLoad={this.onImageLoad}\n                                            className=\"card-img-top\" />\n                                    <div className=\"card-body\">\n                                        <div className=\"card-text\"><ImageUploader\n                                                key={this.state.uploaderInstance}\n                                                withIcon={false}\n                                                buttonText='Add Images!'\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                label=''\n                                                withPreview={false}/>\n                                     \n                                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <div className=\"detail-line\">\n                                    <StarBar stars={board.rating} onClick={this.submitUpdate } size=\"1x\"/>\n                                </div>\n                                <div className=\"detail-line\">\n                                    <strong>Size:</strong>\n                                   &nbsp; \n                                   <InlineEdit\n                                        type={InputType.Select}\n                                        value={board.size || \"Select A Size\" }\n                                        onChange={(data)=>{this.submitUpdate({size : data})}}\n                                        options={this.state.boardSizeOptions}\n                                        valueKey=\"id\"\n                                        labelKey=\"id\"\n                                    /> \n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Shaper/Company:</strong></div>\n                                    <TypeAheadInput  entity={this.props.shapers} name=\"manufacturer_id\" \n                                        keyName=\"name\"\n                                        className=\"form-control\" \n                                        placeholder={board.Board && board.Board.Manufacturer ? board.Board.Manufacturer.name : 'Choose A Shaper'}\n                                        value={this.state.manufacturer_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getShaperSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                    <div><strong>Model:</strong></div>\n                                    <TypeAheadInput  entity={this.props.boards} name=\"board_id\" \n                                        keyName=\"model\"\n                                        className=\"form-control\" \n                                        placeholder={modelPlaceholder}\n                                        value={this.state.board_id} \n                                        setValue={this.onTypeAheadSelected} \n                                        getSuggestions={this.getBoardSuggestions} \n                                        display={true} \n                                    />\n                                </div>\n                                <div className=\"detail-line\">\n                                <div><strong>Notes:</strong></div>\n                               \n                                        <RIETextArea\n                                            value={board.notes || 'You have no notes for this session'}\n                                            defaultValue={board.notes}\n                                            className=\"form-control text-area\"\n                                            change={this.submitUpdate }\n                                            propName='notes'\n                                            validate={_.isString} \n                                        />\n                                       \n                                    </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"row col-12\" style={{marginTop : '1em'}}><h5>Used In Sessions...</h5></div>\n                            <div className=\"row col-12\" >\n                                {board.Sessions && \n                                board.Sessions.reduce((mappedArray, session, index) => {                           \n                                    if (index < 3) { \n                                             mappedArray.push(\n                                                <div className=\"col-md-4\" key={index}>\n                                                    <SessionCard session={session} key={session.id}  />\n                                                </div>\n                                                );\n                                                }                                                  \n                                                return mappedArray;}, \n                                                            [])\n                                            }\n                                            {\n                                                (!board.Sessions || board.Sessions.length === 0) &&  <div className=\"col-12\"><h3>No Sessions found at the moment</h3></div>\n                                            } \n                                        </div>\n                                    \n                            \n                        </div>\n                  \n                    </Form>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass LocationRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.location.id}>\n                <div className=\"col-6\">\n                <div><button className=\"btn btn-link\"  onClick={() => this.props.viewLocation(this.props.location.id)}>{this.props.location.name}</button></div>\n                <div>{this.props.location.City.name}</div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.location.createdAt}\n                </div>\n                <div className=\"col-3 location-details\">\n                    <div>{!this.props.location.is_public || this.props.location.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.location.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editLocation(this.props.location.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteLocation(this.props.location.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default LocationRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport LocationRow from './LocationRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { locations: [], headers : {}, isAdmin : false }\n        this.deleteLocation = this.deleteLocation.bind(this);\n        this.editLocation = this.editLocation.bind(this);\n        this.viewLocation = this.viewLocation.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ locations: data.data })\n            });\n        }\n    }\n\n    deleteLocation(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/location/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.locations.findIndex(location => location.id === id);\n                        this.state.locations.splice(index, 1);\n                        this.props.history.push('/location');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editLocation(locationId) {\n        this.props.history.push('/location/edit/' + locationId);\n    }\n\n    viewLocation(locationId) {\n        this.props.history.push('/location/' + locationId);\n    }\n\n    render() {\n        const locations = this.state.locations;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg  mx-auto\">\n                        <div className=\"card-title\"><h2>Locations\n                        { this.state.isAdmin &&  <Link to={'location/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Location</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Location\n                                    </div>\n                                </div>\n                                {locations && locations.map(location =>\n                                (this.state.isAdmin || location.isPublic) &&\n                                    <LocationRow location={location} deleteLocation={this.deleteLocation} viewLocation={this.viewLocation} editLocation={this.editLocation} isAdmin={this.state.isAdmin} key={ location.id }/>\n                                )\n                                }\n                                {\n                                    (!locations  || locations.length === 0) &&  <div className=\"col-12\"><h3>No locations found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationIndex)","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div onClick={() => props.removeImage(image.public_id)}  className='delete'>\n        <FontAwesomeIcon icon={faTimesCircle}  />\n      </div>\n      <img className=\"preview\" src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n    <div className=''>\n      <label className=\"fileContainer\">\n        Upload An Image!\n          <input type='file' multiple id='multi' onChange={props.onChange} accept=\".jpg,.jpeg,.gif,.png\" /> \n      </label>\n      <FontAwesomeIcon icon={faImage} color='#3B5998' size='3x' />\n    </div>\n","import React from 'react';\n\nexport const LocationForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Location on a scale of 1-10?\n            <select value={props.location.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Location be Public to ALL logged-in Users?\n            <select value={props.location.is_public} onChange={(e) => props.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Model </label>\n            <input type=\"text\" id=\"model\" defaultValue={props.location.model} onChange={(e) => props.handleInputChanges(e)} name=\"model\" className=\"form-control\" placeholder=\"Location Model\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Location\") : ( \"Add Location\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\n\nconst TITLE=\"Create Location\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            location : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n           // const headers = { headers: { \n               // Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n               // 'content-type': 'multipart/form-data'\n         //   }};\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/location`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/location');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/location');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <LocationForm location={this.state.location} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </LocationForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { LocationForm } from './LocationForm';\n\nconst TITLE = \"Edit Location\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditLocation extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            location : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.props.session.headers).then(data => {\n                const location = data.data;\n                this.setState({ location });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/location/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/location');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Location details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <LocationForm location={this.state.location} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditLocation)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Location.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass LocationView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/location/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/location') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/location'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/location');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/location');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Location:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(LocationView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass ManufacturerRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.manufacturer.id}>\n                <div className=\"col-6\">\n                <div><button className=\"btn btn-link\"  onClick={() => this.props.viewManufacturer(this.props.manufacturer.id)}>{this.props.manufacturer.name}</button></div>\n                </div>\n                <div className=\"col-3\">\n                {this.props.manufacturer.createdAt}\n                </div>\n                <div className=\"col-3 manufacturer-details\">\n                    <div>{!this.props.manufacturer.is_public || this.props.manufacturer.is_public === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.manufacturer.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editManufacturer(this.props.manufacturer.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteManufacturer(this.props.manufacturer.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default ManufacturerRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport ManufacturerRow from './ManufacturerRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { manufacturers: [], headers : {}, isAdmin : false }\n        this.deleteManufacturer = this.deleteManufacturer.bind(this);\n        this.editManufacturer = this.editManufacturer.bind(this);\n        this.viewManufacturer = this.viewManufacturer.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ manufacturers: data.data })\n            });\n        }\n    }\n\n    deleteManufacturer(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this session?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/manufacturer/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.manufacturers.findIndex(manufacturer => manufacturer.id === id);\n                        this.state.manufacturers.splice(index, 1);\n                        this.props.history.push('/manufacturer');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/edit/' + manufacturerId);\n    }\n\n    viewManufacturer(manufacturerId) {\n        this.props.history.push('/manufacturer/' + manufacturerId);\n    }\n\n    render() {\n        const manufacturers = this.state.manufacturers;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\"><h2>Manufacturers\n                        { this.state.isAdmin &&  <Link to={'manufacturer/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Manufacturer</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Date\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Manufacturer\n                                    </div>\n                                </div>\n                                {manufacturers && manufacturers.map(manufacturer =>\n                                (this.state.isAdmin || manufacturer.isPublic) &&\n                                    <ManufacturerRow manufacturer={manufacturer} deleteManufacturer={this.deleteManufacturer} viewManufacturer={this.viewManufacturer} editManufacturer={this.editManufacturer} isAdmin={this.state.isAdmin} key={ manufacturer.id }/>\n                                )\n                                }\n                                {\n                                    (!manufacturers  || manufacturers.length === 0) &&  <div className=\"col-12\"><h3>No manufacturers found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerIndex)","import React from 'react';\n\nexport const ManufacturerForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"model\"> Name </label>\n            <input type=\"text\" id=\"name\" defaultValue={props.manufacturer.name} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Manufacturer Name\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Manufacturer\") : ( \"Add Manufacturer\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\n\nconst TITLE=\"Create Manufacturer\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            session: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {},\n            manufacturer : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('model' , this.state.model);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/manufacturer`, formData, this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/manufacturer');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/manufacturer');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <ManufacturerForm manufacturer={this.state.manufacturer} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </ManufacturerForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { ManufacturerForm } from './ManufacturerForm';\n\nconst TITLE = \"Edit Manufacturer\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditManufacturer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            session: {},\n            manufacturer : {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.props.session.headers).then(data => {\n                const manufacturer = data.data;\n                this.setState({ manufacturer });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/manufacturer/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/manufacturer');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const session = this.state.session;\n        session[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({session});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Manufacturer details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <ManufacturerForm manufacturer={this.state.manufacturer} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditManufacturer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Manufacturer.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass ManufacturerView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { session: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/manufacturer/` + this.props.match.params.id, this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/manufacturer') : this.setState({ session: data.data });\n            })\n            .catch(error=>this.props.history.push('/manufacturer'));\n        }\n        if(this.state.session === [])\n        {\n            this.props.history.push('/manufacturer');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/manufacturer');\n    }\n\n    render() {\n        const session = this.state.session;\n        const pic = (session.picture  == null) ? 'no_photo.jpg' : session.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"session\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"session-title\">{session.title}</h3>\n                                <h5 className=\"submitted-by\">By <span>{session.createdAt}</span></h5>\n                                <h5 className=\"review-no\">Rated: {session.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={session.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Manufacturer:</h5>\n                                <p className=\"session-description\">{ session.title }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(ManufacturerView)","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\nimport EditSession from './components/session/Edit';\nimport SessionView from './components/session/View';\n\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport EditBoard from './components/board/Edit';\nimport BoardView from './components/board/View';\n\nimport LocationIndex from './components/location/LocationIndex';\nimport CreateLocation from './components/location/Create';\nimport EditLocation from './components/location/Edit';\nimport LocationView from './components/location/View';\n\nimport ManufacturerIndex from './components/manufacturer/ManufacturerIndex';\nimport CreateManufacturer from './components/manufacturer/Create';\nimport EditManufacturer from './components/manufacturer/Edit';\nimport ManufacturerView from './components/manufacturer/View';\n\nconst mapStateToProps = state => {\n    return { session: state.session, user : state.user }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session} username={this.props.user.first_name} />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <PrivateRoute path={'/session/edit/:id'} exact component={EditSession} session={this.props.session}  />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <PrivateRoute path={'/board/edit/:id'} exact component={EditBoard} session={this.props.session}  />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n      \n          <PrivateRoute path={'/location/create'} exact component={CreateLocation} session={this.props.session} />\n          <PrivateRoute path={'/location/edit/:id'} exact component={EditLocation} session={this.props.session}  />\n          <Route  path={'/location/:id'} exact component={LocationView }/>\n\n   \n          <PrivateRoute path={'/manufacturer/create'} exact component={CreateManufacturer} session={this.props.session} />\n          <PrivateRoute path={'/manufacturer/edit/:id'} exact component={EditManufacturer} session={this.props.session}  />\n          <Route  path={'/manufacturer/:id'} exact component={ManufacturerView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    key : process.env.REACT_APP_WORLD_WEATHER_KEY\n}","require('dotenv').config();\nmodule.exports = {\n    api_key : process.env.REACT_APP_FACEBOOK_APP_ID\n}"],"sourceRoot":""}