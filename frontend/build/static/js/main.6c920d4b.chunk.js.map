{"version":3,"sources":["config/api.js","lib/utils/session.js","reducers/session.js","actions/types.js","reducers/index.js","store/index.js","components/layout/MainContainer.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/recipe/RecipeForm.js","components/recipe/Create.js","components/recipe/Edit.js","components/user/Edit.js","config/cognito.js","lib/utils/cognito.js","components/home/Home.js","components/home/Login.js","components/layout/Navbar.js","components/home/Page404.js","components/auth/PrivateRoute.js","components/layout/StarBar.js","components/recipe/RecipeRow.js","components/recipe/RecipeIndex.js","components/recipe/View.js","components/user/UserRow.js","components/user/UserIndex.js","App.js","serviceWorker.ts","index.tsx"],"names":["require","config","module","exports","host","process","port","clearSession","Cookie","get","remove","existingSession","session","JSON","parse","current_time","Date","now","expiration","hasSession","initialState","isLoggedIn","isAdmin","state","action","type","Object","assign","combineReducers","storeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","MainContainer","props","className","children","FormCard","href","icon","faTimesCircle","size","onClick","returnToIndex","UserForm","id","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","user","Username","onChange","e","handleInputChanges","name","placeholder","email","phone_number","onKeyDown","persist","indexOf","keyCode","currentTarget","value","length","Number","isInteger","parseInt","key","currentValue","target","setTimeout","preventDefault","addPhonePrefix","loading","CreateUser","setState","formData","submitSuccess","values","axios","post","apiConfig","headers","then","data","history","push","catch","error","submitFail","errorMessage","response","message","this","Authorization","credentials","accessToken","role","React","connect","faBowlingBall","color","images","map","image","i","removeImage","public_id","src","window","URL","createObjectURL","alt","accept","faImage","RecipeForm","recipe","rating","isPublic","Create","FormData","append","is_public","userName","forEach","file","files","Array","from","uploading","filter","submitted_by","Spinner","Images","Buttons","content","EditRecipe","a","put","setValues","match","params","EditUser","cognitoConfig","apiUrl","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","initSessionFromCallbackURI","callbackHref","dispatch","parseCognitoWebResponse","getCognitoSession","set","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","Promise","resolve","reject","auth","userhandler","onSuccess","result","onFailure","err","Error","getSession","jwtToken","idToken","refreshToken","token","payload","groups","exp","signOut","Home","onSignOut","cognitoUtils","apiStatus","Component","Login","location","hash","search","to","Navbar","data-toggle","data-target","height","width","Page404","PrivateRoute","component","roles","rest","render","pathname","StarBar","stars","faStar","RecipeRow","viewRecipe","style","marginLeft","cursor","faEdit","editRecipe","faTrash","deleteRecipe","RecipeIndex","recipes","bind","sort","b","confirmAlert","title","buttons","label","delete","index","findIndex","splice","recipeId","RecipeView","pic","picture","UserRow","editUser","deleteUser","UserIndex","users","uname","App","path","exact","CreateRecipe","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6c920d4b.chunk.js","sourcesContent":["require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","import Cookie from \"js-cookie\"\n\nexport function setSessionCookie(session)\n{\n  Cookie.set(\"x-token\", session);\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(Cookie.get(\"x-token\"))\n    {\n      const session = JSON.parse(Cookie.get(\"x-token\"));\n      var current_time = Date.now() / 1000;\n      if ( session.expiration > current_time) {\n        return session;\n      }\n      clearSession();\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(Cookie.get(\"x-token\"))\n  {\n    Cookie.remove(\"x-token\")\n  }\nreturn false;\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'","import { combineReducers } from 'redux'\nimport session from './session'\n\nexport default combineReducers({\n  session\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react';\n\nexport const MainContainer = props =>{\n    return (\n        <header className=\"background rgba-black-strong\">\n            <div className=\"main-container\">\n                    { props.children }\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.state.this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div onClick={() => props.removeImage(image.public_id)}  className='delete'>\n        <FontAwesomeIcon icon={faTimesCircle}  />\n      </div>\n      <img className=\"preview\" src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n    <div className=''>\n      <label className=\"fileContainer\">\n        Upload An Image!\n          <input type='file'  id='single' onChange={props.onChange} accept=\".jpg,.jpeg,.gif,.png\" /> \n      </label>\n      <FontAwesomeIcon icon={faImage} color='#3B5998' size='3x' />\n    </div>\n","import React from 'react';\n\nexport const RecipeForm = props =>{\n    return (\n        <form className=\"row\" id=\"create-post-form\" onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rating\"> What would you rate this Recipe on a scale of 1-10?\n            <select value={props.recipe.rating} onChange={(e) => props.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n        <label htmlFor=\"isPublic\"> Should this Recipe be Public to ALL logged-in Users?\n            <select value={props.recipe.isPublic} onChange={(e) => props.handleInputChanges(e)} id=\"isPublic\" name=\"isPublic\" className=\"form-control\">\n            <option value=\"0\">Private</option>\n            <option value=\"1\">Public</option>\n            </select>\n            </label>\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"first_name\"> Name/Title </label>\n            <input type=\"text\" id=\"name\" defaultValue={props.recipe.name} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Recipe Title\" />\n        </div>\n        <div className=\"form-group col-md-12\">\n            <label htmlFor=\"recipe\"> Recipe </label>\n            <textarea id=\"recipe\" defaultValue={props.recipe.recipe} onChange={(e) => props.handleInputChanges(e)} name=\"recipe\" className=\"form-control\" placeholder=\"Enter the Recipe Here!!\" />\n        </div>\n        { props.children && \n            <div className=\"form-group col-md-12\">\n                { props.children }\n            </div>\n        }\n        <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n            {(props.edit) ? (\"Edit Recipe\") : ( \"Add Recipe\") }\n            </button>\n        </div>\n    </form>\n    )\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { RecipeForm } from './RecipeForm';\n\n\nconst TITLE=\"Create Recipe\";\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            recipe: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            \n        } else {\n                this.props.history.push('/');\n        }\n    }\n    \n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = new FormData();\n        formData.append('is_public', this.state.is_public);\n        formData.append('rating' , this.state.rating);\n        formData.append('name' , this.state.name);\n        formData.append( 'recipe', this.state.recipe);\n        formData.append('submitted_by' , this.props.session.user.userName);\n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        if (this.props.session.isLoggedIn && this.props.session.isAdmin) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/recipe`, formData, this.state.this.props.session.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/recipe');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n    removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n      returnToIndex = e =>\n      {\n        this.props.history.push('/recipe');\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                        </div>\n                        )}\n                        {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                        </div>\n                        )}\n                        {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                        </div>\n                        )}               \n                        <RecipeForm recipe={this.state.recipe} handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} loading={loading} >\n                    \n                                {content()}\n                            \n                        </RecipeForm>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport { RecipeForm } from './RecipeForm';\n\nconst TITLE = \"Edit Recipe\";\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditRecipe extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            recipe: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, this.props.session.headers).then(data => {\n                const recipe = data.data[0];\n                this.setState({ recipe});\n            })\n            .catch(error=>this.props.history.push('/recipe'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, this.state.values, this.state.this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/recipe');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n        const recipe = this.state.recipe;\n        recipe[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({recipe});\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/recipe');\n    }\n\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{ TITLE }</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    Recipe details have been edited successfully </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                    { errorMessage }\n                            </div>\n                        )} \n                    </div>\n                    <RecipeForm recipe={this.state.recipe} loading={loading}  handleInputChanges={this.handleInputChanges} processFormSubmission={this.processFormSubmission} edit=\"true\" />\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditRecipe)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.state.this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"openid\",\n    \"email\",\n    \"profile\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession()) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = () => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      // Resolve the promise with the session credentials\n      const session = {\n        credentials: {\n          accessToken: result.accessToken.jwtToken,\n          idToken: result.idToken.jwtToken,\n          refreshToken: result.refreshToken.token\n        },\n        user: {\n          userName: result.idToken.payload['cognito:username'],\n          email: result.idToken.payload.email\n        },\n        groups : result.idToken.payload['cognito:groups'],\n        isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n        expiration : result.accessToken.payload.exp,\n        isLoggedIn : true\n      }\n      resolve(session)\n    })\n  })\n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { apiStatus: 'Not called' }\n  }\n\n  componentDidMount () {\n    //this.props.initSession();\n    if (this.props.session.isLoggedIn) {\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n        <div className=\"intro container-fluid\">\n        Welcome to Bake n' Flake!\n          </div>\n          <img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n                {props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/recipe'}>\n                          Recipes</Link>\n                      }\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.session.user.userName}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (!session.isAdmin){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    let content = [];\n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className=\"star\" icon={faStar} size='1x' key={i+1} />);\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport StarBar from './../layout/StarBar';\n\nclass RecipeRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.recipe.id}>\n                <div className=\"col-6\">\n                <a href=\"#\" onClick={() => this.props.viewRecipe(this.props.recipe.id)}>{this.props.recipe.name}</a>\n                </div>\n                <div className=\"col-3\">\n                {this.props.recipe.submitted_by}\n                </div>\n                <div className=\"col-3 recipe-details\">\n                    <div>{!this.props.recipe.isPublic || this.props.recipe.isPublic === \"0\" ? 'Private' : 'Public'}</div>    \n                    <div><StarBar stars={this.props.recipe.rating} /></div>\n                    <div className=\"edit-delete\"> \n                    { this.props.isAdmin && \n                        <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editRecipe(this.props.recipe.id)} />\n                    }\n                    { this.props.isAdmin && \n                        <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteRecipe(this.props.recipe.id)} />\n                    }\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\nexport default RecipeRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport RecipeRow from './RecipeRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipes: [], headers : {}, isAdmin : false }\n        this.deleteRecipe = this.deleteRecipe.bind(this);\n        this.editRecipe = this.editRecipe.bind(this);\n        this.viewRecipe = this.viewRecipe.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n                this.setState({ recipes: data.data })\n            });\n        }\n    }\n\n    deleteRecipe(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure you want to delete this recipe?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/recipe/${id}`, this.state.this.props.session.headers).then(data => {\n                        const index = this.state.recipes.findIndex(recipe => recipe.id === id);\n                        this.state.recipes.splice(index, 1);\n                        this.props.history.push('/recipe');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editRecipe(recipeId) {\n        this.props.history.push('/recipe/edit/' + recipeId);\n    }\n\n    viewRecipe(recipeId) {\n        this.props.history.push('/recipe/' + recipeId);\n    }\n\n    render() {\n        const recipes = this.state.recipes;\n        return (\n            <MainContainer>\n                <div className=\"row\">\n                    <div className=\"card mx-auto\">\n                        <div className=\"card-title\"><h2>Recipes\n                        { this.state.isAdmin &&  <Link to={'recipe/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Recipe</Link>}\n                        </h2>\n                        </div> \n                        <div className=\"card-text\">\n                            <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-6\">\n                                         Title\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Author\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Info\n                                    </div>\n                                </div>\n                                {recipes && recipes.map(recipe =>\n                                (this.state.isAdmin || recipe.isPublic) &&\n                                    <RecipeRow recipe={recipe} deleteRecipe={this.deleteRecipe} viewRecipe={this.viewRecipe} editRecipe={this.editRecipe} isAdmin={this.state.isAdmin} key={ recipe.id }/>\n                                )\n                                }\n                                {\n                                    (!recipes  || recipes.length === 0) &&  <div className=\"col-12\"><h3>No recipes found at the moment</h3></div>\n                                } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeIndex)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Recipe.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport StarBar from './../layout/StarBar';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipe: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe/` + this.props.match.params.id, this.state.this.props.session.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/recipe') : this.setState({ recipe: data.data[0] });\n            })\n            .catch(error=>this.props.history.push('/recipe'));\n        }\n        if(this.state.recipe === [])\n        {\n            this.props.history.push('/recipe');\n        }\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/recipe');\n    }\n\n    render() {\n        const recipe = this.state.recipe;\n        const pic = (recipe.picture  == null) ? 'no_photo.jpg' : recipe.picture;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"container\">\n\t\t\t\t        <div className=\"wrapper row\">\n                            <div className=\"preview col-md-6\">\n                                <div className=\"preview-pic tab-content\">\n                                    <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + pic } alt=\"recipe\" /></div>\n                                </div>\n                            </div>\n                            <div className=\"details col-md-6\">\n                                <h3 className=\"recipe-title\">{recipe.name}</h3>\n                                <h5 className=\"submitted-by\">By <span>{recipe.submitted_by}</span></h5>\n                                <h5 className=\"review-no\">Rated: {recipe.rating}/10 </h5>\n                                <div className=\"rating\">\n                                    <StarBar stars={recipe.rating} />\n                                </div>\n                                <h5 className=\"review-no\">Recipe:</h5>\n                                <p className=\"recipe-description\">{ recipe.recipe }</p>\n                            </div>\n                        </div>\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeView)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport { MainContainer } from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.state.this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.Username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport CreateUser from './components/user/Create';\nimport CreateRecipe  from './components/recipe/Create';\nimport EditRecipe  from './components/recipe/Edit';\nimport EditUser from './components/user/Edit';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport Navbar from './components/layout/Navbar';\nimport Page404 from './components/home/Page404';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport RecipeIndex from './components/recipe/RecipeIndex';\nimport RecipeView from './components/recipe/View';\nimport UserIndex from './components/user/UserIndex';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session}  />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          <Route path={'/recipe'} exact component={RecipeIndex} />\n          <PrivateRoute  path={'/recipe/edit/:id'} exact component={EditRecipe} session={this.props.session} />\n          <PrivateRoute  path={'/recipe/create'} exact component={ CreateRecipe } session={this.props.session} />\n          <Route  path={'/recipe/:id'} exact component={RecipeView } />\n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();"],"sourceRoot":""}