{"version":3,"sources":["config/api.js","reducers/session.js","actions/types.js","reducers/index.js","store/index.js","components/user/UserIndex.js","components/recipe/RecipeIndex.js","components/recipe/View.js","components/user/Create.js","components/helpers/image/Spinner.js","components/helpers/image/Images.js","components/helpers/image/Buttons.js","components/recipe/Create.js","components/recipe/Edit.js","components/user/Edit.js","config/cognito.js","lib/utils/cognito.js","lib/utils/session.js","components/home/Home.js","components/home/Page404.js","actions/session.js","components/home/Login.js","components/auth/PrivateRoute.js","App.js","serviceWorker.ts","index.tsx"],"names":["require","config","module","exports","host","process","port","initialState","isLoggedIn","isAdmin","session","state","action","type","Object","assign","combineReducers","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","UserIndex","props","users","headers","this","Authorization","credentials","accessToken","setState","axios","get","apiConfig","then","data","id","delete","index","findIndex","user","splice","history","push","className","to","length","scope","map","key","Username","name","email","phone_number","style","marginBottom","onClick","deleteCustomer","Component","connect","RecipeIndex","recipes","recipe","isPublic","submitted_by","rating","deleteRecipe","RecipeView","match","params","catch","error","src","picture","alt","Create","processFormSubmission","e","preventDefault","loading","formData","userName","submitSuccess","values","post","setTimeout","submitFail","errorMessage","response","message","console","log","handleInputChanges","currentTarget","value","role","onSubmit","noValidate","htmlFor","onChange","placeholder","required","React","icon","faBowlingBall","size","color","images","image","i","removeImage","public_id","faTimesCircle","URL","createObjectURL","faImage","FormData","append","is_public","forEach","file","files","Array","from","target","uploading","filter","Spinner","Images","Buttons","content","EditRecipe","a","put","setValues","defaultValue","EditUser","phone","cognitoConfig","apiUrl","region","userPool","clientId","userPoolBaseUri","callbackUri","signoutUri","tokenScopes","apiUri","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","Promise","resolve","reject","getSession","err","result","jwtToken","idToken","refreshToken","token","payload","groups","indexOf","expiration","exp","Error","href","auth","userhandler","onSuccess","onFailure","parseCognitoWebResponse","Cookie","remove","signOut","Home","onSignOut","cognitoUtils","apiStatus","dispatch","Page404","initSession","JSON","parse","current_time","Date","now","hasSession","Login","location","hash","search","initSessionFromCallbackURI","callbackHref","set","PrivateRoute","component","roles","rest","render","pathname","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","exact","EditCustomer","CreateRecipe","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2210e174.chunk.js","sourcesContent":["require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\n\nconst initialState = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'","import { combineReducers } from 'redux'\nimport session from './session'\n\nexport default combineReducers({\n  session\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n    }\n\n    componentDidMount(){\n\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({ headers});\n            \n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, headers).then(data => {\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteCustomer(id ) {\n        axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.state.headers).then(data => {\n            const index = this.state.users.findIndex(user => user.id === id);\n            this.state.users.splice(index, 1);\n            this.props.history.push('/user');\n        })\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n            <div className=\"main-container\">\n                <div className=\"container\">\n                    <div className=\"row mx-auto\">\n                    <div className=\"card um-main-body mx-auto\">\n\n                        <div className=\"card-block\">\n                        <div className=\"card-title\"><strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></div>\n                        <div className=\"card-text\">\n                        {users.length === 0 ?(\n                            <div className=\"text-center\">\n                                <h2>No users found at the moment</h2>\n                            </div>\n                        ) :(\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Username</th>\n                                    <th scope=\"col\">first_name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Phone</th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users && users.map(user =>\n                                    <tr key={user.Username}>\n                                        <td>{user.Username}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.phone_number}</td>\n                                        <td>\n                                            <div className=\"d-flex justify-content-between align-items-center\">\n                                                <div className=\"btn-group\" style={{ marginBottom: \"20px\" }}>\n                                                    <Link to={`user/edit/${user.Username}`} className=\"btn btn-sm btn-outline-secondary\">Edit User</Link>\n                                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => this.deleteCustomer(user.Username)}>Delete User</button>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>)}\n                        </div>\n                        </div>\n                    </div>\n                 </div>\n     \n\n            </div>\n            </div>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport './Recipe.css';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipes: [], headers : {}, isAdmin : false }\n    }\n\n    componentDidMount(){\n\n        if (this.props.session.isLoggedIn) {\n            this.setState({ isAdmin : this.props.session.isAdmin });\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe`, headers).then(data => {\n                this.setState({ recipes: data.data })\n            });\n        }\n    }\n\n    deleteRecipe(id ) {\n        axios.delete(apiConfig.host + apiConfig.port + `/api/recipe/${id}`, this.state.headers).then(data => {\n            const index = this.state.recipes.findIndex(recipe => recipe.id === id);\n            this.state.recipes.splice(index, 1);\n            this.props.history.push('/recipe');\n        })\n    }\n\n    render() {\n        const recipes = this.state.recipes;\n        return (\n           \n            <div className=\"main-container\">\n                <div className=\"container\">\n                \n                    <div className=\"row\">\n                    <div className=\"card um-main-body mx-auto\">\n                        <div className=\"card-block\">\n                        <div className=\"card-title\"><strong>Recipes</strong><Link to={'recipe/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New Recipe</Link></div>\n                        <div className=\"card-text\">\n                {recipes.length === 0 ?(\n                    <div className=\"text-center\">\n                        <h2>No recipe found at the moment</h2>\n                    </div>\n                ) :(\n                        <table className=\"table table-bordered table-striped\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">name</th>\n                                    <th scope=\"col\">preview</th>\n                                    <th scope=\"col\">submitted_by</th>\n                                    <th scope=\"col\">Is Public</th>\n                                    <th scope=\"col\">Rating</th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {recipes && recipes.map(recipe =>\n                                    (this.state.isAdmin || recipe.isPublic) &&\n                                    <tr key={recipe.id}>\n                                        <td>{recipe.name}</td>\n                                        <td>...</td>\n                                        <td>{recipe.submitted_by}</td>\n                                        <td>{recipe.isPublic ? '1' : '0'}</td>\n                                        <td>{recipe.rating}</td>\n                                        <td>\n                                            <div className=\"d-flex justify-content-between align-items-center\">\n                                                <div className=\"btn-group\" style={{ marginBottom: \"20px\" }}>\n                                                    <Link to={`recipe/${recipe.id}`} className=\"btn btn-sm btn-success btn-outline-secondary\">View Recipe </Link>\n                                                    <Link to={`recipe/edit/${recipe.id}`} className=\"btn btn-warning btn-sm btn-outline-secondary\">Edit Recipe </Link>\n                                                    <button type=\"button\" className=\"btn btn-danger btn-sm btn-outline-secondary\" onClick={() => this.deleteRecipe(recipe.id)}>Delete Recipe</button>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table> )}\n                        </div>\n                        </div>\n                    </div>\n                 </div>\n            </div>\n\n            </div>\n          \n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeIndex)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Recipe.css'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass RecipeView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { recipe: [], headers : {} }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get( apiConfig.host + apiConfig.port + `/api/recipe/` + this.props.match.params.id, this.state.headers).then(data => {\n                ((!this.props.session.isAdmin && !data.data[0].isPublic) || data.data.length === 0) ? this.props.history.push('/recipe') : this.setState({ recipe: data.data[0] });\n            })\n            .catch(error=>this.props.history.push('/recipe'));\n        }\n    }\n\n    render() {\n        const recipe = this.state.recipe;\n        return (\n            <div className=\"main-container\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card recipe\">\n\t\t\t                <div className=\"container\">\n\t\t\t\t                <div className=\"wrapper row\">\n                                    <div className=\"preview col-md-6\">\n                                        <div className=\"preview-pic tab-content\">\n                                        <div className=\"tab-pane active\" id=\"pic-1\"><img src={\"https://umanage-mowatr.s3.amazonaws.com/\" + recipe.picture } alt=\"recipe\" /></div>\n                                        </div>\n                                    </div>\n                                    <div className=\"details col-md-6\">\n                                        <h3 className=\"recipe-title\">{recipe.name}</h3>\n                                        <h5 className=\"submitted-by\">By <span>{recipe.submitted_by}</span></h5>\n                                        <h5 className=\"review-no\">Rated: {recipe.rating}/10</h5>\n                                        <div className=\"rating\">\n                                            <div className=\"stars\">\n                                                <span className=\"fa fa-star checked\"></span>\n                                                <span className=\"fa fa-star checked\"></span>\n                                                <span className=\"fa fa-star checked\"></span>\n                                                <span className=\"fa fa-star\"></span>\n                                                <span className=\"fa fa-star\"></span>\n                                            </div>\n                                        </div>\n                                        <h5 className=\"review-no\">Recipe:</h5>\n                                        <p className=\"recipe-description\">{ recipe.recipe }</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>          \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default connect(mapStateToProps)(RecipeView)","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            userName: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            userName : this.state.userName,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api//user`, formData, this.state.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        ])\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                console.log(error);\n            }\n        );\n    }\n}\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n               <div className=\"main-container\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card mx-auto\">\n                        <div className=\"card-text\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 \">\n                    <h2> Create User </h2>\n                    {!submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Fill the form below to create a new post\n                    </div>\n                    )}\n\n                    {submitSuccess && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            The form was successfully submitted!\n                            </div>\n                    )}\n\n                    {submitFail && (\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            { errorMessage }\n                            </div>\n                    )}\n\n                    <form className=\"row\" id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"first_name\"> User Name </label>\n                            <input type=\"text\" id=\"userName\" onChange={(e) => this.handleInputChanges(e)} name=\"userName\" className=\"form-control\" placeholder=\"Enter unique user name\" required />\n                        </div>\n                         <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"first_name\"> Name </label>\n                            <input type=\"text\" id=\"name\" onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter full name\" required />\n                        </div>\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"email\"> Email </label>\n                            <input type=\"email\" id=\"email\" onChange={(e) => this.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter customer's email address\" required />\n                        </div>\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"phone_number\"> Phone Number </label>\n                            <input type=\"text\" id=\"phone_number\" onChange={(e) => this.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"format = +1[phone]\" required  />\n                        </div>\n                        <div className=\"form-group col-md-4 pull-right\">\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                Create User\n                            </button>\n                            {loading &&\n                                <span className=\"fa fa-circle-o-notch fa-spin\" />\n                            }\n                        </div>\n                    </form>\n                </div>\n            </div>\n            </div>\n                    \n                    </div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () => \n  <div className='spinner fadein'>\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n  </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  props.images.map((image, i) =>\n    <div key={i} className='fadein'>\n      <div \n        onClick={() => props.removeImage(image.public_id)} \n        className='delete'\n      >\n        <FontAwesomeIcon icon={faTimesCircle} size='2x' />\n      </div>\n      <img src={window.URL.createObjectURL(image)}  alt='' />\n    </div>\n  )","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props => \n  <div className='buttons fadein'>\n    <div className='button'>\n      <div><input type='file' id='single' onChange={props.onChange} /> </div>\n        <FontAwesomeIcon icon={faImage} color='#3B5998' size='10x' />\n    </div>\n  </div>","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport Spinner from './../helpers/image/Spinner'\nimport Images from './../helpers/image/Images'\nimport Buttons from './../helpers/image/Buttons'\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass Create extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            rating: 5,\n            is_public : 0,\n            name: '',\n            submitted_by: '',\n            recipe: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { \n                Authorization: `Bearer ${this.props.session.credentials.accessToken}`,\n                'content-type': 'multipart/form-data'\n            }};\n            this.setState({headers});\n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n  \n        const formData = new FormData();\n        formData.append('is_public', this.state.is_public);\n        formData.append('rating' , this.state.rating);\n        formData.append('name' , this.state.name);\n        formData.append( 'recipe', this.state.recipe);\n        formData.append('submitted_by' , this.props.session.user.userName);\n  \n        this.state.images.forEach((file, i) => {\n            formData.append('photo', file)\n          })\n\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            console.log(formData);\n            axios.post(apiConfig.host + apiConfig.port + `/api/recipe`, formData, this.state.headers)\n            .then(data => [\n                setTimeout(() => {\n                    this.props.history.push('/recipe');\n                }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                    console.log(error);\n                }\n            );\n        }\n    }\n\n    handleInputChanges = e => {\n        console.log(this.state);\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n        console.log(this.state);\n    }\n\n    onChange = e => {\n        const files = Array.from(e.target.files)\n        this.setState({ uploading: false , images : files});\n    }\n    \n      removeImage = id => {\n        this.setState({\n          images: this.state.images.filter(image => image.public_id !== id)\n        })\n      }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, uploading, images } = this.state;\n        const content = () => {\n            switch(true) {\n              case uploading:\n                return <Spinner />\n              case images.length > 0:\n                return <Images images={images} removeImage={this.removeImage} />\n              default:\n                return <Buttons onChange={this.onChange} />\n            }\n          }\n        return (\n            <div className=\"main-container\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card mx-auto\">\n                            <div className=\"card-text\">\n                               \n                                    <div className=\"col-md-12 \">\n                                        <h2> Create Recipe </h2>\n                                            {!submitSuccess && (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                Fill the form below to create a new post\n                                                </div>\n                                            )}\n                                            {submitSuccess && (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    The form was successfully submitted!\n                                                </div>\n                                            )}\n                                            {submitFail && (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    { errorMessage }\n                                                </div>\n                                            )}\n                                            <form className=\"row\" id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={false} >\n                                                <div className=\"form-group col-md-12\">\n                                                    <label htmlFor=\"rating\"> What would you rate this Recipe on a scale of 1-10?\n                                                    <select value={this.state.rating} onChange={(e) => this.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                                                    <option value=\"1\">1</option>\n                                                    <option value=\"2\">2</option>\n                                                    <option value=\"3\">3</option>\n                                                    <option value=\"4\">4</option>\n                                                    <option value=\"5\">5</option>\n                                                    <option value=\"6\">6</option>\n                                                    <option value=\"7\">7</option>\n                                                    <option value=\"8\">8</option>\n                                                    <option value=\"9\">9</option>\n                                                    <option value=\"10\">10</option>\n                                                    </select>\n                                                    </label>\n                                                </div>\n                                                <div className=\"form-group col-md-12\">\n                                                <label htmlFor=\"is_public\"> Should this Recipe be Public to ALL logged-in Users?\n                                                    <select value={this.state.is_public} onChange={(e) => this.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n                                                    <option value=\"0\">Private</option>\n                                                    <option value=\"1\">Public</option>\n                                                    </select>\n                                                    </label>\n                                                </div>\n                                                <div className=\"form-group col-md-12\">\n                                                    <label htmlFor=\"first_name\"> Name/Title </label>\n                                                    <input type=\"text\" id=\"name\" onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Recipe Title\" required />\n                                                </div>\n                                                <div className=\"form-group col-md-12\">\n                                                    <label htmlFor=\"recipe\"> Recipe </label>\n                                                    <textarea value={this.state.recipe} onChange={(e) => this.handleInputChanges(e)} name=\"recipe\" className=\"form-control\" placeholder=\"Enter the Recipe Here!!\"  required />\n                                                </div>\n                                                <div>\n                                                    <div className='buttons form-group col-md-12'>\n                                                    {content()}\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group col-md-4 pull-right\">\n                                                    <button className=\"btn btn-success\" type=\"submit\">\n                                                        Create Recipe\n                                                    </button>\n                                                    {loading &&\n                                                        <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                                    }\n                                                </div>\n                                            </form>\n                                    </div>\n                                \n                                \n                            </div>\n                         </div>\n                    \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditRecipe extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            recipe: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, headers).then(data => {\n                const recipe = data.data[0];\n                this.setState({ recipe});\n            })\n            .catch(error=>console.log(error));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n       \n        axios.put(apiConfig.host + apiConfig.port + `/api/recipe/${this.state.id}`, this.state.values, this.state.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/api/recipe');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                console.log(error);\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <div className=\"main-container\">\n                {this.state.recipe &&\n                    <div className=\"row\">\n                    <div className=\"card mx-auto\">\n                        <div className=\"card-text\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 \">\n                                    <h2> Edit Recipe </h2>\n      \n                                {submitSuccess && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Recipe details have been edited successfully </div>\n                                )}\n                                {submitFail && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        { errorMessage }\n                                    </div>\n                                    )}\n                            <form className=\"row\" id=\"create-post-form\" onSubmit={this.processFormSubmission} noValidate={true}>\n                                <div className=\"form-group col-md-12\">\n                                    <label htmlFor=\"rating\"> What would you rate this Recipe on a scale of 1-10?\n                                    <select defaultValue={this.state.recipe.rating} onChange={(e) => this.handleInputChanges(e)} id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                    <option value=\"9\">9</option>\n                                    <option value=\"10\">10</option>\n                                    </select>\n                                    </label>\n                                </div>\n                                <div className=\"form-group col-md-12\">\n                                <label htmlFor=\"is_public\"> Should this Recipe be Public to ALL logged-in Users?\n                                    <select defaultValue={this.state.recipe.is_public} onChange={(e) => this.handleInputChanges(e)} id=\"is_public\" name=\"is_public\" className=\"form-control\">\n                                    <option value=\"0\">Private</option>\n                                    <option value=\"1\">Public</option>\n                                    </select>\n                                    </label>\n                                </div>\n                                <div className=\"form-group col-md-12\">\n                                    <label htmlFor=\"first_name\"> Name/Title </label>\n                                    <input type=\"text\" id=\"name\" defaultValue={this.state.recipe.name} onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Recipe Title\" />\n                                </div>\n                                <div className=\"form-group col-md-12\">\n                                    <label htmlFor=\"recipe\"> Recipe </label>\n                                    <textarea id=\"recipe\" defaultValue={this.state.recipe.recipe} onChange={(e) => this.handleInputChanges(e)} name=\"recipe\" className=\"form-control\" placeholder=\"Enter the Recipe Here!!\" />\n                                </div>\n                                <div className=\"form-group col-md-4 pull-right\">\n                                    <button className=\"btn btn-success\" type=\"submit\">\n                                        Update Recipe\n                                    </button>\n                                    {loading &&\n                                        <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                    }\n                                </div>\n                            </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditRecipe)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            const headers = { headers: { Authorization: `Bearer ${this.props.session.credentials.accessToken}`}};\n            this.setState({headers});\n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>console.log(error));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.state.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n                console.log(error);\n            }\n        );\n    }\n\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage  } = this.state;\n        return (\n            <div className=\"main-container\">\n            {this.state.user &&\n                <div className=\"row\">\n                <div className=\"card mx-auto\">\n                    <div className=\"card-text\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 \">\n                                <h2> Edit user </h2>\n\n                                {submitSuccess && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        user's details has been edited successfully </div>\n                                )}\n\n                                {submitFail && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        { errorMessage }\n                                    </div>\n                                    )}\n\n                                <form className=\"row\" id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                                <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"Username\"> User Name </label>\n                                        <input type=\"text\" id=\"Username\" defaultValue={this.state.user.Username} onChange={(e) => this.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n                                    </div>\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"name\"> Name </label>\n                                        <input type=\"text\" id=\"name\" defaultValue={this.state.user.name} onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n                                    </div>\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"email\"> Email </label>\n                                        <input type=\"email\" id=\"email\" defaultValue={this.state.user.email} onChange={(e) => this.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n                                    </div>\n\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"phone\"> Phone </label>\n                                        <input type=\"text\" id=\"phone_number\" defaultValue={this.state.user.phone} onChange={(e) => this.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"Enter user's phone number\" />\n                                    </div>\n\n                                    <div className=\"form-group col-md-4 pull-right\">\n                                        <button className=\"btn btn-success\" type=\"submit\">\n                                            Edit user </button>\n                                        {loading &&\n                                            <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                        }\n                                    </div>\n                                </form>\n                                </div>\n                            </div>\n                       \n\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"openid\",\n    \"email\",\n    \"profile\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession } from './session';\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  console.log('href', href);\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        console.log('auth', auth);\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = () => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n\n      // Resolve the promise with the session credentials\n      //console.log('Successfully got session: ' + JSON.stringify(result))\n      const session = {\n        credentials: {\n          accessToken: result.accessToken.jwtToken,\n          idToken: result.idToken.jwtToken,\n          refreshToken: result.refreshToken.token\n        },\n        user: {\n          userName: result.idToken.payload['cognito:username'],\n          email: result.idToken.payload.email\n        },\n        groups : result.idToken.payload['cognito:groups'],\n        isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n        expiration : result.accessToken.payload.exp\n      }\n      resolve(session)\n    })\n  })\n}\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession\n}","import Cookie from \"js-cookie\"\n\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(Cookie.get(\"x-token\"))\n    {\n      const session = JSON.parse(Cookie.get(\"x-token\"));\n      var current_time = Date.now() / 1000;\n      if ( session.expiration > current_time) {\n        return session;\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(Cookie.get(\"x-token\"))\n  {\n    Cookie.remove(\"x-token\")\n  }\nreturn false;\n}","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { apiStatus: 'Not called' }\n  }\n\n  componentDidMount () {\n    //this.props.initSession();\n    if (this.props.session.isLoggedIn) {\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header rgba-black-strong\">\n        <div className=\"intro container-fluid\">\n        Welcome to Bake n' Flake!\n          </div>\n          <img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import { CLEAR_SESSION, SET_SESSION } from './types'\nimport cognitoUtils from '../lib/utils/cognito'\nimport Cookie from \"js-cookie\"\nimport { hasSession } from '../lib/utils/session';\n\n\nexport const clearSession = () => ({\n  type: CLEAR_SESSION\n})\n\nexport function initSession()\n{\n  return function (dispatch) {\n    let session = hasSession();\n    if(session)\n    {\n      cognitoUtils.getCognitoSession();\n      dispatch({ type: SET_SESSION, session })\n    }\n  }\n}\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return cognitoUtils.parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => cognitoUtils.getCognitoSession()) // get a new session\n      .then((session) => {\n        Cookie.set(\"x-token\", session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nexport const setSession = session => ({\n  type: SET_SESSION,\n  session\n})","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../actions/session';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (!session.isAdmin){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)","import * as React from 'react';\nimport './App.css';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport UserIndex from './components/user/UserIndex';\nimport RecipeIndex from './components/recipe/RecipeIndex';\nimport RecipeView from './components/recipe/View';\nimport Create from './components/user/Create';\nimport CreateRecipe  from './components/recipe/Create';\nimport EditRecipe  from './components/recipe/Edit';\nimport EditCustomer from './components/user/Edit';\nimport Home from './components/home/Home';\nimport Page404 from './components/home/Page404';\nimport Login from './components/home/Login';\nimport { connect } from 'react-redux';\nimport { initSession } from './actions/session';\nimport { PrivateRoute } from './components/auth/PrivateRoute';\nimport cognitoUtils from './lib/utils/cognito'\nimport 'react-dropdown/style.css';\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n  \n  function mapDispatchToProps (dispatch) {\n    return {\n      initSession: () => dispatch(initSession())\n    }\n  }\n\nclass App extends React.Component{\n\n  componentDidMount () {\n    this.props.initSession();\n    console.log('app.props', this.props);\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\n  render() {\n    const options = [\n      'one', 'two', 'three'\n    ];\n    const defaultOption = options[0];\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_75_75.png\" alt=\"bake n flake bakery\"/></a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n              aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n              <ul className=\"navbar-nav mr-auto\">\n              {this.props.session.isLoggedIn &&\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={'/user'}>\n                  Users</Link>\n                </li>\n              }\n               {(this.props.session.isLoggedIn && this.props.session.isAdmin) &&\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={'/recipe'}>\n                  Recipes</Link>\n                </li>\n              }\n              </ul>\n              <div id=\"nav_user\" className=\"inline nav-link\">\n                  {this.props.session.isLoggedIn ? ( <span>Hello {this.props.session.user.userName} </span>) : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n             </div>\n             {this.props.session.isLoggedIn && \n             <div className=\"inline nav-link\">\n                   <a className=\"Home-link\" href=\"#\" onClick={this.onSignOut}>Sign out</a> \n             </div>\n             }\n            </div>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/logout'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={Create} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditCustomer} session={this.props.session}  />\n          <PrivateRoute path={'/recipe'} exact component={RecipeIndex}  session={this.props.session} />\n          <PrivateRoute  path={'/recipe/edit/:id'} exact component={EditRecipe} session={this.props.session} />\n          <PrivateRoute  path={'/recipe/create'} exact component={ CreateRecipe } session={this.props.session} />\n          <PrivateRoute  path={'/recipe/:id'} exact component={RecipeView } session={this.props.session} />\n\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();"],"sourceRoot":""}