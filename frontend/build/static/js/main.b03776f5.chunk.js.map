{"version":3,"sources":["config/elastic.js","config/cognito.js","requests/BaseRequest.js","requests/UserRequests.js","actions/user.js","actions/types.js","lib/utils/cognito.js","lib/utils/session.js","reducers/session.js","reducers/user_board.js","reducers/user_boards.js","reducers/user_session.js","reducers/user_sessions.js","reducers/user.js","reducers/api.js","reducers/boards.js","config/s3.js","reducers/session_images.js","reducers/user_board_images.js","reducers/shapers.js","reducers/stormglass.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","components/layout/Navbar.js","components/auth/PrivateRoute.js","components/home/Page404.js","components/home/Home.js","components/home/Login.js","components/layout/MainContainer.js","components/user/UserRow.js","components/user/UserIndex.js","components/layout/FormCard.js","components/user/UserForm.js","components/user/Create.js","components/user/Edit.js","components/layout/StarBar.js","components/session/SessionCard.js","components/board/BoardCard.js","requests/UserBoardRequests.js","requests/SessionRequests.js","actions/user_session.js","actions/user_board.js","components/user/ProfileCard.js","lib/utils/geolocator.js","lib/utils/surfline_alg_geo.js","lib/utils/cache.js","components/reports/surfline/NearestSpots.js","components/reports/stormglass/Report.js","actions/stormglass.js","components/user/Dashboard.js","components/form/Location.js","components/session/forms/validation-rules.js","components/session/forms/validation-messages.js","components/session/forms/SessionForm.js","components/session/Create.js","components/layout/Modal.js","components/session/SessionIndex.js","components/form/TypeAheadInput.js","components/board/forms/validation-rules.js","components/board/forms/validation-messages.js","requests/ManufacturerRequests.js","actions/shaper.js","requests/BoardRequests.js","actions/board.js","components/board/forms/UserBoardForm.js","components/board/CreateUserBoard.js","components/board/forms/BoardPicker.js","components/session/View.js","components/board/BoardIndex.js","components/board/data/board_sizes.js","components/board/View.js","App.js","serviceWorker.ts","index.tsx","config/api.js","config/fb.js"],"names":["require","config","module","exports","host","process","REACT_APP_ELASTIC_HOST","credentials","REACT_APP_ELASTIC_CREDS","cognitoConfig","apiUrl","REACT_APP_API_HOST","region","REACT_APP_AWS_DEFAULT_REGION","userPool","REACT_APP_AWS_COGNITO_USER_POOL","clientId","REACT_APP_AWS_COGNITO_CLIENT_ID","userPoolBaseUri","REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI","callbackUri","REACT_APP_AWS_COGNITO_CALLBACK_URI","signoutUri","REACT_APP_AWS_COGNITO_SIGNOUT_URI","tokenScopes","apiUri","querystring","BaseRequest","session","REQUEST_TYPE","getHost","apiConfig","port","getEndpoint","endpoint","get","wheres","withs","limit","page","label","orderBy","onSuccess","onFailure","e","apiAction","url","getWhereString","getWithString","getlabel","getOne","id","create","data","hdrs","headers","method","delete","update","withString","forEach","element","slice","length","stringify","error","console","log","type","accessToken","jwt","headersOverride","payload","this","createFormRequest","formData","FormData","Object","entries","key","value","append","UserRequests","updateProfileImage","args","UserLoaded","loadUser","dispatch","getState","params","axios","initSessionFromCallbackURI","callbackHref","parseCognitoWebResponse","then","getCognitoSession","setSessionCookie","AWSConfig","createCognitoAuth","appWebDomain","replace","CognitoAuth","UserPoolId","ClientId","AppWebDomain","TokenScopesArray","RedirectUriSignIn","RedirectUriSignOut","createCognitoUser","createCognitoUserPool","getCurrentUser","CognitoUserPool","href","Promise","resolve","reject","auth","userhandler","result","err","Error","getSession","idToken","email","given_name","family_name","formatSessionObject","user","userName","jwtToken","groups","isAdmin","Array","indexOf","expiration","exp","isLoggedIn","refresh","store","clearSession","signOut","localStorage","setItem","JSON","hasSession","getItem","parse","expTime","moment","unix","valueOf","current_time","updateTime","subtract","format","catch","removeItem","existingSession","initialState","state","action","assign","user_board","selected","loaded","created","user_boards","concat","filteredBoards","filter","board","parseInt","user_session","user_sessions","filteredSessions","item","newState","profile_img","api","boards","s3Conf","REACT_APP_AWS_S3_ROOT","original","thumbnail","session_images","prepImages","setImages","img","images","formattedImages","push","name","shapers","stormglass","combineReducers","user_board_images","apiMiddleware","next","dataOrParams","includes","defaults","baseURL","common","apiStart","request","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","storeEnhancers","REACT_APP_ENV","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","onSignOut","preventDefault","cognitoUtils","Navbar","props","className","data-toggle","data-target","src","alt","height","width","to","username","onClick","PrivateRoute","Component","component","roles","rest","render","from","Page404","connect","Home","history","Login","hash","search","MainContainer","children","React","UserRow","Username","phone_number","style","marginLeft","cursor","icon","faEdit","editUser","color","faTrash","deleteUser","UserIndex","users","bind","sort","a","b","setState","confirmAlert","title","message","buttons","index","findIndex","splice","uname","map","FormCard","faTimesCircle","size","returnToIndex","UserForm","onSubmit","processFormSubmission","noValidate","htmlFor","disabled","edit","defaultValue","onChange","handleInputChanges","placeholder","onKeyDown","persist","keyCode","currentTarget","Number","isInteger","currentValue","target","setTimeout","addPhonePrefix","loading","CreateUser","submitSuccess","values","post","submitFail","errorMessage","role","EditUser","put","setValues","match","StarBar","content","starClassname","static","disabledClassname","rating","stars","i","faStar","withRouter","SessionImages","textAlign","marginTop","editSession","deleteSession","createdAt","calendar","UserBoard","Location","UserBoardImages","editBoard","deleteBoard","Board","model","UserBoardRequests","getImages","createImages","deleteImage","SessionRequests","UserSessionsLoaded","loadUserSessions","UserBoardsLoaded","UserBoardsCleared","loadUserBoard","UserBoardLoaded","loadUserBoards","ProfileCard","board_id","manufacturer_id","uploaderInstance","onDrop","pictureFiles","pictureDataURLs","user_id","file","updateImage","image","rel","withIcon","buttonText","imgExtension","maxFileSize","withPreview","singleImage","first_name","last_name","aria-valuenow","aria-valuemin","aria-valuemax","UserImageUpdated","updateUserImage","geolocator","language","google","version","locator","defaultOptions","enableHighAccuracy","timeout","maximumWait","maximumAge","desiredAccuracy","fallbackToIP","addressLookup","algoliasearch","REACT_APP_ALGOLIA_APP_ID","REACT_APP_ALGOLIA_CLIENT_SECRET","responsesCache","createInMemoryCache","requestsCache","serializable","initIndex","getSpots","lat","lon","aroundLatLng","aroundRadius","ttl","expiry","Date","getTime","itemStr","NearestSpots","spots","cachedHits","cache","locate","coords","latitude","longitude","hits","el","data-tip","data-event","data-for","getContent","datatip","isCapture","Report","wavePeriod","currentTime","sgLoaded","stormglassLoaded","fetch","_geoloc","json","jsonData","hours","getHours","waterTemperature","sg","toFixed","swellHeight","noaa","swellPeriod","waveHeight","pressure","currentSpeed","StormGlassLoaded","sessions","UserDashboard","loadBoards","loadSessions","UserSessionRequests","reduce","mappedArray","locations","UserLocations","location_id","is_editing","handleInputChange","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","place_id","handleNoResult","handleStatusUpdate","onBlur","locRender","prediction","types","description","fieldProps","fieldState","hint","touched","pristine","required","validating","validatedSync","validatedAsync","valid","validSync","validAsync","invalid","errors","inputClassNames","Boolean","join","inputProps","autoComplete","wrapperClass","display","libraries","googleMaps","autocompletionRequest","input","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","createField","fieldPresets","matches","generic","missing","rule","SessionForm","propertyName","newValue","defaultName","show","pictures","clearBoards","serialized","fields","form","rules","messages","initialValue","float","Create","createSession","onSubmissionComplete","prevProps","prevState","snapshot","noUpdate","clearCreatedSession","close","UserSessionCreated","createUserSession","Modal","handleClose","showHideClassName","relations","SessionIndex","showModal","hideModal","onSortUpdated","prevQuery","nextQuery","sortString","order","selectedSortOrder","elasticResultHandler","ids","in","setScope","scopes","nextValue","is_public","esFilters","showAll","viewSession","clearSessions","sessionId","app","elasticConfig","checked","componentId","dataField","innerClass","react","and","defaultQuery","query","bool","should","onData","onQueryChange","renderResultStats","stats","numberOfResults","pagination","infiniteScroll","sortOptions","sortBy","paginationAt","UserSessionDeleted","deleteUserSession","TypeAheadInput","event","vid","entity","find","x","keyName","setValue","getSuggestionValue","suggestion","renderSuggestion","onSuggestionsFetchRequested","reason","suggestions","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","shouldRenderSuggestions","onFocus","maxHeight","overflow","ManufacturerRequests","loadShapers","ShapersLoaded","BoardRequests","BoardsLoaded","UserBoardForm","getBoardSuggestions","inputValue","trim","toLowerCase","inputLength","getShaperSuggestions","CreateUserBoard","createUserBoard","UserBoardCreated","clearCreatedBoard","BoardPicker","select","selectOptions","defaultImage","selectedBoard","current_session","loadBoard","board_created","isOwner","boardImage","InputType","Select","options","valueKey","labelKey","isDisabled","submitUpdate","SessionView","setSelectedBoard","boardOptions","obj","goBack","editUserSession","onLocationChange","onPrivacyChange","onBoardChange","idInt","onImageLoad","selectedImage","onImageSelected","imageIndex","deleteSessionImage","newIndex","onDateChange","date","formattedDate","session_date","loadNoaa","inspect","listLatLon","begin","end","add","qpf","pop12","noaaForecaster","setToken","getForecast","results","colors","depth","Infinity","UserSessionRequest","loadSession","loadSessionImages","session_id","addImages","appId","fbConfig","api_key","change","propName","editProps","withLabel","buttonClassName","items","showBullets","showIndex","startIndex","onSlide","thumbnailPosition","tabs","onLocationBlur","disable","showTimeSelect","dateFormat","placeholderText","notes","validate","_","isString","UserSessionLoaded","loadUserSession","UserSessionUpdated","updateUserSession","UserSessionImagesLoaded","loadUserSessionImages","UserSessionImagesCreated","addUserSessionImages","UserSessionImageDeleted","deleteUserSessionImage","BoardIndex","boardCreated","viewBoard","userSession","filters","boardId","button","onError","UserBoardDeleted","deleteUserBoard","sizes","selected_board","BoardView","prepBoardSizeOptions","filteredSizes","onTypeAheadSelected","shaperId","editUserBoard","deleteBoardImage","modelPlaceholder","boardSizeOptions","loadBoardImages","user_board_id","s","showNav","Manufacturer","Sessions","UserBoardUpdated","updateUserBoard","UserBoardImagesLoaded","loadUserBoardImages","UserBoardImagesCreated","addUserBoardImages","UserBoardImageDeleted","deleteUserBoardImage","App","path","exact","CreateSession","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","REACT_APP_API_BASE","REACT_APP_API_PORT","REACT_APP_FACEBOOK_APP_ID"],"mappings":"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","file":"static/js/main.b03776f5.chunk.js","sourcesContent":["require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_ELASTIC_HOST, \n    credentials : process.env.REACT_APP_ELASTIC_CREDS\n}","\nrequire('dotenv').config()\nexport const cognitoConfig = { \n    apiUrl : process.env.REACT_APP_API_HOST,\n    region : process.env.REACT_APP_AWS_DEFAULT_REGION,\n    userPool: process.env.REACT_APP_AWS_COGNITO_USER_POOL,\n    clientId : process.env.REACT_APP_AWS_COGNITO_CLIENT_ID,\n    userPoolBaseUri : process.env.REACT_APP_AWS_COGNITO_USER_POOL_BASE_URI,\n    callbackUri: process.env.REACT_APP_AWS_COGNITO_CALLBACK_URI,\n    signoutUri : process.env.REACT_APP_AWS_COGNITO_SIGNOUT_URI,\n    tokenScopes: [\n    \"email\"\n    ],\n    apiUri: process.env.REACT_APP_API_HOST\n};","import apiConfig from './../config/api';\nconst querystring = require('querystring');\n\nclass BaseRequest {\n\n    REQUEST_TYPE = 'BASE';\n\n    constructor( session ){\n        this.session = session;\n    }\n    /*\n    create a label to be applied to the redux action for debugging\n    */\n    getlabel(label, method)\n    {\n        if(label === '') return method + '_' + this.REQUEST_TYPE;\n    }\n\n    getHost = () =>{\n        return apiConfig.host + apiConfig.port;\n    }\n\n    getEndpoint = () => {\n        return this.endpoint;\n    }\n\n    /*\n    Get an array of objects based on given variables\n    */\n    get = ({ wheres = [], withs = [], limit = 20, page = 0, label = '', orderBy='', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `?` + this.getWhereString(wheres) + `&` + this.getWithString(withs) + `&limit=` + limit + `&order_by=` + orderBy + `&page=` + page,\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : this.getlabel(label, 'GET')\n        });\n    }\n    /*\n    get a single object based on id \n    */\n    getOne = ({ id = null, withs = [], label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n        return this.apiAction({\n            url :this.getEndpoint() + `/` + id+ `?` + this.getWithString(withs),\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label\n        });\n    }\n    /*\n    Create a new object\n    */\n    create = ({ data = {}, hdrs = {}, label = '' , onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) } ) => {\n        const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            data : data,\n            url :this.getEndpoint(),\n            method : \"POST\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            //headersOverride : headers\n        });\n    }\n    /*\n    delete existing object\n    */\n    delete  = ({ id = null, label = '', onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) =>\n    {\n        //const headers = {...this.session.headers, ...hdrs};\n        return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"DELETE\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n        });\n    }\n    /*\n    Update existing object\n    */\n    update = ( { id = null, label = '', data = {}, onSuccess = ()=>{}, onFailure = (e)=>this.onFailure(e) }) => {\n         return this.apiAction({\n            url : this.getEndpoint() + `/` + id,\n            method : \"PUT\",\n            onSuccess : onSuccess,\n            onFailure : onFailure,\n            label : label,\n            data : data\n        });\n    }\n    /*\n    create string to ask for relations\n    */\n    getWithString = ( withs ) => {\n        let withString = '';\n        withs.forEach(element => {\n            withString += `with[]=${element}&`;\n        });\n        return withString.slice(0, withString.length - 1);\n    }\n    /*\n    create string with standard `where` key values\n    */\n    getWhereString = ( wheres ) =>\n    {\n        return querystring.stringify(wheres);\n    }\n    /*\n    on fail lets send a redux action telling the app of error\n    */\n    onFailure = (error) =>{\n        console.log('error', error);\n        return { type : 'API_FAILED'}\n    }\n    /*\n    helper method to format form request\n    */\n    static createFormRequest = (data = {} ) =>\n    {\n        const formData = new FormData();\n        for (let [key, value] of Object.entries(data)) {\n            formData.append(key, value);\n        }\n        return formData;\n    }\n    /*\n    wrapper for all requests\n    this will send an api action that will be sniffed in the middleware and handled by\n    ./frontend/src/middleware/api.js\n    */\n    apiAction = ({\n        url = \"\",\n        method = \"GET\",\n        data = null,\n        accessToken = this.session.jwt,\n        onSuccess = () => {},\n        onFailure = () => {},\n        label = \"\",\n        headersOverride = null\n      }) => {\n        return {\n          type: \"API\",\n          payload: {\n            url,\n            method,\n            data,\n            accessToken,\n            onSuccess,\n            onFailure,\n            label,\n            headersOverride\n          }\n        };\n      }\n}\n\nexport default BaseRequest;","import BaseRequest from './BaseRequest';\n\nclass UserRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user';\n    }\n\n    updateProfileImage = (args) => {\n        this.endpoint = '/api/user/images';\n        return this.create(args);\n    }\n}\nexport default UserRequests;","import { USER_LOADED, USER_LOGGED_IN, USER_IMAGE_UPDATED} from \"./types\";\nimport UserRequests from './../requests/UserRequests';\n\n\nexport const UserLoaded = data => ({\n    type: USER_LOADED,\n    payload: data\n  });\n\n  export const UserLoggedIn = data => ({\n    type: USER_LOGGED_IN,\n    payload: data\n  });\n\n  export const UserImageUpdated = data => ({\n    type: USER_IMAGE_UPDATED,\n    payload: data\n  });\n\n\n  \n\n  export const logInUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).get(params)\n      )\n    }\n  }\n\n\n  export const loadUser = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserLoaded(data)} }}\n      dispatch(\n        new UserRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const updateUserImage = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserImageUpdated(data)} }}\n      dispatch(\n        new UserRequests(session).updateProfileImage(params)\n      )\n    }\n  }","export const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const SET_SESSION = 'SET_SESSION'\nexport const SET_USER = \"SET_USER\";\n\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\";\nexport const ACCESS_DENIED = \"ACCESS_DENIED\";\nexport const API_ERROR = \"API_ERROR\";\n\n\n\nexport const SET_USER_BOARD = \"SET_USER_BOARD\";\nexport const SET_USER_BOARDS = \"SET_USER_BOARDS\";\nexport const USER_BOARD_CREATED=\"USER_BOARD_CREATED\";\nexport const USER_BOARD_UPDATED=\"USER_BOARD_UPDATED\";\nexport const USER_BOARD_DELETED=\"USER_BOARD_DELETED\";\nexport const USER_BOARD_IMAGES_LOADED=\"USER_BOARD_IMAGES_LOADED\";\nexport const USER_BOARD_IMAGES_CREATED=\"USER_BOARD_IMAGES_CREATED\";\nexport const USER_BOARD_IMAGE_DELETED = \"USER_BOARD_IMAGE_DELETED\";\nexport const USER_BOARDS_CLEARED = \"USER_BOARDS_CLEARED\"\n\n\n\nexport const SET_USER_SESSION='SET_USER_SESSION';\nexport const USER_SESSION_CREATED=\"USER_SESSION_CREATED\";\nexport const USER_SESSION_CLEARED = 'USER_SESSION_CLEARED';\nexport const SET_USER_SESSIONS = \"SET_USER_SESSIONS\";\nexport const SESSION_CREATED = \"SESSION_CREATED\";\nexport const DELETE_USER_SESSION = \"DELETE_USER_SESSION\";\nexport const USER_SESSION_UPDATED=\"USER_SESSION_UPDATED\"\nexport const USER_SESSION_DELETED=\"USER_SESSION_DELETED\"\nexport const USER_SESSION_LOADED=\"USER_SESSION_LOADED\";\nexport const USER_SESSION_IMAGES_LOADED=\"USER_SESSION_IMAGES_LOADED\";\nexport const USER_SESSION_IMAGES_CREATED=\"USER_SESSION_IMAGES_CREATED\";\nexport const USER_SESSION_IMAGE_DELETED = \"USER_SESSION_IMAGE_DELETED\";\nexport const USER_SESSION_CREATED_CLEARED=\"USER_SESSION_CREATED_CLEARED\";\nexport const USER_SESSIONS_CLEARED=\"USER_SESSIONS_CLEARED\";\n\nexport const SHAPERS_LOADED=\"SHAPERS_LOADED\";\nexport const BOARDS_LOADED=\"BOARDS_LOADED\";\n\n\nexport const USER_BOARD_CREATED_CLEARED=\"USER_BOARD_CREATED_CLEARED\";\n\nexport const USER_LOGGED_IN=\"USER_LOGGED_IN\";\n\nexport const USER_LOADED=\"USER_LOADED\";\n\nexport const USER_IMAGE_UPDATED=\"USER_IMAGE_UPDATED\";\n\nexport const STORMGLASS_LOADED=\"STORMGLASS_LOADED\";\n\n\n","import { CognitoAuth } from 'amazon-cognito-auth-js/dist/amazon-cognito-auth'\nimport { CognitoUserPool } from 'amazon-cognito-identity-js'\nimport { config as AWSConfig } from 'aws-sdk'\nimport { cognitoConfig } from '../../config/cognito.js'\nimport { clearSession, setSessionCookie } from './session';\nimport { SET_SESSION } from './../../actions/types';\nimport apiConfig from '../../config/api.js';\nimport {logInUser, loadUser} from './../../actions/user';\nimport store from './../../store/index'\nconst axios = require('axios');\n\n\n// Initialise the Cognito sesson from a callback href\nexport function initSessionFromCallbackURI (callbackHref) {\n  return function (dispatch) {\n    return parseCognitoWebResponse(callbackHref) // parse the callback URL\n      .then(() => getCognitoSession(dispatch)) // get a new session\n      .then((session) => {\n        setSessionCookie(session);\n        dispatch({ type: SET_SESSION, session })\n      })\n  }\n}\n\nAWSConfig.region = cognitoConfig.region\n\n// Creates a CognitoAuth instance\nconst createCognitoAuth = () => {\n  const appWebDomain = cognitoConfig.userPoolBaseUri.replace('https://', '').replace('http://', '')\n  const auth = new CognitoAuth({\n    UserPoolId: cognitoConfig.userPool,\n    ClientId: cognitoConfig.clientId,\n    AppWebDomain: appWebDomain,\n    TokenScopesArray: cognitoConfig.tokenScopes,\n    RedirectUriSignIn: cognitoConfig.callbackUri,\n    RedirectUriSignOut: cognitoConfig.signoutUri\n  })\n  return auth\n}\n\n// Creates a CognitoUser instance\nconst createCognitoUser = () => {\n  const pool = createCognitoUserPool()\n  return pool.getCurrentUser()\n}\n\n// Creates a CognitoUserPool instance\nconst createCognitoUserPool = () => new CognitoUserPool({\n  UserPoolId: cognitoConfig.userPool,\n  ClientId: cognitoConfig.clientId\n})\n\n// Get the URI of the hosted sign in screen\nconst getCognitoSignInUri = () => {\n  const signinUri = `${cognitoConfig.userPoolBaseUri}/login?response_type=code&client_id=${cognitoConfig.clientId}&redirect_uri=${cognitoConfig.callbackUri}`\n  return signinUri\n}\n\n// Parse the response from a Cognito callback URI (assumed a token or code is in the supplied href). Returns a promise.\nconst parseCognitoWebResponse = (href) => {\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth()\n\n    // userHandler will trigger the promise\n    auth.userhandler = {\n      onSuccess: function (result) {\n        resolve(result)\n      },\n      onFailure: function (err) {\n        reject(new Error('Failure parsing Cognito web response: ' + err))\n      }\n    }\n    auth.parseCognitoWebResponse(href)\n  })\n}\n\n// Gets a new Cognito session. Returns a promise.\nconst getCognitoSession = (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = createCognitoUser()\n    cognitoUser.getSession((err, result) => {\n      if (err || !result) {\n        reject(new Error('Failure getting Cognito session: ' + err))\n        return\n      }\n      axios.get( apiConfig.host + apiConfig.port + `/api/user/firstOrNew?username=` + result.idToken.payload['cognito:username'] \n      + '&email=' + result.idToken.payload.email + '&first_name=' + result.idToken.payload.given_name + '&last_name=' + result.idToken.payload.family_name\n        ).then(data => {\n        const session = formatSessionObject(data.data.id, result);\n        session.user = {...session.user, ...data.data[0]};\n        dispatch(loadUser(session, {wheres : {email : result.idToken.payload.email}}));\n        resolve(session);\n      });     \n    })\n  })\n}\n\n\nconst formatSessionObject = (id, result) =>\n{\n  const session = {\n    user: {\n      id : id,\n      userName: result.idToken.payload['cognito:username'],\n      email: result.idToken.payload.email\n    },\n    //headers: `Authorization: Bearer ${result.accessToken.jwtToken}`,\n    jwt : result.accessToken.jwtToken,\n    groups : result.idToken.payload['cognito:groups'],\n    isAdmin : result.idToken.payload['cognito:groups'] instanceof Array && result.idToken.payload['cognito:groups'].indexOf('Admin') !== -1,\n    expiration : result.accessToken.payload.exp,\n    isLoggedIn : true\n  }\n  session.user = {...session.user};\n  return session;\n}\n\nexport const refresh = (id = null) =>\n{\n  return new Promise((resolve, reject) => {\n    const auth = createCognitoAuth();\n    auth.userhandler = {\n      onSuccess: function (result) {\n        let session = formatSessionObject(store.getState().session.user.id, result);\n        setSessionCookie(session);\n        store.dispatch({ type: SET_SESSION, session });\n        resolve(session)\n      },\n      onFailure: function (err) {\n        console.log('cognito refresh error', err)\n        reject(err)\n      }\n    }\n    //auth.refreshSession(auth.getSession());\n    auth.getSession();\n    //let user = auth.getCachedSession();\n    //auth.refreshSession(auth.getCachedSession());\n/** \n  const auth = createCognitoAuth();\n  auth.userhandler = {\n    onSuccess: function (result) {\n      let session = formatSessionObject(store.getState().session.user.id, result);\n      setSessionCookie(session);\n      store.dispatch({ type: SET_SESSION, session });\n      resolve(session)\n    },\n    onFailure: function (err) {\n      console.log('whateves', err)\n      reject(err)\n    }\n  }\n  auth.getSession()  \n  */\n})    \n  //let user = auth.getCachedSession();\n  //auth.refreshSession(user.getSession())\n  //console.log('cached session', user)\n  }\n\n// Sign out of the current session (will redirect to signout URI)\nconst signOutCognitoSession = () => {\n  clearSession();\n  const auth = createCognitoAuth()\n  auth.signOut()\n}\n\nexport default {\n  createCognitoAuth,\n  createCognitoUser,\n  createCognitoUserPool,\n  getCognitoSession,\n  getCognitoSignInUri,\n  parseCognitoWebResponse,\n  signOutCognitoSession,\n  initSessionFromCallbackURI\n}","import Cookie from \"js-cookie\";\nimport moment from \"moment\";\nimport { refresh } from './cognito'\n\nexport function setSessionCookie(session)\n{\n  //Cookie.set(\"x-token\", session);\n  localStorage.setItem('x-token', JSON.stringify(session))\n}\n// Initialise the Cognito sesson from a callback href\nexport function hasSession() {\n    if(localStorage.getItem('x-token'))\n    {\n      const session = JSON.parse(localStorage.getItem('x-token'));\n      const expTime = moment.unix(session.expiration).valueOf();\n      const current_time = moment().valueOf();\n      const updateTime =  moment.unix(session.expiration).subtract(5, \"minutes\").valueOf();\n      console.log('token expires @', moment.unix(session.expiration).format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('current time is', moment().format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('update time is', moment.unix(session.expiration).subtract(5, \"minutes\").format('MMMM Do YYYY, h:mm:ss a'))\n      console.log('cookie expues',  current_time, expTime, updateTime);\n      if(current_time > updateTime){\n        refresh().then(data=> {return true})\n        .catch(e=>clearSession())\n        return session;\n      }\n      if ( expTime > current_time) {\n        return session;\n      }\n      else {\n        refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n      }\n    }\n  return false;\n}\n\nexport function clearSession() {\n  if(localStorage.getItem('x-token'))\n  {\n    localStorage.removeItem(\"x-token\")\n  }\nreturn false;\n}\n\nexport function update()\n{\n  if(!hasSession())\n  {\n    refresh().then(data=>console.log('session data', data))\n        .catch(e=>clearSession())\n  }\n}","import { CLEAR_SESSION, SET_SESSION } from '../actions/types';\nimport { hasSession } from './../lib/utils/session';\n\nconst DEFAULT_SESSION = {\n  isLoggedIn: false,\n  isAdmin: false\n}\n\nconst existingSession = hasSession();\nconst initialState = (existingSession) ? existingSession : DEFAULT_SESSION;\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SESSION:\n      return Object.assign({},\n        action.session,\n        { isLoggedIn: true })\n\n    case CLEAR_SESSION:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default session","const initialState = [];\nconst user_board = (state = initialState, action) => {\n  switch (action.type) {\n    //case 'SET_USER_BOARD':\n    //  return action.payload;\n    default:\n      return state\n  }\n}\nexport default user_board","import {SET_USER_BOARD, SET_USER_BOARDS,  USER_BOARD_CREATED, USER_BOARD_UPDATED, USER_BOARD_DELETED, USER_BOARDS_CLEARED, USER_BOARD_CREATED_CLEARED } from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  loaded : false,\n  created : false\n};\nlet newState = null;\nconst user_boards = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_BOARD :\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case SET_USER_BOARDS:\n      newState = {...state, ...{data : action.payload, loaded : true}}\n      return newState;\n    case USER_BOARD_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case USER_BOARD_DELETED :\n      const filteredBoards  =  state.data.filter(board => { return board.id !== parseInt(action.payload)});\n      newState = {...state, ...{data : filteredBoards}}\n      return newState;\n    case USER_BOARD_UPDATED :\n      newState = {...state, ...{selected : \n        {...state.selected, ...action.payload}\n      }}\n      return newState;\n    case USER_BOARDS_CLEARED :\n      return initialState;\n    case USER_BOARD_CREATED_CLEARED :\n        newState = {...state, ...{created : false}}\n        return newState;\n    default:\n      return state\n  }\n}\nexport default user_boards","const initialState = [];\nconst user_session = (state = initialState, action) => {\n  switch (action.type) {\n\n    default:\n      return state\n  }\n}\nexport default user_session;","import {USER_SESSION_CLEARED,\n  USER_SESSIONS_CLEARED, \n  USER_SESSION_CREATED_CLEARED,  \n  USER_SESSION_CREATED, \n  SET_USER_SESSIONS, \n  SESSION_CREATED, \n  DELETE_USER_SESSION, \n  USER_SESSION_UPDATED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED} from './../actions/types';\nconst initialState = {\n  selected : {},\n  data : [],\n  created : false\n};\nlet newState = null;\nconst user_sessions = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_LOADED:\n      newState = {...state, ...{selected : action.payload}}\n      return newState;\n    case USER_SESSION_CLEARED:\n      newState = {...state, ...{selected : {}}}\n      return newState;\n    case SET_USER_SESSIONS:\n      newState = {...state, ...{data : action.payload}}\n      return newState;\n    case USER_SESSION_DELETED :\n        const filteredSessions  =  state.data.filter(session => { return session.id !== parseInt(action.payload)});\n        newState = {...state, ...{data : filteredSessions}}\n        return newState;\n    case USER_SESSION_CREATED:\n      newState = {...state, ...{data : state.data.concat(action.payload), created : action.payload}}\n      return newState;\n    case DELETE_USER_SESSION:\n        newState = state.filter((item) => item.id !== action.payload);\n        return newState;\n    case USER_SESSION_UPDATED :\n        newState = {...state, ...{selected : \n          {...state.selected, ...action.payload}\n        }}\n        return newState;\n    case USER_SESSION_CREATED_CLEARED :\n      newState = {...state, ...{created : false}}\n      return newState;\n    case USER_SESSIONS_CLEARED :\n      return initialState;\n    default:\n        return state\n  }\n}\nexport default user_sessions;","import {USER_LOADED, USER_IMAGE_UPDATED} from './../actions/types';\n\n\nconst initialState = {};\nconst user = (state = initialState, action) => {\n  let newState = state;\n  switch (action.type) {\n    case USER_LOADED:\n      return action.payload;\n      case USER_IMAGE_UPDATED:\n      newState.profile_img = action.payload.data;\n      return newState;\n    default:\n      return state\n  }\n}\nexport default user","const initialState = 0;\nconst api = (state = initialState, action) => {\nlet newState = state;\n  switch (action.type) {\n    case 'API_START':\n        return newState +1;\n    case 'API_END':\n        newState = state-1;\n        return newState;  \n    default :\n        return newState;\n}}\nexport default api;","import {BOARDS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst boards = (state = initialState, action) => {\n  switch (action.type) {\n    case BOARDS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default boards","\nrequire('dotenv').config()\nexport const s3Conf = { \n    root : process.env.REACT_APP_AWS_S3_ROOT\n};","import { s3Conf } from './../config/s3';\nimport {USER_SESSION_IMAGES_LOADED, USER_SESSION_IMAGES_CREATED, USER_SESSION_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_SESSION_IMAGES_LOADED:\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_SESSION_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_SESSION_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import { s3Conf } from './../config/s3';\nimport {USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED} from './../actions/types';\n\nconst INITIAL_STATE_ID = 1;\n\nconst initialState = [\n    {\n        id : INITIAL_STATE_ID ,\n        original: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n        thumbnail: \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\",\n    }\n];\nconst session_images = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_BOARD_IMAGES_LOADED :\n      return (action.payload.length > 0) ?  prepImages(action.payload) : initialState;\n    case USER_BOARD_IMAGES_CREATED :\n      return setImages(state).concat(prepImages(action.payload))\n    case USER_BOARD_IMAGE_DELETED :\n      const newState =  state.filter(img => { return img.id !== parseInt(action.payload)});\n      return (newState.length) ? newState : initialState;\n    default:\n      return state\n  }\n}\nexport default session_images;\n\nconst setImages = (state) =>\n{\n  return  state.filter(img=>{return img.id !== INITIAL_STATE_ID });\n}\n\nconst prepImages = ( images ) => {\n    let formattedImages = [];\n    images.forEach(img=>{\n        formattedImages.push({\n            id : img.id,\n            original: s3Conf.root+ img.name,\n            thumbnail: s3Conf.root + img.name,\n        })\n    })\n    return formattedImages;\n}","import {SHAPERS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst shapers = (state = initialState, action) => {\n  switch (action.type) {\n    case SHAPERS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default shapers;","import {STORMGLASS_LOADED} from './../actions/types';\n\nconst initialState = { selected : {}, data : []};\nlet newState = null;\nconst stormglass = (state = initialState, action) => {\n  switch (action.type) {\n    case STORMGLASS_LOADED:\n      newState = {...state, ...{data : action.payload}};\n      return newState;\n    default:\n      return state\n  }\n}\nexport default stormglass;","import { combineReducers } from 'redux'\nimport session from './session';\nimport user_board from './user_board';\nimport user_boards from './user_boards';\nimport user_session from './user_session';\nimport user_sessions from './user_sessions';\nimport user from './user';\nimport api from './api';\nimport boards from './boards';\nimport session_images from './session_images';\nimport user_board_images from './user_board_images';\nimport shapers from './shapers';\nimport stormglass from './stormglass';\n\nexport default combineReducers({\n  api,\n  boards,\n  session_images,\n  shapers,\n  user_board,\n  user_boards,\n  user_board_images,\n  user_session,\n  user_sessions,\n  session,\n  stormglass,\n  user\n})","// inspired by https://leanpub.com/redux-book\nimport axios from \"axios\";\nimport { API } from \"./../actions/types\";\nimport { accessDenied, apiError, apiStart, apiEnd } from \"./../actions/api\";\nimport apiConfig from './../config/api';\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n   const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = apiConfig.host + apiConfig.port || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n        console.log('error', error)\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"./types\";\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport api from './../middleware/api';\nrequire('dotenv').config()\n\nconst storeEnhancers =\n  (process.env.REACT_APP_ENV !== 'PROD' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer,\n  storeEnhancers(applyMiddleware(thunk, api))\n)\n\nexport default store","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cognitoUtils from './../../lib/utils/cognito'\nimport './css/Nav.css'\n\nconst onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n\nconst Navbar = props =>{\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n              <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <div className=\"navbar-nav\">\n              <a className=\"navbar-brand\" href=\"/\"><img src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo.png\" alt=\"bake n flake bakery\" height=\"50\" width=\"50\"/></a>\n              {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/user/dashboard'}>\n                          My Memo</Link>\n                      }\n \n                {false && props.session.isLoggedIn && props.session.isAdmin && \n                          <Link className=\"nav-link\" to={'/user'}>\n                          Users</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/session'}>\n                          Sessions</Link>\n                      }\n                {(props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/board'}>\n                          Boards</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/location'}>\n                          Spots</Link>\n                      }\n                {false && (props.session.isLoggedIn ) &&\n                          <Link className=\"nav-link\" to={'/manufacturer'}>\n                          Brands</Link>\n                      }\n\n              </div>\n              <div className=\"navbar-nav ml-auto\">\n              {props.session.isLoggedIn ? ( <span><span className=\"white-txt\">Hello {props.username}&nbsp;&nbsp;</span><span><a className=\"Home-link\" href=\"#\" onClick={onSignOut}>Sign out</a> </span></span> ) \n              : (<a className=\"Home-link\" href={cognitoUtils.getCognitoSignInUri()}>Sign in</a>)}\n              </div>\n          </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, roles, session, ...rest }) => (\n    <Route {...rest} render={props => {\n        if (!session.isLoggedIn) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (false){\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: '/'}} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\nexport default PrivateRoute;","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\n\nclass Page404 extends Component {\n  componentDidMount () {\n  }\n  \n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <p>404 Page Not Found</p>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Page404)","import React, { Component } from 'react'\nimport './Home.css'\nimport { connect } from 'react-redux'\nimport cognitoUtils from '../../lib/utils/cognito'\nimport { s3Conf } from './../../config/s3';\n//import { initSession } from '../../actions/session';\n\nconst mapStateToProps = state => {\n  return { session: state.session }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n   // initSession: () => dispatch(initSession())\n  }\n}\n\nclass Home extends Component {\n\n  componentDidMount () {\n    if (this.props.session.isLoggedIn) {\n      this.props.history.push('/user/dashboard');\n    }\n  }\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    cognitoUtils.signOutCognitoSession()\n  }\n  render () {\n    return (\n      <div className=\"Home\">\n        <header className=\"background home-background\">\n            <div className=\"container container-home\">\n              <div className=\"row align-items-center my-5\">\n                  <div className=\"col-lg-7\">\n                    <img className=\"img-fluid rounded mb-4 mb-lg-0\" src=\"https://surfzonemovie.com/wp-content/uploads/2016/01/Bill-Stewart-gets-barrelled-at-famous-break-Cloudbreak-Fiji-900x400.jpg\" alt=\"\" />\n                  </div>\n                  <div className=\"col-lg-5\">\n                    <h1 className=\"font-weight-light\">My Surf Sesh</h1>\n                    <p>A Free online journal to track your surfing sessions and gain analytics into your performance!</p>\n                    <a className=\"btn btn-primary\" href={cognitoUtils.getCognitoSignInUri()}>Sign Up!</a>\n                  </div>\n              </div>\n              <div className=\"card text-white bg-secondary my-5 py-4 text-center\">\n                  <div className=\"card-body\">\n                    <p className=\"text-white m-0\">This call to action card is a great place to showcase some important information or display a clever tagline!</p>\n                  </div>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Track Sessions</h2>\n                          <img src={s3Conf.root + 'site/session_example.png'} />\n                          <p className=\"card-text\">Track and rate your session then use the stats to decide the best board and location for the swell.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Showcase Boards</h2>\n                          <img src={s3Conf.root + 'site/board_example.png'} />\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod tenetur ex natus at dolorem enim! Nesciunt pariatur voluptatem sunt quam eaque, vel, non in id dolore voluptates quos eligendi labore.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mb-5\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                          <h2 className=\"card-title\">Store Photos</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                          <h2 className=\"card-title\">Get Reports</h2>\n                          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam molestias corporis quod, ea minima accusamus.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                          <a href=\"#\" className=\"btn btn-primary btn-sm\">Sign Up!</a>\n                        </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n/*\n<img  className=\"Home-logo \" alt=\"logo\" src=\"https://umanage-mowatr.s3.amazonaws.com/bake_n_flake_logo_250_250.png\" />\n*/","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initSessionFromCallbackURI } from '../../lib/utils/cognito';\n\nfunction mapStateToProps (state) {\n  return { session: state.session }\n}\nfunction mapDispatchToProps (dispatch) {\n  return {\n    initSessionFromCallbackURI: href => dispatch(initSessionFromCallbackURI(href))\n  }\n}\n\nclass Login extends Component {\n  // If a Cognito auth code is in the URL (could be a hash or query component), init the new session\n  componentDidMount () {\n    if (this.props.location.hash || this.props.location.search) {\n      this.props.initSessionFromCallbackURI(window.location.href)\n    }\n  }\n\n  render () {\n    // If there's no auth code in the URL or we're now logged into, redirect to the root page\n    if ((!this.props.location.hash && !this.props.location.search) || this.props.session.isLoggedIn) {\n      return <Redirect to=\"/user/dashboard\" />\n    }\n\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Loader from 'react-loader';\n\nfunction mapStateToProps(state) {\n    return { api: state.api };\n} \n\nclass MainContainer extends React.Component{\n    render()\n    {\n        return (\n            <header className=\"background rgba-black-strong\">\n                <div className=\"container main-container \">\n                <Loader loaded={true}>\n                        { this.props.children }\n                </Loader>\n                </div>\n            </header>\n        )\n    }\n}   \n\nexport default connect(mapStateToProps)(MainContainer) ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nclass UserRow extends React.Component {\n    render(){\n        return (\n            <div className=\"row table-row\" key={this.props.user.Username}>\n                <div className=\"col-2\">\n                {this.props.user.Username}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.name}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.email}\n                </div>\n                <div className=\"col-3\">\n                {this.props.user.phone_number}\n                </div>\n                <div className=\"col-1 recipe-details\">\n                    <div>\n                        <FontAwesomeIcon alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => this.props.editUser(this.props.user.Username)} />\n                        <FontAwesomeIcon  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer', color : 'red'}}  icon={faTrash} onClick={() => this.props.deleteUser(this.props.user.Username)}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default UserRow;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport UserRow from './UserRow';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n\n\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass UserIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { users: [], headers : {} }\n        this.deleteUser = this.deleteUser.bind(this);\n        this.editUser = this.editUser.bind(this);  \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            axios.get( apiConfig.host + apiConfig.port + `/api/user`, this.props.session.headers).then(data => {\n                data.data.sort((a,b) => (a.Username > b.Username) ? 1 : ((b.Username > a.Username) ? -1 : 0));\n                this.setState({ users: data.data })\n            });\n        }\n    }\n\n    deleteUser(id ) {\n        confirmAlert({\n            title: 'Confirm To Delete',\n            message: 'Are you sure to do this.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    axios.delete(apiConfig.host + apiConfig.port + `/api/user/${id}`, this.props.session.headers).then(data => {\n                        const index = this.state.users.findIndex(user => user.Username === id);\n                        this.state.users.splice(index, 1);\n                        this.props.history.push('/user');\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n          });\n    }\n\n    editUser(uname) {\n        this.props.history.push('/user/edit/' + uname);\n    }\n\n    render() {\n        const users = this.state.users;\n        return (\n           <MainContainer>\n               <div className=\"row\">\n                    <div className=\"card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                           <h2> <strong>Users</strong> <Link to={'user/create'} className=\"btn btn-sm btn-outline-secondary float-right\"> Create New User</Link></h2>\n                        </div>\n                        <div className=\"card-text\">\n                        <div className=\"table-container\" >\n                                <div className=\"row table-header\">\n                                    <div className=\"col-2\">\n                                         Login\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Full Name\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-3\">\n                                        Phone\n                                    </div>\n                                    <div className=\"col-1\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                                {users && users.map(user =>\n                                        <UserRow user={user} deleteUser={this.deleteUser} editUser={this.editUser} key={user.username}></UserRow>\n                                        )} \n                                        {\n                                            (!users || users.length === 0) && <div className=\"col-12\"><h3>No users found at the moment</h3></div>\n                                        } \n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\nexport default connect(mapStateToProps)(UserIndex)","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const FormCard = props =>{\n    return (\n        <div className=\"row\">\n            <div className=\"card card-lg mx-auto\">\n                <div  href=\"#\" ><FontAwesomeIcon  className=\"float-right card-close\" icon={faTimesCircle} size='2x' onClick={props.returnToIndex} /></div>\n                <div className=\"card-text\">\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const UserForm = props =>{\n    const addPhonePrefix = e =>\n    {   \n        e.persist();\n        const validKeys = [8, 37, 39];\n        if( validKeys.indexOf(e.keyCode) === -1 && (e.currentTarget.value.length > 11 || (!Number.isInteger(parseInt(e.key)))))\n        {\n            e.preventDefault();\n            return;\n        }\n        let currentValue = e.currentTarget.value;\n        let target = e.currentTarget;\n        let key = e.key;\n        setTimeout(function () {\n            if(target.value !== '' && currentValue.indexOf('+1') !== 0) {\n                target.value = '+1' + key;\n            } \n        }, 1);\n    }\n    return (\n        <form className=\"row\" id={\"create-post-form\"} onSubmit={props.processFormSubmission} noValidate={true}>\n        <div className=\"form-group col-md-12\">\n                <label htmlFor=\"Username\"> User Name </label>\n                <input disabled={props.edit ? \"disabled\" : false} type=\"text\" id=\"Username\" defaultValue={ (props.edit && props.user.Username) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"Username\" className=\"form-control\" placeholder=\"Enter a Username for the user\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"name\"> Name </label>\n                <input type=\"text\" id=\"name\" defaultValue={(props.edit && props.user.name) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"Enter user's first name\" />\n            </div>\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"email\"> Email </label>\n                <input type=\"email\" id=\"email\" defaultValue={(props.edit && props.user.email) || ''} onChange={(e) => props.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter user's email address\" />\n            </div>\n\n            <div className=\"form-group col-md-12\">\n                <label htmlFor=\"phone\"> Phone </label>\n                <input type=\"text\" id=\"phone_number\" defaultValue={(props.edit && props.user.phone_number) || ''} onKeyDown={(e)=> addPhonePrefix(e)} onChange={(e) => props.handleInputChanges(e)} name=\"phone_number\" className=\"form-control\" placeholder=\"+[d]1234567890\" />\n            </div>\n\n            <div className=\"form-group col-md-4 pull-right\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                    {(props.edit) ? (\"Edit User\") : ( \"Add User\") }</button>\n                {props.loading &&\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\n                }\n            </div>\n        </form>)\n        ;\n}","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Create User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass CreateUser extends React.Component{\n    constructor(props ) {\n        super(props);\n        this.state = {\n            Username: '',\n            name: '',\n            email: '',\n            phone_number: '',\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            \n            \n        }\n    }\n\n    processFormSubmission = (e)=> {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const formData = {\n            Username : this.state.Username,\n            name: this.state.name,\n            email: this.state.email,\n            phone_number: this.state.phone_number,\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n\n        if (this.props.session.isLoggedIn) {\n            axios.post(apiConfig.host + apiConfig.port + `/api/user`, formData, this.props.session.headers).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n            ])\n            .catch(\n                error=>{\n                    this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n\n                }\n            );\n        }\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage } = this.state;\n        return (\n            <MainContainer>\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new post\n                        </div>\n                        )}\n\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                                </div>\n                        )}\n\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                                </div>\n                        )}\n                        <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} />\n                    </div>\n                </FormCard>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(CreateUser)\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport apiConfig from '../../config/api.js';\nimport  MainContainer  from './../layout/MainContainer';\nimport {FormCard} from './../layout/FormCard';\nimport {UserForm} from './UserForm';\n\nconst TITLE = 'Edit User';\nconst mapStateToProps = state => {\n    return { session: state.session }\n  }\n\nclass EditUser extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            user: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            headers : {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            \n            \n            axios.get(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.props.session.headers).then(data => {\n                this.setState({ user: data.data });\n            })\n            .catch(error=>this.props.history.push('/user'));\n        }\n    }\n\n    processFormSubmission = async (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(apiConfig.host + apiConfig.port + `/api/user/${this.state.id}`, this.state.values, this.props.session.headers).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/user');\n            }, 1500)\n        })\n        .catch(\n            error=>{\n                this.setState({ submitSuccess: false, submitFail: true, errorMessage : error.response.data.message });\n            }\n        );\n    }\n\n    setValues = (values) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    handleInputChanges = (e) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    returnToIndex = e =>\n    {\n      this.props.history.push('/user');\n    }\n\n    render() {\n        const { submitSuccess, loading, submitFail, errorMessage} = this.state;\n        return (\n           <MainContainer>\n                {this.state.user &&\n                <FormCard returnToIndex={this.returnToIndex}>\n                    <div className=\"col-md-12 \">\n                        <h2>{TITLE}</h2>\n                        {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                            user's details has been edited successfully \n                            </div>\n                        )}\n                        {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                        )}\n                    <UserForm user={this.state.user} handleInputChanges={this.handleInputChanges} loading={loading} processFormSubmission={this.processFormSubmission} edit=\"true\"/>\n                    </div>\n                </FormCard>\n                }\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditUser)\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\nconst StarBar = props =>{\n    const content = [];\n    const size = props.size ? props.size : 'xs';\n    const starClassname = (props.static && props.static === true) ? 'star-static' : 'star';\n    const disabledClassname = (props.static && props.static === true) ? 'star-disabled-static' : 'star-disabled';\n    const onClick = (rating) =>\n    {\n        if(props.static && props.static === true) return;\n        if(props.onClick)\n        {\n            props.onClick({rating})\n        }\n    }\n    if(!props.stars || props.stars === 0) {\n    for (let i = 0; i < 10; i++) {\n        content.push(<FontAwesomeIcon  className={disabledClassname} icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    else{ \n    for (let i = 0; i < props.stars; i++) {\n       content.push(<FontAwesomeIcon  className={starClassname} icon={faStar} size={size} onClick={()=>{onClick(i + 1)}} key={i+1} />);\n    }\n    for (let i =  props.stars; i < 10 ; i++) {\n        content.push(<FontAwesomeIcon  className={disabledClassname} icon={faStar} onClick={()=>{onClick(i + 1)}} size={size} key={i+1} />);\n     }\n    }\n    return (\n        content \n    )\n}\nexport default StarBar;","import React from 'react';\nimport StarBar from './../layout/StarBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { s3Conf } from './../../config/s3';\nimport moment from 'moment'\nimport { withRouter } from \"react-router\";\n\n\nconst SessionCard = props =>{\n    return (\n        <div className=\"container-fluid session-card\" onClick={()=>props.history.push(\"/session/\" + props.session.id)} >\n            <div className=\"row\">\n                <div className=\"col-12 session-card-title\"><button className=\"btn btn-link card-title\" onClick={()=>props.history.push(\"/session/\" + props.session.id) }>{props.session.title}</button></div>\n                <div className=\"col-4\">\n                <div>\n                    <img className=\"img-responsive img-thumbnail img-card\" \n                        src={props.session.SessionImages && props.session.SessionImages.length ? s3Conf.root + props.session.SessionImages[0].name \n                        : \"https://surfmemo.s3.amazonaws.com/4b371c1dcc76131241ffe613e30ea51f\" }/>\n                </div>\n                    <div style={{textAlign : 'center', marginTop : '0.3em'}}>\n                        { props.editSession && <FontAwesomeIcon size=\"lg\" alt=\"edit user\" style={{ marginLeft:'.1em' , cursor:'pointer'}}  icon={faEdit} onClick={() => props.editSession(props.session.id)} /> }\n                        { props.deleteSession && <FontAwesomeIcon  size=\"lg\"  alt=\"delete user\" style={{ marginLeft:'.5em', cursor:'pointer'}}  icon={faTrash} onClick={() => props.deleteSession(props.session.id)} /> }\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card-date\" >{moment(props.session.createdAt).calendar()}</div>\n                    <div className=\"card-rating\" ><StarBar stars={props.session.rating} /></div>\n                    <div >{props.session.UserBoard && props.session.UserBoard.name ? props.session.UserBoard.name : \"No Board Selected\"}</div>\n                    <div >{props.session.Location && props.session.Location.name ? props.session.Location.name : \"No Location Specified\"}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SessionCard);\n","import React from \"react\";\nimport StarBar from \"./../layout/StarBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { s3Conf } from \"./../../config/s3\";\nimport { withRouter } from \"react-router\";\n\nconst BoardCard = (props) => {\n\treturn (\n\t\t<div className=\"container-fluid session-card\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12 board-card-title\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link card-title\"\n\t\t\t\t\t\tonClick={() => props.history.push(\"/board/\" + props.board.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.board.name}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"img-responsive img-thumbnail img-card\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tprops.board.UserBoardImages && props.board.UserBoardImages.length\n\t\t\t\t\t\t\t\t? s3Conf.root + props.board.UserBoardImages[0].name\n\t\t\t\t\t\t\t\t: \"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{props.editBoard && (\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\talt=\"edit user\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: \".1em\", cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\ticon={faEdit}\n\t\t\t\t\t\t\t\tonClick={() => props.editBoard(props.board.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{props.deleteBoard && (\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\talt=\"delete user\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: \".5em\", cursor: \"pointer\", color: \"red\" }}\n\t\t\t\t\t\t\t\ticon={faTrash}\n\t\t\t\t\t\t\t\tonClick={() => props.deleteBoard(props.board.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-rating\">\n\t\t\t\t\t\t<StarBar stars={props.board.rating} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-card-model\">\n\t\t\t\t\t\t{props.board.size} {props.board.Board && props.board.Board.model}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default withRouter(BoardCard);\n","import BaseRequest from './BaseRequest';\n\nclass UserBoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'USER_BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/user_board';\n    }\n\n\n    getImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/user_board/images';\n        return this.delete(args);\n    }\n}\nexport default UserBoardRequests;","import BaseRequest from './BaseRequest';\n\nclass SessionRequests extends BaseRequest{\n\n    REQUEST_TYPE = 'SESSION';\n\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/session';\n    }\n\n    getImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.get(args);\n\n    }\n\n    createImages = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.create(args);\n    }\n\n    deleteImage = (args) => {\n        this.endpoint = '/api/session/images';\n        return this.delete(args);\n    }\n}\nexport default SessionRequests;","import { USER_SESSION_CREATED, \n  SET_USER_SESSION, \n  SET_USER_SESSIONS, \n  USER_SESSION_UPDATED, \n  USER_SESSION_CLEARED, \n  USER_SESSION_DELETED, \n  USER_SESSION_LOADED, \n  USER_SESSION_IMAGES_LOADED, \n  USER_SESSION_IMAGES_CREATED, \n  USER_SESSION_IMAGE_DELETED,\n  USER_SESSION_CREATED_CLEARED,\n  USER_SESSIONS_CLEARED  } from \"./types\";\nimport SessionRequests from './../requests/SessionRequests';\n\n\nexport const UserSessionImagesLoaded = data => ({\n  type: USER_SESSION_IMAGES_LOADED,\n  payload: data\n});\n\nexport const UserSessionImagesCreated = data => ({\n  type: USER_SESSION_IMAGES_CREATED,\n  payload: data\n});\n\nexport const UserSessionCreatedCleared = () => ({\n  type: USER_SESSION_CREATED_CLEARED\n});\n\nexport const UserSessionsCleared = () => ({\n  type: USER_SESSIONS_CLEARED\n});\n\nconst UserSessionImageDeleted = data=> (\n  {\n    type: USER_SESSION_IMAGE_DELETED,\n    payload: data\n  }\n)\n\nexport const UserSessionsLoaded = data => ({\n    type: SET_USER_SESSIONS,\n    payload: data\n  });\n\n\nexport const UserSessionCreated = data => ({\n  type: USER_SESSION_CREATED,\n  payload: data\n});\n\n  export const UserSessionLoaded = data => ({\n    type: USER_SESSION_LOADED,\n    payload: data\n  });\n\n\n  export const UserSessionUpdated= data => ({\n    type: USER_SESSION_UPDATED,\n    payload: data\n  });\n\n  export const UserSessionCleared= () => ({\n    type: USER_SESSION_CLEARED,\n    payload: null\n  });\n\n  const UserSessionDeleted = data=> (\n    {\n      type: USER_SESSION_DELETED,\n      payload: data\n    }\n  )\n\n  \nexport const UserSessionSet = data => (\n  {\n    type: SET_USER_SESSION,\n    payload: data\n  }\n)\n\nexport const createUserSession= ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).create(params)\n    )\n  }\n}\n\nexport const loadUserSessions = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionsLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).get(params)\n    )\n  }\n}\n\nexport const loadUserSession = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getOne(params)\n    )\n  }\n}\n\n\nexport const deleteUserSession = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).delete(params)\n    )\n  }\n}\n\nexport const updateUserSession = (session, args) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionUpdated(data)} }}\n    dispatch(\n      new SessionRequests(session).update(params)\n    )\n  }\n}\n\nexport const loadUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesLoaded(data)} }}\n    dispatch(\n      new SessionRequests(session).getImages(params)\n    )\n  }\n}\n\nexport const addUserSessionImages = ( session, args )=>\n{\n  return function(dispatch, getState)\n  {\n    const params = {...args, ...{onSuccess : (data)=>{ return UserSessionImagesCreated(data)} }}\n    dispatch(\n      new SessionRequests(session).createImages(params)\n    )\n  }\n}\n\nexport const deleteUserSessionImage = (session, id) =>\n{\n  return function(dispatch, getState)\n  {\n    const params = { id: id, onSuccess : (data)=>{ return UserSessionImageDeleted(id)}}\n    dispatch(\n      new SessionRequests(session).deleteImage(params)\n    )\n  }\n}\n","import { USER_BOARDS_CLEARED,  USER_BOARD_CREATED_CLEARED, SET_USER_BOARDS, USER_BOARD_UPDATED, USER_BOARD_DELETED, SET_USER_BOARD, USER_BOARD_IMAGES_LOADED, USER_BOARD_IMAGES_CREATED, USER_BOARD_IMAGE_DELETED, USER_BOARD_CREATED } from \"./types\";\nimport UserBoardRequests from './../requests/UserBoardRequests';\n\n\nexport const UserBoardsLoaded = data => ({\n    type: SET_USER_BOARDS,\n    payload: data\n  });\n\n  export const UserBoardImagesLoaded = data => ({\n    type: USER_BOARD_IMAGES_LOADED,\n    payload: data\n  });\n\n  export const UserBoardsCleared = data => ({\n    type: USER_BOARDS_CLEARED,\n    payload: data\n  });\n\n  export const UserBoardCreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n\n  export const UserBoardImagesCreated = data => ({\n    type: USER_BOARD_IMAGES_CREATED,\n    payload: data\n  });\n\n  export const UserBoardLoaded = data => ({\n    type: SET_USER_BOARD,\n    payload: data\n  });\n\n  export const UserBoardUpdated= data => ({\n    type: USER_BOARD_UPDATED,\n    payload: data\n  });\n\n  const UserBoardDeleted = data=> (\n    {\n      type: USER_BOARD_DELETED,\n      payload: data\n    }\n  )\n\n  const UserBoardCreated = data=> (\n    {\n      type: USER_BOARD_CREATED,\n      payload: data\n    }\n  )\n\n  export const UserBoardreatedCleared = () => ({\n    type: USER_BOARD_CREATED_CLEARED\n  });\n  \n\n  const UserBoardImageDeleted = data=> (\n    {\n      type: USER_BOARD_IMAGE_DELETED,\n      payload: data\n    }\n  )\n\n  export const createUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).create(params)\n      )\n    }\n  }\n\n\n  export const clearUserBoards = ( )=>\n  {\n    return function(dispatch, getState)\n    {\n      dispatch(\n        UserBoardsCleared(null)\n      )\n    }\n  }\n\n  export const loadUserBoard = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getOne(params)\n      )\n    }\n  }\n\n  export const loadUserBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardsLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).get(params)\n      )\n    }\n  }\n\n  export const deleteUserBoard = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).delete(params)\n      )\n    }\n  }\n\n  export const updateUserBoard = (session, args) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardUpdated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).update(params)\n      )\n    }\n  }\n\n  export const loadUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesLoaded(data)} }}\n      dispatch(\n        new UserBoardRequests(session).getImages(params)\n      )\n    }\n  }\n\n  export const addUserBoardImages = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return UserBoardImagesCreated(data)} }}\n      dispatch(\n        new UserBoardRequests(session).createImages(params)\n      )\n    }\n  }\n\n  export const deleteUserBoardImage = (session, id) =>\n  {\n    return function(dispatch, getState)\n    {\n      const params = { id: id, onSuccess : (data)=>{ return UserBoardImageDeleted(id)}}\n      dispatch(\n        new UserBoardRequests(session).deleteImage(params)\n      )\n    }\n  }\n\n\n  \n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport ImageUploader from 'react-images-upload';\nimport moment from 'moment';\nimport UserRequests from './../../requests/UserRequests';\nimport { s3Conf } from './../../config/s3';\nimport {loadUser, updateUserImage} from './../../actions/user';\n\nconst mapStateToProps = state => {\n    return { user : state.user, session : state.session }\n  }\n  const mapDispachToProps = dispatch => {\n    return {\n      //updateImage : (request, data) => dispatch( request.updateProfileImage({data: data , onSuccess : (data)=>{ return {type: \"SESSION_IMAGE_UPDATED\", payload: data}}})),\n      updateImage : (session, params)=>dispatch(updateUserImage(session, params)),\n      loadUser : (session, params)=>dispatch(loadUser(session, params))\n    }}\n\nclass ProfileCard extends React.Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            board_id: null,\n            manufacturer_id : null,\n            uploaderInstance : 1\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            this.props.loadUser(this.props.session, {id : this.props.session.user.id} );\n        }\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        const formData = UserRequests.createFormRequest({user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.updateImage(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n    }\n\nrender(){\n    const {user} = this.props;\n    const image = this.props.user.profile_img ? s3Conf.root +  this.props.user.profile_img : 'https://www.bootdey.com/img/Content/avatar/avatar7.png';\n    return (\n            <div className=\"team-single\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\" />\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-5 xs-margin-30px-bottom\">\n                        <div className=\"team-single-img\">\n                            <img src={image} alt=\"\" />\n                        </div>\n                        <div className=\"bg-light-gray padding-30px-all md-padding-25px-all sm-padding-20px-all text-center\">\n                            <div className=\"sm-width-95 sm-margin-auto\">\n                                <ImageUploader\n                                    key={this.state.uploaderInstance}\n                                    withIcon={false}\n                                    buttonText='Update Profile Photo'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                    label=''\n                                    withPreview={false}\n                                    singleImage={true}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 col-md-7\">\n                        <div className=\"team-single-text padding-50px-left sm-no-padding-left\">\n                            <h4 className=\"font-size38 sm-font-size32 xs-font-size30\">{user.first_name} {user.last_name}</h4>\n                            <p className=\"no-margin-bottom\">\n                                { /* text colud go here */}\n                            </p>\n                            <div className=\"contact-info-section margin-40px-tb\">\n                                <ul className=\"list-style9 no-margin\">\n                                <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">username:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.username}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"far fa-gem text-yellow\"></i>\n                                                <strong className=\"margin-10px-left text-yellow\">Member Since:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{moment(user.createdAt).format(\"MM-DD-YYYY\")}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-map-marker-alt text-green\"></i>\n                                                <strong className=\"margin-10px-left text-green\">Region:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>Regina ST, London, SK.</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-5 col-5\">\n                                                <i className=\"fas fa-envelope text-pink\"></i>\n                                                <strong className=\"margin-10px-left xs-margin-four-left text-pink\">Email:</strong>\n                                            </div>\n                                            <div className=\"col-md-7 col-7\">\n                                                <p>{user.email}</p>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <h5 className=\"font-size24 sm-font-size22 xs-font-size20\">Professional Skills</h5>\n                             <div className=\"sm-no-margin\">\n                                <div className=\"progress-text\">\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">Positive Behaviors</div>\n                                        <div className=\"col-5 text-right\">40%</div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-progress progress\">\n                                    <div role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width : \"40%\"}} className=\"animated custom-bar progress-bar slideInLeft bg-sky\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(ProfileCard);\n\n/**\n *                             <div className=\"margin-20px-top team-single-icons\">\n                                <ul className=\"no-margin\">\n                                    <li><a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-twitter\"></i></a></li>\n                                    <li><a href=\"#\"><i className=\"fab fa-instagram\"></i></a></li>\n                                </ul>\n                            </div>\n */","window.geolocator.config({\n    language: \"en\",\n    google: {\n      version: \"3\",\n      key: \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\",\n    },\n  });\n \n  export const locator = window.geolocator;\n  export const defaultOptions = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumWait: 10000, // max wait time for desired accuracy\n    maximumAge: 0, // disable cache\n    desiredAccuracy: 30, // meters\n    fallbackToIP: true, // fallback to IP if Geolocation fails or rejected\n    addressLookup: true, // requires Google API key if true\n  };\n","import algoliasearch from 'algoliasearch/lite';\nimport { createInMemoryCache } from '@algolia/cache-in-memory';\nrequire('dotenv').config();\n\nconst algoliaClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_CLIENT_SECRET,\n  {\n    // Caches responses from Algolia\n    responsesCache: createInMemoryCache(),\n    // Caches Promises with the same request payload\n    requestsCache: createInMemoryCache({ serializable: false }), // or createNullCache()\n  },\n);\n\nconst index = algoliaClient.initIndex('surfline_spots');\n\n\n\nconst getSpots = (lat, lon)=>\n{\n    return index.search('', {\n        aroundLatLng: `${lat}, ${lon}`,\n        aroundRadius: 10000 // 1000 km\n      })\n}\n\nexport default getSpots;\n  \n","const setWithExpiry = (key, value, ttl) => {\n    const now = new Date()\n    \n    // `item` is an object which contains the original value\n    // as well as the time when it's supposed to expire\n      const item = {\n          value: value,\n          expiry: now.getTime() + ttl\n      }\n      localStorage.setItem(key, JSON.stringify(item))\n  }\n\n\n const  getWithExpiry = (key) => {\n\tconst itemStr = localStorage.getItem(key)\n\t// if the item doesn't exist, return null\n\tif (!itemStr) {\n\t\treturn null\n\t}\n\tconst item = JSON.parse(itemStr)\n\tconst now = new Date()\n\t// compare the expiry time of the item with the current time\n\tif (now.getTime() > item.expiry) {\n\t\t// If the item is expired, delete the item from storage\n\t\t// and return null\n\t\tlocalStorage.removeItem(key)\n\t\treturn null\n\t}\n\treturn item.value\n}\n\nexport default {\n    setWithExpiry,\n    getWithExpiry\n  }","import './css/NearestSpots.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport ReactTooltip from 'react-tooltip'\nimport Iframe from 'react-iframe'\nimport  cache from './../../../lib/utils/cache';\n\nconst CACHE_KEY = 'nrspt';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n    };\n  };\n\nclass NearestSpots extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        spots : [],\n        selected : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    const setState = this.setState;\n    if (this.props.session.isLoggedIn) \n    {\n      const cachedHits = cache.getWithExpiry(CACHE_KEY);\n      if (cachedHits) {\n        console.log('we have cached hots');\n        this.setState({ spots: JSON.parse(cachedHits) });\n      }\n      else\n      {\n        locator.locate(defaultOptions , function (err, location) {\n        if (err) return console.log(\"location err\", err);\n        getSpots(location.coords.latitude,location.coords.longitude).then(data=>{\n            setState({spots : data.hits})\n            cache.setWithExpiry(CACHE_KEY, JSON.stringify(data.hits), 36000);\n          })\n        });\n      }\n    }\n  }\n\n  render()\n  {    \n    const { spots } =  this.state;\n    console.log('spots', spots)\n    return <div className=\"container surfline nearest_spots\">\n        <h6>Nearest Spots</h6>\n        {spots.map(el => (\n        <div className=\"row spot\" key={el.url}>\n            <div className=\"col\">\n\n            <div data-tip data-event=\"click\" data-for={el.url} href=\"#\" data-tip=\"http://localhost:3000/user/dashboard\" data-iscapture='true'>{el.name}</div>\n            <ReactTooltip id={el.url}  getContent={(datatip) => { \n              console.log('datatip', datatip);\n                return <Iframe url={datatip} \n                        width=\"450px\"\n                        height=\"450px\"\n\n                       \n                        /> }}\n                        isCapture={true}\n                        />             \n            </div>\n        </div>\n        ))}\n\n\n    </div>\n    }  \n    \n}\n\nexport default connect(mapStateToProps)(NearestSpots);","//import './css/Report.css'\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { locator, defaultOptions } from './../../../lib/utils/geolocator';\nimport getSpots from './../../../lib/utils/surfline_alg_geo';\nimport {StormGlassLoaded} from './../../../actions/stormglass';\nimport apiConfig from './../../../config/api';\n\nconst mapStateToProps = (state) => {\n    return {\n      session: state.session,\n      stormglass : state.stormglass\n    };\n  };\n\n  const mapDispachToProps = (dispatch) => {\n    return {\n      stormglassLoaded: (data) => dispatch(StormGlassLoaded(data)),\n    };\n  };\n\nclass Report extends React.Component{\n  constructor()\n  {\n    super();\n    this.state = {\n        data : {},\n        location : ''\n    }\n    this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if(this.props.stormglass.data.wavePeriod)\n      {\n        this.setState({data : this.props.stormglass.data});\n      }\n      else {\n        const  currentTime = new Date();\n        const setState = this.setState;\n        const sgLoaded = this.props.stormglassLoaded;\n        locator.locate(defaultOptions , function (err, location) {\n          if (err) return console.log(\"location err\", err);\n          getSpots(location.coords.latitude,location.coords.longitude).then(data=>{\n            setState({location :data.hits[0].name })\n            fetch(`${apiConfig.host + apiConfig.port }/api/sc?lat=${data.hits[0]._geoloc.lat}&lon=${data.hits[0]._geoloc.lon}&name=${data.hits[0].id}`).then((response) => response.json()).then((jsonData) => {\n              sgLoaded(jsonData.hours[currentTime.getHours()]);\n              console.log(jsonData.hours[currentTime.getHours()]);\n              setState({data : jsonData.hours[currentTime.getHours()]});\n            });\n          })\n      });\n    }\n    }\n  }\n\n  render()\n  {    \n    const { spots } =  this.state;\n    console.log('spots', spots)\n    return <div className=\"container surfline nearest_spots\">\n          <h6>Local Report</h6>\n          <div className=\"row spot\"><div className=\"col\"> <i>Observations Near {this.state.location}</i></div></div>\n          <div className=\"row spot\" >\n            <div className=\"col\">   \n            <div>Water Temp: {this.state.data.waterTemperature && (( this.state.data.waterTemperature.sg * 9/5) + 32).toFixed()}&#176;F</div>  \n            <div>Swell Height: {this.state.data.swellHeight && (this.state.data.swellHeight.noaa * 3.28084).toFixed(1)}ft</div>  \n            <div>Swell Period: {this.state.data.swellPeriod && this.state.data.swellPeriod.noaa.toFixed()  }s</div>  \n            <div>Wave Height: {this.state.data.waveHeight && (this.state.data.waveHeight.noaa * 3.28084).toFixed(1)}ft</div>  \n            <div>Wave Period: {this.state.data.wavePeriod && this.state.data.wavePeriod.noaa.toFixed() }s</div>  \n            <div>Pressure: {this.state.data.pressure && (this.state.data.pressure.sg * 0.0002953).toFixed(2) * 100  }in</div>  \n            <div>Wind Speed: {this.state.data.currentSpeed && (this.state.data.currentSpeed.sg * 1.94384 * 100 ).toFixed(1)  }k</div>  \n          </div>\n        </div>\n      </div>\n    }  \n    \n}\n\n\nexport default connect(mapStateToProps, mapDispachToProps )(Report);","import { STORMGLASS_LOADED } from \"./types\";\n\nexport const StormGlassLoaded = data => ({\n    type: STORMGLASS_LOADED,\n    payload: data\n  });\n\n\n\n\n\n\n  \n\n","import * as React from 'react';\nimport { connect } from 'react-redux'\nimport  MainContainer  from './../layout/MainContainer';\nimport { Link } from 'react-router-dom';\nimport SessionCard from './../session/SessionCard';\nimport BoardCard from './../board/BoardCard';\nimport UserRequests from './../../requests/UserRequests';\nimport UserBoardRequests from './../../requests/UserBoardRequests';\nimport UserSessionRequests from './../../requests/SessionRequests';\nimport {UserSessionsLoaded} from './../../actions/user_session';\nimport {UserBoardsLoaded} from './../../actions/user_board';\nimport {loadUserd} from './../../actions/user';\nimport './css/Dashboard.css'\nimport ProfileCard from './ProfileCard';\nimport NearestSpots from './../reports/surfline/NearestSpots';\nimport Report from './../reports/stormglass/Report';\n\n\nconst DASHBOARD_LIST_LIMIT = 3; \nconst mapStateToProps = state => {\n    return { session: state.session, boards : state.user_boards.data, user_sessions : state.user_sessions.data, locations : state.user.UserLocations }\n  }\n\n  const withs = \n  {\n    user : [],\n    boards : ['Board', 'UserBoardImage'],\n    sessions : ['UserBoard', 'SessionImage', 'Location']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n       // loadUser : (request, session) => dispatch( request.getOne({id :session.user.id , withs : withs.user, onSuccess : (data)=>{ return UserLoaded(data)}})),\n        loadBoards: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.boards, onSuccess : (data)=>{ return UserBoardsLoaded(data)}})),\n        loadSessions: (request, session) => dispatch( request.get({wheres : {user_id : session.user.id }, orderBy : 'created_at_DESC', withs : withs.sessions, onSuccess : (data)=>{return UserSessionsLoaded(data)}})),\n    };\n  };\n\nclass UserDashboard extends React.Component{\n\n    componentDidMount() {\n        if (this.props.session.isLoggedIn) {\n            //this.props.loadUser(new UserRequests(this.props.session), this.props.session );\n            this.props.loadBoards(new UserBoardRequests(this.props.session), this.props.session );\n            this.props.loadSessions(new UserSessionRequests(this.props.session), this.props.session );\n        }\n    }\n     \n    render() {\n        const { user_sessions, boards } = this.props;\n        return (\n           <MainContainer>\n                <div className=\"row\">\n                    <div className=\"container card card-lg mx-auto\">\n                        <div className=\"card-title\">\n                        </div>\n                        <div className=\"card-text dashboard-boxes\">\n                                <div className=\"container row\">\n                                    \n                                    <div className=\"col-md-10 row\">\n                                        <div className=\"col-md-12\"><ProfileCard /></div>\n                                        <div className=\"col-md-6\">\n                                            <h5>Latest Sessions</h5>\n                                            {\n                                                user_sessions && user_sessions.reduce((mappedArray, session, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                       \n                                                                <SessionCard session={session} key={session.id} />\n                                                              \n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                        <h5>Newest Boards</h5>\n                                            {\n                                                boards && boards.reduce((mappedArray, board, index) => {                           \n                                                        if (index < DASHBOARD_LIST_LIMIT) { \n                                                            mappedArray.push(\n                                                                <BoardCard board={board} key={board.id}/>\n                                                            );\n                                                        }                                                  \n                                                        return mappedArray;\n                                                    }, [])\n                                            }                              \n                                        </div>\n                                </div>\n                                <div className=\"col-md-2\">\n                                    <div className=\"index-sidecard\"><Report/></div>\n                                    <div className=\"index-sidecard\"><NearestSpots /></div>\n                                 </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainContainer>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps )(UserDashboard)\n\n// <link href=\"//www.surf-forecast.com/stylesheets/feed.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div id=\"wf-weatherfeed\"><iframe  allowtransparency=\"true\" height=\"272\" width=\"469\" src=\"//www.surf-forecast.com/breaks/Hollyoake/forecasts/feed/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"><p>Your browser does not support iframes.</p></iframe><div id=\"wf-link\"><a href=\"https://www.surf-forecast.com/\"><img alt=\"Surf Forecast\" src=\"//www.surf-forecast.com/images/feed/surflogo-150.jpg\"/></a><p id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">Hollyoake</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Hollyoake\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</p><div></div></div></div>\n                                  ","import React, {Component} from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport { createField, fieldPresets } from 'react-advanced-form'\n\n \nconst MY_API_KEY = \"AIzaSyBaaD_720jqJaoIBsQib_N79Q5_iciLRBc\" // fake\n \nclass Location extends Component {\n    state = {\n        search: \"\",\n        value: \"\",\n        location_id : \"\",\n        is_editing : false\n    }\n \n    handleInputChange = e => {\n        this.setState({search: e.target.value, value: e.target.value, is_editing : true}) \n    }\n \n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n       console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\n        this.setState({\n            search: \"\",\n            value: geocodedPrediction.formatted_address,\n            location_id : geocodedPrediction.place_id\n        })\n        this.props.onChange('location_id', geocodedPrediction.place_id);\n        this.setState({is_editing : false});\n    }\n \n    handleNoResult = () => {\n        console.log(\"No results for \", this.state.search)\n    }\n \n    handleStatusUpdate = status => {\n     // this.setState({is_editing : true});\n        console.log('key status is', status)\n    }\n\n    onBlur = (e)=>\n    {\n      \n      if(this.state.is_editing){\n        console.log('blur', e)\n        this.setState({\n          value: '',\n          is_editing : false\n        })\n      }\n    }\n \n    render() {\n      //if(this.props.disable && this.props.disable === true){\n        //return  <div className=\"sc-ifAKCX\">{this.props.placeholder}</div>\n     // }\n        const {search, value} = this.state\n        const { fieldProps, fieldState, id, name, label, hint } = this.props\n    \n        const {\n          touched,\n          pristine,\n          required,\n          validating,\n          validatedSync,\n          validatedAsync,\n          valid,\n          validSync,\n          validAsync,\n          invalid,\n          errors,\n        } = fieldState\n    \n        const inputClassNames = [\n          'form-control',\n          touched && 'is-touched',\n          pristine && 'is-pristine',\n          validating && 'is-validating',\n          validatedSync && 'validated-sync',\n          validatedAsync && 'validated-async',\n          valid && 'is-valid',\n          validSync && 'valid-sync',\n          validAsync && 'valid-async',\n          invalid && 'is-invalid',\n          'google-locations-input',\n          'sc-EHOje fVJbnH'\n        ]\n          .filter(Boolean)\n          .join(' ')\n    \n          const inputProps = {\n            ...fieldProps,\n            className: inputClassNames,\n            autoComplete: \"off\"\n          };\n    \n        const wrapperClass = !this.props.display ? \"sc-bxivhb\" : \"sc-bxivhb d-none\";\n    \n        return (\n          <div className={wrapperClass}>\n            {label && (\n              <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n                {label}\n                {required && ' *'}\n              </label>\n            )}\n            <div className=\"sc-ifAKCX\">\n            <ReactGoogleMapLoader\n                params={{\n                    key: MY_API_KEY,\n                    libraries: \"places,geocode\",\n                }}\n                render={googleMaps =>\n                    googleMaps && (\n                        <ReactGooglePlacesSuggest\n                            googleMaps={googleMaps}\n                            autocompletionRequest={{\n                                input: search,\n                                //types: ['(route)']\n                                // Optional options\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n                            }}\n                            // Optional props\n                            onNoResult={this.handleNoResult}\n                            onSelectSuggest={this.handleSelectSuggest}\n                            onStatusUpdate={this.handleStatusUpdate}\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n                            customRender={prediction => (\n                                <div className=\"customWrapper\">\n                                    {this.locRender(prediction)}\n                                </div>\n                            )}\n                        >\n                            <input\n                                {...inputProps}\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                value={value}\n                                onBlur={this.onBlur}\n                                onChange={this.handleInputChange}\n                            />\n                        </ReactGooglePlacesSuggest>\n                    )\n                }\n            />\n       </div>\n\n\n{hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n{errors &&\n  errors.map((error, index) => (\n    <div key={index} className=\"invalid-feedback\">\n      {error}\n    </div>\n  ))}\n</div>\n)\n}\nlocRender = (prediction)=>{\n  console.log(prediction.types);\n  return prediction.types.indexOf(\"route\") !== -1\n  ? prediction.description\n  : null}\n}\n\nexport default createField(fieldPresets.input)(Location)","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport Location from \"./../../form/Location\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport moment from \"moment\";\nimport { loadUserBoards, clearUserBoards } from \"./../../../actions/user_board\";\nimport { refresh } from \"./../../../lib/utils/cognito\";\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    boards: state.user_boards,\n    user_sessions: state.user_sessions,\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n    clearBoards: () => dispatch(clearUserBoards()),\n  };\n};\n\nclass SessionForm extends React.Component {\n  constructor(props) {\n    refresh(props.session.user.id);\n    super(props);\n    this.defaultName = moment().format(\"MMMM D YYYY, h:mm a\");\n    this.state = { show: false, pictures: props.pictures, location_id: \"\" };\n  }\n\n  onChange = (propertyName, newValue) => {\n    const data = [];\n    data[propertyName] = newValue;\n    this.setState({\n      ...data,\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.session.isLoggedIn) {\n      if (!this.props.boards.loaded)\n        this.props.loadBoards(this.props.session, {\n          wheres: { user_id: this.props.session.user.id },\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearBoards();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form\n          action={({ serialized, fields, form }) =>\n            this.props.processFormSubmission({\n              session: this.props.session,\n              serialized,\n              fields,\n              form,\n            })\n          }\n          rules={rules}\n          messages={messages}\n        >\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <Input\n                name=\"title\"\n                label=\"Session Name\"\n                className=\"form-control\"\n                initialValue={this.defaultName}\n                required\n              />\n              <Location\n                id=\"location_id\"\n                name=\"location_id\"\n                label=\"Where You paddling Out?\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                value={this.state.location_id}\n              />\n            </div>\n            <div className=\"col-12 clear-fix\">\n              <Input\n                type=\"hidden\"\n                name=\"user_id\"\n                value={this.props.session.user.id}\n              />\n              <span style={{float : 'right'}}>\n              <Button type=\"submit\">\n                {this.props.edit ? \"Edit Session\" : \"Add Session\"}\n              </Button>\n              </span>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SessionForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormCard} from './../layout/FormCard';\nimport SessionForm  from './forms/SessionForm';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {createUserSession, UserSessionCreatedCleared } from './../../actions/user_session';\n\nconst mapStateToProps = state => {\n    return { session: state.session, boards:state.user_boards, user_sessions : state.user_sessions }\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n        createSession :  (session, params) => dispatch(createUserSession(session, params)),\n        clearCreatedSession : ()=> dispatch( UserSessionCreatedCleared() )\n    }\n  };\n  const TITLE = 'Create A Session';\n\nclass Create extends React.Component{\n\n    constructor(props ) {\n        super(props);\n        this.state = {\n            values: [],\n            loading: false,\n            submitSuccess: false,\n            submitFail: false,\n            errorMessage : null,\n            images : [],\n            show : false,\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            images : this.state.images.concat(pictureFiles)\n          });\n    }\n  \n    componentDidMount(){\n        if (!this.props.session.isLoggedIn) {\n            this.props.onSubmissionComplete()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(this.props.noUpdate) return;\n        if ((prevProps.user_sessions.data.length !== this.props.user_sessions.data.length)\n        && this.props.user_sessions.created) {\n            this.setState({ submitSuccess : true })\n            setTimeout(() => {\n                if(this.props.onSubmissionComplete)\n                {\n                    const id = this.props.user_sessions.created.id;\n                    this.props.clearCreatedSession();\n                    this.props.onSubmissionComplete(id)\n                }else{\n                    this.props.history.push('/board');\n                }\n            }, 1500)\n        }\n    }\n\n    processFormSubmission = ({ serialized, fields, form})=> {\n        const {session, createSession} = this.props;\n        const { images } = this.state;\n        return new Promise(function(resolve, reject){\n            if (session.isLoggedIn ) {\n                const formData = SessionRequests.createFormRequest(serialized);\n                images.forEach((file, i) => {\n                    formData.append('photo', file)\n                })\n                createSession(session, {data : formData});\n                resolve(formData);\n            }else{\n                reject('user not logged in ');\n            }\n        });\n    }\n\n    returnToIndex = e => {\n        this.props.history.push('/user/dashboard');\n    }\n\n    render() {\n        const { submitSuccess, submitFail, loading, errorMessage, images} = this.state;\n        return (\n                <FormCard returnToIndex={this.props.close}>\n                    <div className=\"col-md-12 row \">\n                        <div className=\"col-md-12 \">\n                            <h2>{TITLE}</h2>\n                            {!submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                Fill the form below to create a new session\n                            </div>\n                            )}\n                            {submitSuccess && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                The form was successfully submitted!\n                            </div>\n                            )}\n                            {submitFail && (\n                            <div className=\"alert alert-info\" role=\"alert\">\n                                { errorMessage }\n                            </div>\n                            )}    \n                        </div>\n                        <div className=\"col-md-12\">           \n                            <SessionForm key=\"session_form\" session={this.state.session} processFormSubmission={this.processFormSubmission} loading={loading}  boards={this.props.boards} onDrop={this.onDrop} />\n                        </div>\n                    </div>\n                </FormCard>\n          \n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(Create)\n","import * as React from 'react';\nimport './css/Modal.css'\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    return (\n      <div className={showHideClassName}>\n        <section className='modal-main'>\n          {children}\n        </section>\n      </div>\n    );\n  };\n  export default Modal;\n\n  /**\n   *           <button\n            onClick={handleClose}\n          >\n            Close\n          </button>\n   */","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"./../../css/Elastic.css\";\nimport React, { Component } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { connect } from \"react-redux\";\nimport elasticConfig from './../../config/elastic';\nimport { Link } from \"react-router-dom\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport SessionCard from \"./SessionCard\";\nimport {\n  loadUserSessions,\n  deleteUserSession,\n  UserSessionsCleared,\n} from \"./../../actions/user_session\";\nimport Create from \"./Create\";\nimport Modal from \"./../layout/Modal\";\nimport { Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport NearestSpots from \"./../reports/surfline/NearestSpots\";\nimport Report from \"./../reports/stormglass/Report\";\nimport {\n  ReactiveBase,\n  MultiList,\n  SelectedFilters,\n  ReactiveList,\n  StateProvider,\n} from \"@appbaseio/reactivesearch\";\n\nconst DEFAULT_SORT = \"id_DESC\";\nconst DEFAULT_SHOW = 8;\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    sessions: state.user_sessions.data\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    loadSessions: (session, params) => dispatch(loadUserSessions(session, params)),\n    deleteSession: (session, id) => dispatch(deleteUserSession(session, id)),\n    clearSessions: () => dispatch(UserSessionsCleared()),\n  };\n};\n\nconst relations = {\n  user_session: [\"UserBoard\", \"Location\", \"SessionImage\"],\n};\n\nclass SessionIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,//whether modal is showing or not\n      selectedSortOrder: DEFAULT_SORT,\n      showAll: 0,//whether or not we are showing user + public sessiions\n      esFilters: []//an array of filters to be added to any ES queries\n    };\n    this.deleteSession = this.deleteSession.bind(this);\n    this.editSession = this.editSession.bind(this);\n    this.viewSession = this.viewSession.bind(this);\n  }\n\n  componentDidMount() {\n    //set the initial scope to private\n    this.setScope({nextValue : 0});\n  }\n\n  componentWillUnmount() {\n    this.props.clearSessions();\n  }\n\n  deleteSession(id) {\n    confirmAlert({\n      title: \"Confirm To Delete\",\n      message: \"Are you sure you want to delete this session?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.props.deleteSession(this.props.session, id);\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  }\n\n  editSession(sessionId) {\n    this.props.history.push(\"/session/edit/\" + sessionId);\n  }\n\n  viewSession(sessionId) {\n    this.props.history.push(\"/session/\" + sessionId);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = (e = false) => {\n    this.setState({ show: false });\n  };\n\n  onSortUpdated = (prevQuery, nextQuery) => {\n    let sortString = \"\";\n    for (const [key, value] of Object.entries(nextQuery.sort[0])) {\n      sortString = `${key}_${value.order}`;\n    }\n    this.setState({ selectedSortOrder: sortString });\n  };\n\n  elasticResultHandler = (e) => {\n    const ids = [];\n    e.data.forEach((element) => {\n      ids.push(element.id);\n    });\n    if (ids.length) {\n      this.props.loadSessions(this.props.session, {\n        orderBy: this.state.selectedSortOrder,\n        wheres: { in: ids.join(\",\") },\n        withs: relations.user_session,\n        limit: DEFAULT_SHOW,\n      });\n    }\n  };\n  \n  setScope = (e) => {\n    const scopes = [{ match: { user_id: this.props.session.user.id } }];\n    if (e.nextValue && parseInt(e.nextValue) === 1) {\n      const isPublic = { match: { is_public: 1 } };\n      scopes.push(isPublic);\n    }\n    this.setState({ esFilters: scopes, showAll: parseInt(e.nextValue) });\n  };\n\n  render() {\n    const { sessions } = this.props;\n\n    return (\n      <MainContainer>\n        <ReactiveBase app=\"sessions\" url={elasticConfig.host} credentials={elasticConfig.credentials}>\n          <div className=\"row\">\n            <div className=\"container card card-lg mx-auto\">\n              <div className=\"card-title\">\n                <h2>\n                  Sessions\n                  <Link\n                    to=\"#\"\n                    onClick={this.showModal}\n                    className=\"btn btn-sm btn-outline-secondary float-right\"\n                  >\n                    Create New Session\n                  </Link>\n                </h2>\n              </div>\n              <div className=\"card-text\">\n                <div className=\"container\">\n                  <div className=\"row col-12\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col-10\">\n                      <span className=\"float-right\"></span>\n                    </div>\n                  </div>\n\n                  <div className=\"row col-12\">\n                    <div className=\"col-12\">\n                      <div className=\"col-3\"></div>\n                      <div className=\"col-9\">\n                        <SelectedFilters />\n                      </div>\n                    </div>\n                    <div className=\"col-3\">\n                      <div className=\"detail-line is_public_radio\">\n                        <Form>\n                          <Radio\n                            name=\"is_public\"\n                            label=\"Mine\"\n                            value=\"0\"\n                            onChange={this.setScope}\n                            checked={parseInt(this.state.showAll) === 0}\n                          />\n                          <Radio\n                            className=\"is_public_radio\"\n                            name=\"is_public\"\n                            label=\"Mine + Public\"\n                            value=\"1\"\n                            onChange={this.setScope}\n                            checked={parseInt(this.state.showAll) === 1}\n                          />\n                        </Form>\n                      </div>\n                      <div className=\"filter-widgets\" id=\"sessions\">\n                        <MultiList\n                          componentId=\"board\"\n                          dataField=\"board\"\n                          innerClass={{\n                            label: \"elastic-facet-label\",\n                            input: \"form-control\",\n                          }}\n                          title=\"Boards\"\n                          react={{\n                            and: [\"locations\"],\n                          }}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                        />\n                        <MultiList\n                          componentId=\"locations\"\n                          dataField=\"location\"\n                          title=\"Locations\"\n                          innerClass={{\n                            label: \"elastic-facet-label\",\n                          }}\n                          react={{\n                            and: [\"board\"],\n                          }}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"row\">\n                        {(!sessions || sessions.length === 0) && (\n                          <div className=\"col-12\">\n                            <h3>No Sessions found at the moment</h3>\n                          </div>\n                        )}\n                        <ReactiveList\n                          onData={this.elasticResultHandler}\n                          onQueryChange={this.onSortUpdated}\n                          defaultQuery={() => {\n                            return {\n                              query: {\n                                bool: { should: this.state.esFilters },\n                              },\n                            };\n                          }}\n                          renderResultStats={function (stats) {\n                            return (\n                              <div className=\"elastic-meta\">\n                                {stats.numberOfResults + \" Results Sorted By\"}\n                              </div>\n                            );\n                          }}\n                          className=\"col-12\"\n                          componentId=\"results\"\n                          react={{\n                            and: [\"board\", \"locations\"],\n                          }}\n                          pagination\n                          size={DEFAULT_SHOW}\n                          infiniteScroll={true}\n                          innerClass={{\n                            pagination: \"elastic-paginate\",\n                            sortOptions: \"form-control elastic-sort\",\n                          }}\n                          sortOptions={[\n                            {\n                              dataField: \"id\",\n                              sortBy: \"desc\",\n                              label: \"Newest To Oldest\",\n                            },\n                            {\n                              dataField: \"id\",\n                              sortBy: \"asc\",\n                              label: \"Oldest To Newest\",\n                            },\n                            {\n                              dataField: \"title\",\n                              sortBy: \"asc\",\n                              label: \"Title A->Z\",\n                            },\n                            {\n                              dataField: \"title\",\n                              sortBy: \"desc\",\n                              label: \"Title Z->A\",\n                            },\n                            {\n                              dataField: \"rating\",\n                              sortBy: \"asc\",\n                              label: \"Rating 1-10\",\n                            },\n                            {\n                              dataField: \"rating\",\n                              sortBy: \"desc\",\n                              label: \"Rating 10-1\",\n                            },\n                          ]}\n                          paginationAt=\"both\"\n                          render={({ data }) =>\n                            this.props.sessions &&\n                            this.props.sessions.map((session) => (\n                              <div key={session.id} className=\"col-12\">\n                                <SessionCard\n                                  session={session}\n                                  key={session.id}\n                                  deleteSession={this.deleteSession}\n                                  viewSession={this.viewSession}\n                                  editSession={this.editSession}\n                                />\n                              </div>\n                            ))\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-3\">\n                      <div className=\"index-sidecard\">\n                        <Report />\n                      </div>\n                      <div className=\"index-sidecard\">\n                        <NearestSpots />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row col-12\">\n                    <div className=\"col-6\"></div>\n                    <div className=\"col-6\">\n                      <span className=\"float-right\"></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ReactiveBase>\n        <Modal show={this.state.show}>\n          <Create\n            onSuccess={(e) => this.hideModal(e)}\n            onSubmissionComplete={this.viewSession}\n            close={this.hideModal}\n          />\n        </Modal>\n      </MainContainer>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispachToProps)(SessionIndex);\n\n","import React from \"react\";\nimport { createField, fieldPresets } from \"react-advanced-form\";\nimport Autosuggest from \"react-autosuggest\";\n\nclass TypeAheadInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || \"\",\n      suggestions: props.entity,\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    console.log(\"key\", newValue);\n    if (this.state.value !== newValue) {\n      this.setState({\n        value: newValue,\n      });\n    }\n  };\n\n  onBlur = (event) => {\n    if (this.state.value) console.log(\"blur\", event.target.value);\n    let vid = this.props.entity.find(\n      (x) => x[this.props.keyName] === event.target.value\n    );\n    this.props.setValue(this.props.name, vid ? vid.id : event.target.value);\n  };\n\n  getSuggestionValue = (suggestion) => suggestion[this.props.keyName];\n\n  renderSuggestion = (suggestion) => (\n    <div>{suggestion[this.props.keyName]}</div>\n  );\n\n  // Autosuggest will call this function every time we need to update suggestions.\n  onSuggestionsFetchRequested = ({ value, reason }) => {\n    this.setState({\n      suggestions: this.props.getSuggestions(value, reason),\n    });\n  };\n\n  // Autosuggest will call this function every time we need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  onSuggestionSelected = (\n    event,\n    { suggestion, /*suggestionValue, suggestionIndex, sectionIndex, method*/ }\n  ) => {\n    console.log(event.target);\n    this.props.setValue(this.props.name, suggestion.id);\n  };\n\n  shouldRenderSuggestions = (value) => {\n    return true;\n  };\n\n  render() {\n    const { fieldProps, fieldState, id, name, label, hint } = this.props;\n    const { value, suggestions } = this.state;\n\n    const {\n      touched,\n      pristine,\n      required,\n      validating,\n      validatedSync,\n      validatedAsync,\n      valid,\n      validSync,\n      validAsync,\n      invalid,\n      errors,\n    } = fieldState;\n\n    const inputClassNames = [\n      \"form-control\",\n      touched && \"is-touched\",\n      pristine && \"is-pristine\",\n      validating && \"is-validating\",\n      validatedSync && \"validated-sync\",\n      validatedAsync && \"validated-async\",\n      valid && \"is-valid\",\n      validSync && \"valid-sync\",\n      validAsync && \"valid-async\",\n      invalid && \"is-invalid\",\n      \"sc-EHOje fVJbnH\",\n    ]\n      .filter(Boolean)\n      .join(\" \");\n\n    const inputProps = {\n      ...fieldProps,\n      value,\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n      onFocus: () =>\n        this.onSuggestionsFetchRequested({\n          value: name,\n          reason: \"type_ahead_focused\",\n        }),\n      id: name,\n      name,\n      className: inputClassNames,\n      autoComplete: \"off\",\n    };\n\n    const wrapperClass = this.props.display\n      ? \"sc-bxivhb\"\n      : \"sc-bxivhb d-none\";\n\n    return (\n      <div className={wrapperClass}>\n        {label && (\n          <label className=\"sc-bwzfXH dybocD\" htmlFor={id || name}>\n            {label}\n            {required && \" *\"}\n          </label>\n        )}\n        <div\n          className=\"sc-ifAKCX fatWUN\"\n          style={{ maxHeight: 200, overflow: \"auto\" }}\n        >\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={this.onSuggestionSelected}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            shouldRenderSuggestions={this.shouldRenderSuggestions}\n            //focusInputOnSuggestionClick={false}\n            //alwaysRenderSuggestions={true}\n          />\n        </div>\n\n        {hint && <small className=\"form-text text-muted\">{hint}</small>}\n\n        {errors &&\n          errors.map((error, index) => (\n            <div key={index} className=\"invalid-feedback\">\n              {error}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default createField(fieldPresets.input)(TypeAheadInput);\n","export default {\n    name: {\n      title: {\n        matches: ({ value, get }) => {\n          return true;\n        }\n      }\n    }\n  };\n","export default {\n    generic: {\n      missing: 'Please provide the required field',\n      invalid: 'The value you have provided is invalid',\n    },\n    name: {\n      title: {\n        missing: 'Please Provide a Name for the session',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n      board_id: {\n        missing: 'Please Choose or Add A Board Model',\n        rule: {\n            matches: 'The passwords do not match',\n        },\n      },\n    },\n  }","import BaseRequest from './BaseRequest';\n\nclass ManufacturerRequests extends BaseRequest{\n    REQUEST_TYPE = 'MANUFACTURER';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/manufacturer';\n    }\n}\nexport default ManufacturerRequests;","import { SHAPERS_LOADED } from \"./types\";\nimport ManufacturerRequests from './../requests/ManufacturerRequests';\n\n\nexport const ShapersLoaded = data => ({\n    type: SHAPERS_LOADED,\n    payload: data\n  });\n\n\n\n  export const loadShapers= ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return ShapersLoaded(data)} }}\n      dispatch(\n        new ManufacturerRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import BaseRequest from './BaseRequest';\n\nclass BoardRequests extends BaseRequest{\n    REQUEST_TYPE = 'BOARD';\n    constructor( session ){\n        super(session);\n        this.endpoint = '/api/board';\n    }\n}\nexport default BoardRequests;","import { BOARDS_LOADED } from \"./types\";\nimport BoardRequests from './../requests/BoardRequests';\n\nexport const BoardsLoaded = data => ({\n    type: BOARDS_LOADED,\n    payload: data\n  });\n\n  export const loadBoards = ( session, args )=>\n  {\n    return function(dispatch, getState)\n    {\n      const params = {...args, ...{onSuccess : (data)=>{ return BoardsLoaded(data)} }}\n      dispatch(\n        new BoardRequests(session).get(params)\n      )\n    }\n  }\n\n\n\n  \n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"react-advanced-form\";\nimport { Input, Button } from \"react-advanced-form-addons\";\nimport TypeAheadInput from \"./../../form/TypeAheadInput\";\nimport rules from \"./validation-rules\";\nimport messages from \"./validation-messages\";\nimport ImageUploader from \"react-images-upload\";\nimport { loadShapers } from \"./../../../actions/shaper\";\nimport { loadBoards } from \"./../../../actions/board\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tboards: state.boards.data,\n\t\tshapers: state.shapers.data,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadShapers: (session, params) => dispatch(loadShapers(session, params)),\n\t\tloadBoards: (session, params) => dispatch(loadBoards(session, params)),\n\t};\n};\n\nconst relations = {\n\tshapers: [\"Board\"],\n\tboards: [\"Manufacturer\"],\n};\n\nclass UserBoardForm extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tboard_id: null,\n\t\t\tmanufacturer_id: null,\n\t\t};\n\t}\n\n\tonChange = (propertyName, newValue) => {\n\t\tconst data = [];\n\t\tdata[propertyName] = newValue;\n\t\tthis.setState({\n\t\t\t...data,\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tif (!this.props.boards.length)\n\t\t\t\tthis.props.loadBoards(this.props.session, {\n\t\t\t\t\tlimit: 1000,\n\t\t\t\t\twiths: relations.boards,\n\t\t\t\t});\n\t\t\tif (!this.props.shapers.length)\n\t\t\t\tthis.props.loadShapers(this.props.session, {\n\t\t\t\t\tlimit: 1000,\n\t\t\t\t\twiths: relations.shapers,\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.props.history.push(\"/\");\n\t\t}\n\t}\n\n\tgetBoardSuggestions = (value) => {\n\t\tif (!value) {\n\t\t\treturn this.props.boards.filter(\n\t\t\t\t(entity) => entity.manufacturer_id === this.state.manufacturer_id\n\t\t\t);\n\t\t}\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.boards.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.model.toLowerCase().slice(0, inputLength) === inputValue &&\n\t\t\t\t\t\tentity.manufacturer_id === this.state.manufacturer_id\n\t\t\t  );\n\t};\n\n\tgetShaperSuggestions = (value) => {\n\t\tif (!value) return this.props.shapers;\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.shapers.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.name.toLowerCase().slice(0, inputLength) === inputValue\n\t\t\t  );\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Form\n\t\t\t\t\taction={({ serialized, fields, form }) =>\n\t\t\t\t\t\tthis.props.processFormSubmission({\n\t\t\t\t\t\t\tsession: this.props.session,\n\t\t\t\t\t\t\tserialized,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\tform,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\trules={rules}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12 \">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\tentity={this.props.shapers}\n\t\t\t\t\t\t\t\tname=\"manufacturer_id\"\n\t\t\t\t\t\t\t\tkeyName=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"choose a shaper\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Unknown\"\n\t\t\t\t\t\t\t\tvalue={this.state.manufacturer_id}\n\t\t\t\t\t\t\t\tsetValue={this.onChange}\n\t\t\t\t\t\t\t\tgetSuggestions={this.getShaperSuggestions}\n\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\tentity={this.props.boards}\n\t\t\t\t\t\t\t\tname=\"board_id\"\n\t\t\t\t\t\t\t\tkeyName=\"model\"\n\t\t\t\t\t\t\t\tlabel=\"choose a model\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"choose a board\"\n\t\t\t\t\t\t\t\tvalue={this.state.board_id}\n\t\t\t\t\t\t\t\tsetValue={this.onChange}\n\t\t\t\t\t\t\t\tgetSuggestions={this.getBoardSuggestions}\n\t\t\t\t\t\t\t\tdisplay={this.state.manufacturer_id !== null}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ImageUploader\n\t\t\t\t\t\t\t\twithIcon={false}\n\t\t\t\t\t\t\t\tbuttonText=\"Choose images\"\n\t\t\t\t\t\t\t\tonChange={this.props.onDrop}\n\t\t\t\t\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n\t\t\t\t\t\t\t\tmaxFileSize={5242880}\n\t\t\t\t\t\t\t\twithPreview={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\tname=\"user_id\"\n\t\t\t\t\t\t\t\tvalue={this.props.session.user.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\t{this.props.edit ? \"Edit Board\" : \"Add Board\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(UserBoardForm);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormCard } from \"./../layout/FormCard\";\nimport UserBoardForm from \"./forms/UserBoardForm\";\nimport { withRouter } from \"react-router-dom\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\nimport {\n\tcreateUserBoard,\n\tUserBoardCreatedCleared,\n} from \"./../../actions/user_board\";\n\nconst TITLE = \"Create Board\";\n\nconst mapStateToProps = (state) => {\n\treturn { session: state.session, user_boards: state.user_boards };\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tcreateUserBoard: (session, params) => dispatch(createUserBoard(session, params)),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nclass CreateUserBoard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsubmitSuccess: false,\n\t\t\tsubmitFail: false,\n\t\t\terrorMessage: null,\n\t\t\timages: [],\n\t\t};\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\n\tonDrop(pictureFiles, pictureDataURLs) {\n\t\tthis.setState({\n\t\t\timages: this.state.images.concat(pictureFiles),\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (this.props.noUpdate) return;\n\t\tif (\n\t\t\tprevProps.user_boards.data.length !==\n\t\t\t\tthis.props.user_boards.data.length &&\n\t\t\tthis.props.user_boards.created\n\t\t) {\n\t\t\tthis.setState({ submitSuccess: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.props.onSubmissionComplete) {\n\t\t\t\t\tconst id = this.props.user_boards.created.id;\n\n\t\t\t\t\tthis.props.onSubmissionComplete(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.history.push(\"/board\");\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t}\n\t}\n\n\tprocessFormSubmission = ({ serialized, fields, form }) => {\n\t\tconst { session, createUserBoard } = this.props;\n\t\tconst { images } = this.state;\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (session.isLoggedIn) {\n\t\t\t\tconst formData = UserBoardRequests.createFormRequest(serialized);\n\t\t\t\timages.forEach((file, i) => {\n\t\t\t\t\tformData.append(\"photo\", file);\n\t\t\t\t});\n\t\t\t\tcreateUserBoard(session, { data: formData });\n\t\t\t\tresolve(formData);\n\t\t\t} else {\n\t\t\t\treject(\"user not logged in \");\n\t\t\t}\n\t\t});\n\t};\n\n\thandleInputChanges = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { submitSuccess, submitFail, loading, errorMessage } = this.state;\n\t\treturn (\n\t\t\t<FormCard returnToIndex={this.props.close}>\n\t\t\t\t<div className=\"col-md-12 \">\n\t\t\t\t\t<h2>{TITLE}</h2>\n\t\t\t\t\t{!submitSuccess && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\tFill the form below to create a new post\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{submitSuccess && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\tThe form was successfully submitted!\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{submitFail && (\n\t\t\t\t\t\t<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<UserBoardForm\n\t\t\t\t\t\tboard={this.state.board}\n\t\t\t\t\t\thandleInputChanges={this.handleInputChanges}\n\t\t\t\t\t\tprocessFormSubmission={this.processFormSubmission}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tonDrop={this.onDrop}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</FormCard>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispachToProps\n)(withRouter(CreateUserBoard));\n","import \"./../css/BoardPicker.css\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport InlineEdit, { InputType } from \"riec\";\nimport {\n\tloadUserBoard,\n\tUserBoardCreatedCleared,\n} from \"./../../../actions/user_board\";\nimport { s3Conf } from \"./../../../config/s3\";\nimport Modal from \"./../../layout/Modal\";\nimport CreateUserBoard from \"./../CreateUserBoard\";\nimport StarBar from \"./../../layout/StarBar\";\nimport { withRouter } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tcurrent_session: state.user_sessions.selected,\n\t\tboard_created: state.user_boards.created,\n\t\tuser_board: state.user_boards.selected,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nclass BoardPicker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselect: { id: 0, name: \"No Board Selected\" },\n\t\t\tselectOptions: [],\n\t\t\tdefaultImage:\n\t\t\t\t\"https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg\",\n\t\t\tboard_id: props.board_id,\n\t\t\tselectedBoard: {},\n\t\t\tshow: false,\n\t\t};\n\t\tthis.hideModal = this.hideModal.bind(this);\n\t\tthis.showModal = this.showModal.bind(this);\n\t}\n\n\tshowModal = () => {\n\t\tthis.setState({ show: true });\n\t};\n\n\thideModal = (e = false) => {\n\t\tthis.setState({ show: false });\n\t};\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tthis.setState({\n\t\t\t\tboard_id: this.props.board_id,\n\t\t\t\tselectedBoard: this.props.current_session.UserBoard,\n\t\t\t});\n\t\t\tif (this.props.current_session.board_id)\n\t\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\t\tid: this.props.current_session.board_id,\n\t\t\t\t\twiths: [\"UserBoardImage\"],\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (\n\t\t\tprevProps.current_session.board_id !== this.props.board_id ||\n\t\t\tthis.props.board_created !== false\n\t\t) {\n\t\t\tconst board_id = this.props.board_created\n\t\t\t\t? this.props.board_created.id\n\t\t\t\t: this.props.board_id;\n\t\t\tthis.props.clearCreatedBoard();\n\t\t\t//this.setState({ board_id : board_id})\n\t\t\tthis.props.onChange(board_id);\n\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\tid: board_id,\n\t\t\t\twiths: [\"UserBoardImage\"],\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst session = this.props.current_session;\n\t\tconst isOwner =\n\t\t\tthis.props.session.user.id === this.props.user_board.user_id;\n\t\tconst boardImage =\n\t\t\tthis.props.user_board &&\n\t\t\tthis.props.user_board.UserBoardImages &&\n\t\t\tthis.props.user_board.UserBoardImages.length\n\t\t\t\t? s3Conf.root + this.props.user_board.UserBoardImages[0].name\n\t\t\t\t: this.state.defaultImage;\n\t\treturn (\n\t\t\t<div className={this.props.wrapperClass + \" \"}>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<strong>Board:</strong>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"col-5\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tthis.props.history.push(\"/board/\" + session.board_id)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsrc={boardImage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tisOwner\n\t\t\t\t\t\t\t\t\t\t? \"board-select board-picker-line row\"\n\t\t\t\t\t\t\t\t\t\t: \"board-select-disabled board-picker-line row\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InlineEdit\n\t\t\t\t\t\t\t\t\ttype={InputType.Select}\n\t\t\t\t\t\t\t\t\tvalue={this.props.user_board.name || \"Select A Board\"}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.props.user_board.name}\n\t\t\t\t\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\t\t\t\t\toptions={this.props.boards}\n\t\t\t\t\t\t\t\t\tvalueKey=\"id\"\n\t\t\t\t\t\t\t\t\tlabelKey=\"name\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\tisDisabled={isOwner ? false : true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{this.props.user_board && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\t<StarBar\n\t\t\t\t\t\t\t\t\t\tstars={this.props.user_board.rating}\n\t\t\t\t\t\t\t\t\t\tonClick={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\tstatic={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.props.user_board && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\tSize:{this.props.user_board.size}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isOwner && (\n\t\t\t\t\t\t\t\t<div className=\"board-picker-line\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-sm\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.showModal}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNew Board\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Modal show={this.state.show}>\n\t\t\t\t\t\t\t<CreateUserBoard\n\t\t\t\t\t\t\t\tonSuccess={(e) => this.hideModal(e)}\n\t\t\t\t\t\t\t\tonSubmissionComplete={this.hideModal}\n\t\t\t\t\t\t\t\tclose={this.hideModal}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispachToProps\n)(withRouter(BoardPicker));\n","import './css/Session.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-advanced-form';\nimport {FormCard} from './../layout/FormCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RIEInput, RIETextArea} from '@attently/riek';\nimport DatePicker from \"react-datepicker\";\nimport ImageUploader from 'react-images-upload';\nimport ImageGallery from 'react-image-gallery';\nimport Location from './../form/Location';\nimport MainContainer from './../layout/MainContainer';\nimport StarBar from './../layout/StarBar';\nimport SessionRequests from './../../requests/SessionRequests';\nimport {loadUserBoards} from './../../actions/user_board';\nimport {UserSessionCleared,loadUserSession, updateUserSession, loadUserSessionImages, addUserSessionImages, deleteUserSessionImage} from './../../actions/user_session';\nimport noaaForecaster from 'noaa-forecasts';\nimport BoardPicker from './../board/forms/BoardPicker';\nimport { Radio} from 'react-advanced-form-addons';\nimport { FacebookProvider, Share, Comments, Page } from 'react-facebook';\nimport fbConfig from './../../config/fb'\nrequire('dotenv').config();\n\nconst mapStateToProps = state => {\n    return { \n        session: state.session, \n        current_session : state.user_sessions.selected, \n        boards : state.user_boards.data, \n        session_images : state.session_images, \n        api:state.api \n    }\n  }\n\n  const withs = {\n    session : ['Location', 'UserBoard.UserBoardImage']\n  }\n\n  const mapDispachToProps = dispatch => {\n    return {\n      loadSession : (session, params)=>dispatch(loadUserSession(session, params)),\n      loadBoards: (session, params) => dispatch(loadUserBoards(session, params)),\n      clearSession : ()=>dispatch(UserSessionCleared()),\n      editUserSession: (session, params) => dispatch(updateUserSession(session, params)), \n      loadSessionImages: (session, params) => dispatch(loadUserSessionImages(session, params)), \n      addImages : (session, params) => dispatch(addUserSessionImages(session, params)), \n      deleteSessionImage: (session, id) => dispatch( deleteUserSessionImage (session, id))\n    };\n  };\n\nclass SessionView extends Component {\n\n    constructor(props)\n    {\n        super(props)\n        this.UserSessionRequest = new SessionRequests(props.session);\n        \n        this.state = { \n            boards : [], \n            select: {id : 0, name : 'No Board Selected'},\n            selectedImage : null,\n            selectOptions: [],\n            uploaderInstance : 1,\n            imageIndex : 0,\n            date: '',\n            is_public : null,\n        };\n        this.onDrop = this.onDrop.bind(this);\n    \n    }\n\n    componentDidMount(){\n        if (this.props.session.isLoggedIn) {\n            this.props.loadBoards(this.props.session, {orderBy: 'name_ASC', limit:50, wheres : {user_id : this.props.session.user.id }} );\n            this.props.loadSession(this.props.session, {id : this.props.match.params.id,  withs : withs.session});\n            this.props.loadSessionImages(this.props.session, {wheres : {session_id : this.props.match.params.id }} );\n        }\n       else{\n            this.props.history.push('/session');\n       }\n    }\n\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        if(!pictureFiles.length) return;\n        const formData = SessionRequests.createFormRequest({session_id : this.props.current_session.id, user_id : this.props.session.user.id});\n        pictureFiles.forEach((file, i) => {\n            formData.append('photo', file)\n        })\n        this.props.addImages(this.props.session, { data : formData});\n        this.setState({uploaderInstance : this.state.uploaderInstance + 1})\n      \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n            ((this.props.boards.length && !this.state.selectOptions.length && this.props.current_session.id)\n            || (prevProps.boards.length !== this.props.boards.length)) && this.setSelectedBoard();\n    }\n\n    setSelectedBoard = () =>\n    {\n        const boardOptions = [{id : 0, name : 'select'}];\n        let select = this.state.select\n        this.props.boards.map((obj) => {\n            let board = { id : obj.id , name : obj.name};\n            if(obj.id === this.props.current_session.board_id) select = board;\n            return boardOptions.push(board) \n        })\n        this.setState({selectOptions: boardOptions, select : select})\n    }\n\n    componentWillUnmount(){\n        this.props.clearSession();\n    }\n\n    returnToIndex = e =>\n    {\n        this.props.history.length > 1 ?  this.props.history.goBack() : this.props.history.push('/user/dashboard');\n    }\n\n    submitUpdate = ( data ) =>\n    {\n        this.props.editUserSession(this.props.session ,{id : this.props.match.params.id, data : data});\n        this.setState( data );\n    }\n\n    onLocationChange = (propertyName , newValue ) => {\n        if(!newValue) return;\n        const data = [];\n        data[propertyName] = newValue;\n        this.submitUpdate({ ...data});\n      };\n\n\n    onPrivacyChange = (e)=>\n    {\n        //@totdo this double submits without keeping track of state\n        if(e.nextValue !== this.state.is_public){\n            this.setState({is_public : e.nextValue});\n            this.submitUpdate({is_public :e.nextValue })\n        }\n    }\n    \n    onBoardChange = (id) =>\n    {\n        if(!id) return;\n        this.submitUpdate({ board_id : id});\n        const idInt = parseInt(id);\n        this.state.selectOptions.map((obj) => {\n            if(obj.id === idInt ) this.setState({select : obj});\n            return true;\n        })\n    }\n\n    onImageLoad = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[0]})\n    }\n\n    onImageSelected = (e) =>\n    {\n        this.setState({selectedImage : this.props.session_images[e], imageIndex : e})\n    }\n\n    deleteImage= (e) =>\n    {\n        new Promise ((resolve, reject)=>{\n            resolve(this.props.deleteSessionImage(this.props.session, this.state.selectedImage.id))\n        })\n        .then(e=>{\n            const newIndex = this.state.imageIndex === 0 ? 0 : this.state.imageIndex -1;\n            this.setState( {imageIndex : newIndex, selectedImage : this.props.session_images[newIndex]})\n        });\n    }\n\n    onDateChange = date => {\n        let formattedDate = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        this.submitUpdate({session_date : formattedDate})\n        this.setState({date : date})\n      };\n\n    render() {\n        const session = this.props.current_session;\n        const isOwner = this.props.session.user.id === session.user_id;\n        return (\n            <MainContainer>\n              <FacebookProvider appId={fbConfig.api_key}>\n                <FormCard returnToIndex={this.returnToIndex}>\n                  <Form>\n                    <div className=\"container\">\n                      <div className=\"details row\">\n                        <h3 className=\"col-12 session-title\">\n                          <RIEInput\n                            required={false}\n                            value={session.title || \"\"}\n                            defaultValue={session.title}\n                            change={this.submitUpdate}\n                            propName=\"title\"\n                            editProps={{ disabled: !isOwner }}\n                          />\n                        </h3>\n                        <div className=\"col-12\">\n                          <StarBar\n                            stars={session.rating}\n                            onClick={this.submitUpdate}\n                            size=\"1x\"\n                            static={!isOwner}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"preview col-7\">\n                          { isOwner &&\n                          <div className=\"clearfix\">\n                              <ImageUploader\n                                key={this.state.uploaderInstance}\n                                withIcon={false}\n                                buttonText=\"Add Images!\"\n                                onChange={this.onDrop}\n                                imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n                                maxFileSize={5242880}\n                                withPreview={false}\n                                withLabel={false}\n                                buttonClassName='btn btn-link'\n                              />\n                          </div>\n                          }\n                          <div>\n                            <ImageGallery\n                              items={this.props.session_images}\n                              showBullets={true}\n                              showIndex={true}\n                              startIndex={this.state.imageIndex}\n                              onSlide={this.onImageSelected}\n                              onImageLoad={this.onImageLoad}\n                              thumbnailPosition={\"bottom\"}\n                            />\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"card-text\">\n                              <FontAwesomeIcon\n                                size=\"lg\"\n                                alt=\"delete user\"\n                                style={{\n                                  marginLeft: \".5em\",\n                                  cursor: \"pointer\",\n                                  color: \"red\",\n                                }}\n                                icon={faTrash}\n                                onClick={this.deleteImage}\n                                value={this.state.imageIndex}\n                              />\n                              <Page href={window.location.href} tabs=\"timeline\" />\n                              <Comments href={window.location.href} />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"details col-5\">\n                          <div className=\"container\">\n                            <div className=\"detail-line\">\n                              { isOwner &&\n                              <div className=\"detail-line\">\n                                <div>\n                                  <strong>Privacy:</strong>\n                                </div>\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Private\"\n                                  value=\"0\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.id && session.is_public !== true}\n                                />\n                                <Radio\n                                  name=\"is_public\"\n                                  label=\"Public\"\n                                  value=\"1\"\n                                  onChange={this.onPrivacyChange}\n                                  checked={session.is_public && session.is_public === true}\n                                />\n                              </div>\n                              }\n                              <div>\n                                <strong>Location:</strong>\n                              </div>\n                              <Location\n                                disabled={!isOwner}\n                                id=\"location_id\"\n                                name=\"location_id\"\n                                className=\"form-control\"\n                                onChange={this.onLocationChange}\n                                onBlur={this.onLocationBlur}\n                                value={session.location_id}\n                                disable={!isOwner}\n                                placeholder={\n                                  session.Location\n                                    ? session.Location.formatted_address\n                                    : \"No Location Specified\"\n                                }\n                              />\n                            </div>\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Date:</strong>\n                              </div>\n                              <DatePicker\n                                disabled={!isOwner}\n                                selected={this.state.date}\n                                className=\"date-picker-input form-control\"\n                                onChange={this.onDateChange} //only when value has changed\n                                showTimeSelect\n                                dateFormat={\"MMMM d yyyy h:mm a\"}\n                                placeholderText={moment(session.session_date).format(\n                                  \"MMMM D YYYY h:mm a\"\n                                )}\n                              />\n                            </div>\n                            <BoardPicker\n                              onChange={this.onBoardChange}\n                              boards={this.state.selectOptions}\n                              board_id={session.board_id}\n                              wrapperClass=\"row detail-line\"\n                            />\n                            <div className=\"detail-line\">\n                              <div>\n                                <strong>Notes:</strong>\n                              </div>\n                              <RIETextArea\n                                value={\n                                  session.notes || \"You have no notes for this session\"\n                                }\n                                className=\"form-control text-area\"\n                                defaultValue={session.notes}\n                                change={this.submitUpdate}\n                                propName=\"notes\"\n                                validate={_.isString}\n                                editProps={{ disabled: !isOwner }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Form>\n                </FormCard>\n              </FacebookProvider>\n            </MainContainer>\n          );\n          \n    }\n\n    loadNoaa = () =>\n    {\n        var inspect = require('util').inspect;\n        var obj = {\n            listLatLon: '38.99,-77.01 37.7833,-122.4167',\n            //product: 'time-series', // this is a default, it's not actually required\n            begin: moment().format('YYYY-MM-DDTHH:mm:ss'),\n            end: moment().add(3, 'days').format('YYYY-MM-DDTHH:mm:ss'),\n            qpf: 'qpf', // first elementInputName - Liquid Precipitation Amount\n            pop12: 'pop12' // another elementInputName - 12 hour probability of precipitation    \n            };\n            var token = 'yPMNDtzDeHIgQPxhrkzuKJHGKlzGkSQV';\n            noaaForecaster.setToken(token);\n            noaaForecaster.getForecast(obj)\n            .then(function(results) {\n                console.log(inspect(results, { colors: true, depth: Infinity }));\n            });\n    }\n}\nexport default connect(mapStateToProps, mapDispachToProps )(SessionView)","import \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"./../../css/Elastic.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport BoardCard from \"./../board/BoardCard\";\nimport {\n\tloadUserBoards,\n\tdeleteUserBoard,\n\tUserBoardsCleared,\n\tUserBoardCreatedCleared,\n} from \"./../../actions/user_board\";\nimport elasticConfig from './../../config/elastic';\nimport Modal from \"./../layout/Modal\";\nimport CreateUserBoard from \"./CreateUserBoard\";\nimport { Radio } from \"react-advanced-form-addons\";\nimport { Form } from \"react-advanced-form\";\nimport { hasSession } from \"./../../lib/utils/session\";\nimport NearestSpots from \"./../reports/surfline/NearestSpots\";\nimport Report from \"./../reports/stormglass/Report\";\nimport {\n\tReactiveBase,\n\tMultiList,\n\tSelectedFilters,\n\tReactiveList,\n\tStateProvider,\n} from \"@appbaseio/reactivesearch\";\n\nconst DEFAULT_SORT = \"created_at_DESC\";\nconst DEFAULT_SHOW = 12;\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserSession: state.session,\n\t\tboards: state.user_boards.data,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoards: (userSession, params) =>dispatch(loadUserBoards(userSession, params)),\n\t\tdeleteBoard: (userSession, id) =>dispatch(deleteUserBoard(userSession, id)),\n\t\tclearBoards: () => dispatch(UserBoardsCleared()),\n\t\tclearCreatedBoard: () => dispatch(UserBoardCreatedCleared()),\n\t};\n};\n\nconst relations = {\n\tuser_board: [\"Board.Manufacturer\", \"UserBoardImage\"],\n};\n\nclass BoardIndex extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshow: false,\n\t\t\tselectedSortOrder: DEFAULT_SORT,\n\t\t\tshowAll: 0,\n\t\t\tfilters: [{ match: { user_id: props.userSession.user.id } }],\n\t\t};\n\t\tthis.deleteBoard = this.deleteBoard.bind(this);\n\t\tthis.editBoard = this.editBoard.bind(this);\n\t\tthis.viewBoard = this.viewBoard.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\thasSession();\n\t\tif (this.props.userSession.isLoggedIn) {\n\t\t\t//this.props.loadBoards(this.props.userSession, { orderBy : DEFAULT_SORT , wheres : {user_id : this.props.userSession.user.id }, withs : relations.user_board} );\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.clearBoards();\n\t}\n\n\tdeleteBoard(id) {\n\t\tconfirmAlert({\n\t\t\ttitle: \"Confirm To Delete\",\n\t\t\tmessage: \"Are you sure you want to delete this userSession?\",\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.props.deleteBoard(this.props.userSession, id);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tonClick: () => {},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\teditBoard(boardId) {\n\t\tthis.props.history.push(\"/board/edit/\" + boardId);\n\t}\n\n\tboardCreated = (id) => {\n\t\tthis.props.clearCreatedBoard();\n\t\t//foreard user to new board details page\n\t\tthis.viewBoard(id);\n\t};\n\n\t//forwards user to board detail page\n\tviewBoard(boardId) {\n\t\tthis.props.history.push(\"/board/\" + boardId);\n\t}\n\n\tshowModal = () => {\n\t\tthis.setState({ show: true });\n\t};\n\n\thideModal = (e = false) => {\n\t\tif (e) e.preventDefault();\n\t\tthis.setState({ show: false });\n\t};\n\n\t/**\n\t * Will set some additional filters on elaticsearch\n\t */\n\tsetScope = (e) => {\n\t\tconst scopes = [{ match: { user_id: this.props.userSession.user.id } }]; //we always want to match against user id\n\t\tif (parseInt(e.nextValue) === 1) {\n\t\t\tconst isPublic = { match: { is_public: 1 } }; //user also wants to see all public boards\n\t\t\tscopes.push(isPublic);\n\t\t}\n\t\tthis.setState({ filters: scopes, showAll: parseInt(e.nextValue) });\n\t};\n\t/**\n\t * We need to keep track of sort order so that when we ask API to hydrrate items\n\t * it returns them in the proper order\n\t */\n\tonSortUpdated = (prevQuery, nextQuery) => {\n\t\tlet sortString = \"\";\n\t\tfor (const [key, value] of Object.entries(nextQuery.sort[0])) {\n\t\t\t//we'll only ever have one sort so we can take the first element and parse it\n\t\t\tsortString = `${key}_${value.order}`;\n\t\t}\n\t\tthis.setState({ selectedSortOrder: sortString });\n\t};\n\t/**\n\t * Gets called everytime elastic updates\n\t * we'll take the id's it has returned and ask the api to hydrate them\n\t */\n\telasticResultHandler = (e) => {\n\t\tconst ids = [];\n\t\te.data.forEach((element) => {\n\t\t\tids.push(element.id);\n\t\t});\n\t\tif (ids.length) {\n\t\t\tthis.props.loadBoards(this.props.userSession, {\n\t\t\t\torderBy: this.state.selectedSortOrder,\n\t\t\t\twheres: { in: ids.join(\",\") },\n\t\t\t\twiths: relations.user_board,\n\t\t\t\tlimit: DEFAULT_SHOW,\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { boards } = this.props;\n\t\treturn (\n\t\t\t<MainContainer>\n\t\t\t\t<ReactiveBase app=\"user_boards\" url={elasticConfig.host} credentials={elasticConfig.credentials}>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"container card card-lg mx-auto\">\n\t\t\t\t\t\t\t<div className=\"card-title\">\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tBoards\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={this.showModal}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary float-right\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCreate New Board\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-text\">\n\t\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-2\"></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-right\"></span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectedFilters\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbutton: \"btn btn-primary\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"detail-line is_public_radio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mine\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setScope}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={parseInt(this.state.showAll) === 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"is_public_radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mine + Public\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setScope}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={parseInt(this.state.showAll) === 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"filter-widgets\" id=\"sessions\">\n\t\t\t\t\t\t\t\t\t\t\t\t<MultiList\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"manufacturers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataField=\"manufacturer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Manufacturers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"elastic-facet-label\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonError={this.setValues}\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"models\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MultiList\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"models\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataField=\"model\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"elastic-facet-label\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput: \"form-control\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Models\"\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"manufacturers\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonQueryChange={function (prevQuery, nextQuery) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// use the query with other js code\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"prevQuery\", prevQuery);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"nextQuery\", nextQuery);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-7\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ReactiveList\n\t\t\t\t\t\t\t\t\t\t\t\t\tonData={this.elasticResultHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonQueryChange={this.onSortUpdated}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultQuery={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool: { should: this.state.filters },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderResultStats={function (stats) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"elastic-meta\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stats.numberOfResults + \" results\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"col-12\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentId=\"results\"\n\t\t\t\t\t\t\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [\"models\", \"manufacturers\"],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpagination\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={DEFAULT_SHOW}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinfiniteScroll={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinnerClass={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpagination: \"elastic-paginate\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortOptions: \"form-control elastic-sort\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsortOptions={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Newest To Oldest\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Oldest To Newest\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Name A->Z\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Name Z->A\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"rating\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"asc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Rating 1-10\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField: \"rating\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortBy: \"desc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Rating 10-1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpaginationAt=\"both\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ data }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.boards &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.boards.map((board) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={board.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"col-md-12 col-sm-12\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<BoardCard\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteBoard={this.deleteBoard}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBoard={this.boardCreated}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teditBoard={this.editBoard}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Report />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"index-sidecard\">\n\t\t\t\t\t\t\t\t\t\t\t\t<NearestSpots />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6\"></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-right\"></span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ReactiveBase>\n\t\t\t\t<Modal show={this.state.show} handleClose={(e) => this.hideModal(e)}>\n\t\t\t\t\t<CreateUserBoard\n\t\t\t\t\t\tonSuccess={(e) => this.hideModal(e)}\n\t\t\t\t\t\tonSubmissionComplete={this.viewBoard}\n\t\t\t\t\t\tclose={this.hideModal}\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t</MainContainer>\n\t\t);\n\t}\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardIndex);\n","export const sizes = [\n    \"4'6\",\n    \"4'7\",\n    \"4'8\",\n    \"4'9\",\n    \"4'10\",\n    \"4'11\",\n    \"5'0\",\n    \"5'1\",\n    \"5'2\",\n    \"5'3\",\n    \"5'4\",\n    \"5'5\",\n    \"5'6\",\n    \"5'7\",\n    \"5'8\",\n    \"5'9\",\n    \"5'10\",\n    \"5'11\",\n    \"6'0\",\n    \"6'1\",\n    \"6'2\",\n    \"6'3\",\n    \"6'4\",\n    \"6'5\",\n    \"6'6\",\n    \"6'7\",\n    \"6'8\",\n    \"6'9\",\n    \"6'10\",\n    \"6'11\",\n    \"7'0\",\n    \"7'1\",\n    \"7'2\",\n    \"7'3\",\n    \"7'4\",\n    \"7'5\",\n    \"7'6\",\n    \"7'7\",\n    \"7'8\",\n    \"7'9\",\n    \"7'10\",\n    \"7'11\",\n    \"8'0\",\n    \"8'1\",\n    \"8'2\",\n    \"8'3\",\n    \"8'4\",\n    \"8'5\",\n    \"8'6\",\n    \"8'7\",\n    \"8'8\",\n    \"8'9\",\n    \"8'10\",\n    \"8'11\",\n    \"9'0\",\n    \"9'1\",\n    \"9'2\",\n    \"9'3\",\n    \"9'4\",\n    \"9'5\",\n    \"9'6\",\n    \"9'7\",\n    \"9'8\",\n    \"9'9\",\n    \"9'10\",\n    \"9'11\",\n    \"10'0\",\n    \"10'1\",\n    \"10'2\",\n    \"10'3\",\n    \"10'4\",\n    \"10'5\",\n    \"10'6\",\n    \"10'7\",\n    \"10'8\",\n    \"10'9\",\n    \"10'10\",\n    \"10'11\",\n    \"11'0\",\n    \"11'1\",\n    \"11'2\",\n    \"11'3\",\n    \"11'4\",\n    \"11'5\",\n    \"11'6\",\n    \"11'7\",\n    \"11'8\",\n    \"11'9\",\n    \"11'10\",\n    \"11'11\",\n    \"12'0\",\n    \"12'1\",\n    \"12'2\",\n    \"12'3\",\n    \"12'4\",\n    \"12'5\",\n    \"12'6\",\n    \"12'7\",\n    \"12'8\",\n    \"12'9\",\n    \"12'10\",\n    \"12'11\"\n]","import \"./css/Board.css\";\n\nimport _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FormCard } from \"./../layout/FormCard\";\nimport { Form } from \"react-advanced-form\";\nimport { RIEInput, RIETextArea } from \"@attently/riek\";\nimport SessionCard from \"./../session/SessionCard\";\nimport MainContainer from \"./../layout/MainContainer\";\nimport StarBar from \"./../layout/StarBar\";\nimport UserBoardRequests from \"./../../requests/UserBoardRequests\";\nimport ImageUploader from \"react-images-upload\";\nimport ImageGallery from \"react-image-gallery\";\nimport TypeAheadInput from \"./../form/TypeAheadInput\";\nimport { sizes } from \"./data/board_sizes\";\nimport InlineEdit, { InputType } from \"riec\";\nimport { loadBoards } from \"./../../actions/board\";\nimport { loadShapers } from \"./../../actions/shaper\";\nimport { loadUserSessions } from \"./../../actions/user_session\";\nimport {\n\tloadUserBoard,\n\tupdateUserBoard,\n\tloadUserBoardImages,\n\taddUserBoardImages,\n\tdeleteUserBoardImage,\n} from \"./../../actions/user_board\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsession: state.session,\n\t\tboard: state.user_boards.selected,\n\t\tboards: state.boards.data,\n\t\tshapers: state.shapers.data,\n\t\timages: state.user_board_images,\n\t};\n};\n\nconst mapDispachToProps = (dispatch) => {\n\treturn {\n\t\tloadBoard: (session, params) => dispatch(loadUserBoard(session, params)),\n\t\tloadSessions: (session, params) =>dispatch(loadUserSessions(session, params)),\n\t\tloadShapers: (session, params) => dispatch(loadShapers(session, params)),\n\t\tloadBoards: (session, params) => dispatch(loadBoards(session, params)),\n\t\teditUserBoard: (session, params) =>dispatch(updateUserBoard(session, params)),\n\t\tloadBoardImages: (session, params) =>dispatch(loadUserBoardImages(session, params)),\n\t\taddImages: (session, params) =>dispatch(addUserBoardImages(session, params)),\n\t\tdeleteBoardImage: (session, id) =>dispatch(deleteUserBoardImage(session, id)),\n\t};\n};\n\nconst relations = {\n\tuser_session: [\"Location\", \"SessionImage\"],\n\tselected_board: [\n\t\t\"Board.Manufacturer\",\n\t\t\"Session.SessionImage\",\n\t\t\"Session.UserBoard\",\n\t],\n\tshapers: [\"Board\"],\n\tboards: [\"Manufacturer\"],\n};\n\nclass BoardView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsession: [],\n\t\t\tboard_id: \"\",\n\t\t\tmanufacturer_id: \"\",\n\t\t\tuploaderInstance: 1,\n\t\t\timageIndex: 0,\n\t\t\tmodelPlaceholder: null,\n\t\t\tboardSizeOptions: this.prepBoardSizeOptions(sizes),\n\t\t};\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.session.isLoggedIn) {\n\t\t\tthis.props.loadBoard(this.props.session, {\n\t\t\t\tid: this.props.match.params.id,\n\t\t\t\twiths: relations.selected_board,\n\t\t\t});\n\t\t\tthis.props.loadSessions(this.props.session, {\n\t\t\t\twheres: { board_id: this.props.match.params.id },\n\t\t\t\twiths: relations.user_session,\n\t\t\t});\n\t\t\tthis.props.loadBoards(this.props.session, {\n\t\t\t\tlimit: 1000,\n\t\t\t\twiths: relations.boards,\n\t\t\t});\n\t\t\tthis.props.loadShapers(this.props.session, { withs: relations.shapers });\n\t\t\tthis.props.loadBoardImages(this.props.session, {\n\t\t\t\twheres: { user_board_id: this.props.match.params.id },\n\t\t\t});\n\t\t} else this.props.history.push(\"/board\");\n\t}\n\n\tprepBoardSizeOptions = (sizes) => {\n\t\tconst filteredSizes = [];\n\t\tsizes.forEach((size) => filteredSizes.push({ id: size }));\n\t\treturn filteredSizes;\n\t};\n\n\tonTypeAheadSelected = (propertyName, newValue) => {\n\t\tconst data = [];\n\t\tdata[propertyName] = newValue;\n\t\t//here we have to make sure to clear out the model if not belong to shaper\n\t\tif (propertyName === \"manufacturer_id\") {\n\t\t\tconst boardId = !Number.isInteger(this.state.board_id)\n\t\t\t\t? this.props.board.id\n\t\t\t\t: this.state.board_id;\n\t\t\tconst board = this.props.boards.find((board) => board.id === boardId);\n\t\t\tif (board && board.manufacturer_id !== newValue) {\n\t\t\t\tdata[\"board_id\"] = \"\";\n\t\t\t\tdata[\"modelPlaceholder\"] = \"Choose A Board\";\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\t...data,\n\t\t});\n\t};\n\n\tgetShaperSuggestions = (value, reason) => {\n\t\t//if its empty or just focused let's show everything\n\t\tif (!value || reason === \"type_ahead_focused\") return this.props.shapers;\n\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.shapers.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.name.toLowerCase().slice(0, inputLength) === inputValue\n\t\t\t  );\n\t};\n\n\tgetBoardSuggestions = (value, reason) => {\n\t\t//if its empty or just focused let's show everything\n\t\tif (!value || reason === \"type_ahead_focused\") {\n\t\t\tconst shaperId =\n\t\t\t\tthis.state.manufacturer_id === \"\"\n\t\t\t\t\t? this.props.board.Board.manufacturer_id\n\t\t\t\t\t: this.state.manufacturer_id;\n\t\t\treturn this.props.boards.filter(\n\t\t\t\t(entity) => entity.manufacturer_id === shaperId\n\t\t\t);\n\t\t}\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\tconst inputLength = inputValue.length;\n\t\treturn inputLength === 0\n\t\t\t? []\n\t\t\t: this.props.boards.filter(\n\t\t\t\t\t(entity) =>\n\t\t\t\t\t\tentity.model.toLowerCase().slice(0, inputLength) === inputValue &&\n\t\t\t\t\t\tentity.manufacturer_id === this.state.manufacturer_id\n\t\t\t  );\n\t};\n\n\tsubmitUpdate = (data) => {\n\t\tthis.props.editUserBoard(this.props.session, {\n\t\t\tid: this.props.match.params.id,\n\t\t\tdata: data,\n\t\t});\n\t\tthis.setState(data);\n\t};\n\n\treturnToIndex = (e) => {\n\t\tthis.props.history.length > 1\n\t\t\t? this.props.history.goBack()\n\t\t\t: this.props.history.push(\"/board\");\n\t};\n\n\tonDrop(pictureFiles, pictureDataURLs) {\n\t\tif (!pictureFiles.length) return;\n\t\tconst formData = UserBoardRequests.createFormRequest({\n\t\t\tuser_board_id: this.props.board.id,\n\t\t\tuser_id: this.props.session.user.id,\n\t\t});\n\t\tpictureFiles.forEach((file, i) => {\n\t\t\tformData.append(\"photo\", file);\n\t\t});\n\t\tthis.props.addImages(this.props.session, { data: formData });\n\t\tthis.setState({ uploaderInstance: this.state.uploaderInstance + 1 });\n\t}\n\n\tonImageLoad = (e) => {\n\t\tthis.setState({ selectedImage: this.props.images[0] });\n\t};\n\n\tonImageSelected = (e) => {\n\t\tthis.setState({ selectedImage: this.props.images[e], imageIndex: e });\n\t};\n\n\tdeleteImage = (e) => {\n\t\tnew Promise((resolve, reject) => {\n\t\t\tresolve(\n\t\t\t\tthis.props.deleteBoardImage(\n\t\t\t\t\tthis.props.session,\n\t\t\t\t\tthis.state.selectedImage.id\n\t\t\t\t)\n\t\t\t);\n\t\t}).then((e) => {\n\t\t\tconst newIndex =\n\t\t\t\tthis.state.imageIndex === 0 ? 0 : this.state.imageIndex - 1;\n\t\t\tthis.setState({\n\t\t\t\timageIndex: newIndex,\n\t\t\t\tselectedImage: this.props.images[newIndex],\n\t\t\t});\n\t\t});\n\t};\n\n\n\trender() {\n\t\tconst { board } = this.props;\n\t\tconst modelPlaceholder = this.state.modelPlaceholder\n\t\t\t? this.state.modelPlaceholder\n\t\t\t: board.Board\n\t\t\t? board.Board.model\n\t\t\t: \"Choose A Model\";\n\t\treturn (\n\t\t\t<MainContainer>\n\t\t\t\t<FormCard returnToIndex={this.returnToIndex}>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<div className=\"row col-md-12 container\">\n\t\t\t\t\t\t\t<h2 className=\"details col-md-12\">\n\t\t\t\t\t\t\t\t<RIEInput\n\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\tvalue={board.name || \"\"}\n\t\t\t\t\t\t\t\t\ts\n\t\t\t\t\t\t\t\t\tdefaultValue={board.name}\n\t\t\t\t\t\t\t\t\tchange={this.submitUpdate}\n\t\t\t\t\t\t\t\t\tpropName=\"name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<div className=\"preview col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t\t\t\t\t<ImageUploader\n\t\t\t\t\t\t\t\t\t\tkey={this.state.uploaderInstance}\n\t\t\t\t\t\t\t\t\t\twithIcon={false}\n\t\t\t\t\t\t\t\t\t\tbuttonText=\"Add Images!\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.onDrop}\n\t\t\t\t\t\t\t\t\t\timgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\"]}\n\t\t\t\t\t\t\t\t\t\tmaxFileSize={5242880}\n\t\t\t\t\t\t\t\t\t\twithPreview={false}\n\t\t\t\t\t\t\t\t\t\twithLabel={false}\n\t\t\t\t\t\t\t\t\t\tbuttonClassName=\"btn btn-link\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ImageGallery\n\t\t\t\t\t\t\t\t\t\titems={this.props.images}\n\t\t\t\t\t\t\t\t\t\tshowBullets={true}\n\t\t\t\t\t\t\t\t\t\tshowIndex={true}\n\t\t\t\t\t\t\t\t\t\tstartIndex={this.state.imageIndex}\n\t\t\t\t\t\t\t\t\t\tonSlide={this.onImageSelected}\n\t\t\t\t\t\t\t\t\t\tshowNav={false}\n\t\t\t\t\t\t\t\t\t\tonImageLoad={this.onImageLoad}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"details col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t<StarBar\n\t\t\t\t\t\t\t\t\t\tstars={board.rating}\n\t\t\t\t\t\t\t\t\t\tonClick={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\tsize=\"1x\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t<strong>Size:</strong>\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t<InlineEdit\n\t\t\t\t\t\t\t\t\t\ttype={InputType.Select}\n\t\t\t\t\t\t\t\t\t\tvalue={board.size || \"Select A Size\"}\n\t\t\t\t\t\t\t\t\t\tonChange={(data) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.submitUpdate({ size: data });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\toptions={this.state.boardSizeOptions}\n\t\t\t\t\t\t\t\t\t\tvalueKey=\"id\"\n\t\t\t\t\t\t\t\t\t\tlabelKey=\"id\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<strong>Shaper/Company:</strong>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\t\t\tentity={this.props.shapers}\n\t\t\t\t\t\t\t\t\t\tname=\"manufacturer_id\"\n\t\t\t\t\t\t\t\t\t\tkeyName=\"name\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\tboard.Board && board.Board.Manufacturer\n\t\t\t\t\t\t\t\t\t\t\t\t? board.Board.Manufacturer.name\n\t\t\t\t\t\t\t\t\t\t\t\t: \"Choose A Shaper\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.manufacturer_id}\n\t\t\t\t\t\t\t\t\t\tsetValue={this.onTypeAheadSelected}\n\t\t\t\t\t\t\t\t\t\tgetSuggestions={this.getShaperSuggestions}\n\t\t\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<strong>Model:</strong>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<TypeAheadInput\n\t\t\t\t\t\t\t\t\t\tentity={this.props.boards}\n\t\t\t\t\t\t\t\t\t\tname=\"board_id\"\n\t\t\t\t\t\t\t\t\t\tkeyName=\"model\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={modelPlaceholder}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.board_id}\n\t\t\t\t\t\t\t\t\t\tsetValue={this.onTypeAheadSelected}\n\t\t\t\t\t\t\t\t\t\tgetSuggestions={this.getBoardSuggestions}\n\t\t\t\t\t\t\t\t\t\tdisplay={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"detail-line\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<strong>Notes:</strong>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<RIETextArea\n\t\t\t\t\t\t\t\t\t\tvalue={board.notes || \"You have no notes for this session\"}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={board.notes}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control text-area\"\n\t\t\t\t\t\t\t\t\t\tchange={this.submitUpdate}\n\t\t\t\t\t\t\t\t\t\tpropName=\"notes\"\n\t\t\t\t\t\t\t\t\t\tvalidate={_.isString}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row col-12\" style={{ marginTop: \"1em\" }}>\n\t\t\t\t\t\t\t\t<h5>Used In Sessions...</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row col-12\">\n\t\t\t\t\t\t\t\t{board.Sessions &&\n\t\t\t\t\t\t\t\t\tboard.Sessions.reduce((mappedArray, session, index) => {\n\t\t\t\t\t\t\t\t\t\tif (index < 3) {\n\t\t\t\t\t\t\t\t\t\t\tmappedArray.push(\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-4\" key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SessionCard session={session} key={session.id} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn mappedArray;\n\t\t\t\t\t\t\t\t\t}, [])}\n\t\t\t\t\t\t\t\t{(!board.Sessions || board.Sessions.length === 0) && (\n\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t<h3>No Sessions found at the moment</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</FormCard>\n\t\t\t</MainContainer>\n\t\t);\n\t}\n}\nexport default connect(mapStateToProps, mapDispachToProps)(BoardView);\n","import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport Page404 from './components/home/Page404';\nimport Home from './components/home/Home';\nimport Login from './components/home/Login';\nimport UserIndex from './components/user/UserIndex';\n\nimport CreateUser from './components/user/Create';\nimport EditUser from './components/user/Edit';\nimport UserDashboard from './components/user/Dashboard';\nimport SessionIndex from './components/session/SessionIndex';\nimport CreateSession from './components/session/Create';\n\nimport SessionView from './components/session/View';\nimport BoardIndex from './components/board/BoardIndex';\nimport CreateUserBoard from './components/board/CreateUserBoard';\nimport BoardView from './components/board/View';\n\n\nconst mapStateToProps = state => {\n    return { session: state.session, user : state.user }\n}  \n\nclass App extends React.Component{\n  render() {\n    return (\n      <div>\n        <Navbar session={this.props.session} username={this.props.user.first_name} />\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/login'} exact component={Login} />\n          <Route path={'/logout'} exact component={Home} />\n          \n          <PrivateRoute path={'/user'} exact component={UserIndex} session={this.props.session} />\n          <PrivateRoute path={'/user/create'} exact component={CreateUser} session={this.props.session} />\n          <PrivateRoute path={'/user/dashboard'} exact component={UserDashboard} session={this.props.session} />\n          <PrivateRoute path={'/user/edit/:id'} exact component={EditUser} session={this.props.session}  />\n          \n          <Route  path={'/session'} exact component={SessionIndex } />\n          <PrivateRoute path={'/session/create'} exact component={CreateSession} session={this.props.session} />\n          <Route  path={'/session/:id'} exact component={SessionView } />\n\n          <Route  path={'/board'} exact component={BoardIndex } />\n          <PrivateRoute path={'/board/create'} exact component={CreateUserBoard} session={this.props.session} />\n          <Route  path={'/board/:id'} exact component={BoardView }/>\n\n          <Route component={Page404} />\n        </Switch>\n      </div>  \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n//export default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'; \nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();","require('dotenv').config();\nmodule.exports = {\n    host : process.env.REACT_APP_API_BASE, \n    port : process.env.REACT_APP_API_PORT,\n}","require('dotenv').config();\nmodule.exports = {\n    api_key : process.env.REACT_APP_FACEBOOK_APP_ID\n}"],"sourceRoot":""}